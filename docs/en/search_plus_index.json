{"./":{"url":"./","title":"Loopring","keywords":"","body":"关于路印 路印协议和路印交易所 路印协议是第一个基于zkRollup技术的去中心化交易协议。使用路印协议，您可以搭建一个不托管用户交易资产，基于订单撮合，高性能的去中心化交易所。由于采用了zkRollup这种Layer-2扩容技术，路印协议在以太坊不扩容的前提下，也可以每秒清算超过2000笔交易。 如果您想了解路印协议的设计和技术细节，请访问路印协议官网：https://loopring.org。 路印交易所是第一个使用路印协议搭建的去中心化交易平台。其网页应用的地址是：Loopring.io。路印交易所目前的版本是beta1，采用了路印协议3.1.1版本。其以太坊主网合约的地址为：0x944644Ea989Ec64c2Ab9eF341D383cEf586A5777。该地址对应的永久ENS为：beta1.loopringio.eth。 路印交易所并不是路印协议上唯一的交易所，WeDEX.io也是建立在路印协议的基础上。在您使用不同的路印去中心化交易所前，您需要明确知道您是在和哪个交易所打交道。路印协议本身的智能合约并不与用户直接交互，只为各个交易所合约提供包括用户注册，充值提现，交易清算在内的业务逻辑。 优势 路印协议保障了用户充值到交易所的资产不会被任何人挪用。即使交易所网站关闭或者运营者失联，也可以通过使用默克尔证明，在锁定期过后将全部资产提现出来。 路印协议不保障撮合的效率和公平性。撮合是由路印交易所的中继系统完成的，而中继是整个解决方案里面很中心化的部分。基于同样版本协议的不同交易所，可以采用不同的中继架构，因此用户可以根据不同交易所中继的效率和公平性，选择使用不同的交易所。路印协议保障中继撮合过程必须遵守一定的规则，但对中继没有任何服务质量的要求。 路印中继是闭源开发的，目前吞吐量大约是每秒200笔交易。 架构 路印交易所的整体架构如下图所示： 您需要了解的一些关键点包括： 路印的API除了提供读取中继数据功能，主要用来处理用户和客户端的链下请求（offchain requests），包括提交订单，取消订单，和提现。 用户账号注册，修改密码，充值必须通过以太坊交易来发起请求（onchain requests）。用户也可以通过以太坊交易，提交提现请求。路印协议要求交易所必须无条件按顺序处理所有链上请求。 路印具有与中心化交易所相似的高性能交易体验，这主要得益于中继的批处理能力。路印仅把以太坊作为数据存储层和零知识证明的验证层，不在以太坊上做与交易清结算相关的任何计算。 "},"glossary.html":{"url":"glossary.html","title":"Glossary","keywords":"","body":"术语 DEX Decenralized EXchange的简称，即去中心化交易所。路印交易所是搭建在以太坊上的去中心化交易所。 零知识证明。 一种证明者能够在不向验证者提供任何有用的信息的情况下，使验证者相信某个论断是正确的一种技术。 中继 路印交易所的后台系统，负责订单操作，交易撮合，零知识证明生成等。 链上请求 通过以太坊交易发送给路印交易所智能合约的请求。 链下请求 通过路印中继的API，绕过以太坊区块链，直接发送给路印交易所的请求。 基础通证（Base Token） 指一个交易对的交易对象。如LRC-ETH交易对中，LRC即为该交易对的基础通证。 计价通证（Quote Token） 指一个交易对的计价通证。如LRC-ETH交易对中，ETH即为该交易对的计价通证。 Size 指订单的基础通证数量。对于2000LRC 买 1EHT的订单，Size为2000。 Volume 指订单的计价通证数量。对于2000LRC 买 1EHT的订单，Volume为1。 EdDSA 路印协议用于对链下请求做签名的算法。路印交易所的链上请求需要用户使用以太坊地址对应的ECDSA私钥签名，而链下请求则需要使用交易账号的EdDSA私钥来签名。 "},"basics/orders.html":{"url":"basics/orders.html","title":"Orders","keywords":"","body":"订单模型 单向订单模型 与多数中心化交易所的订单模型不同，路印采用的是单向订单模型（Uni-Directional Order Model，简称UDOM）。也就是说，无论买单还是卖单，都统一用一种数据结构表示。我们先通过一个简化过的模型举几个路印限价单的例子（路印目前不支持市价单）。 在LRC-ETH交易对，一个用0.03价格卖出500个LRC的卖单可以这样表示： { // LRC-ETH市场：0.03价格卖出500个LRC的卖单 \"tokenS\": \"LRC\", \"tokenB\": \"ETH\", \"amountS\": 500, \"amountB\": 15 // = 500 * 0.03 } 订单数据项中的的字母S代表Sell，B代表Buy。 用0.03价格买入出500个LRC的买单这样表示： { // LRC-ETH市场：0.03价格买入500个LRC的买单 \"tokenS\": \"ETH\", \"tokenB\": \"LRC\", \"amountS\": 15, // = 500 * 0.03 \"amountB\": 500 } 单向订单模型中不显性表达交易对和价格。 不过上面的模型有个小问题：对完全成交的判断条件没有做说明。或者说，一个订单完全成交，是按照amountS的实际交易额达到了指定的值做标准，还是按照amountB的实际交易额达到了指定的值做标准。因此我们还需引入了另一个参数buy来指明完全成交的判断条件。如果buy==true，就按照amountB的实际交易判断是否完全成交；否者按照amountS的实际交易额判断。因此这上面的卖单和买单就需要这样修改： { // LRC-ETH市场：0.03价格卖出500个LRC的卖单 \"tokenS\": \"LRC\", \"tokenB\": \"ETH\", \"amountS\": 500, \"amountB\": 15 // = 500 * 0.03， \"buy\": false // 完全成交用amountS实际交易额判断 } { // LRC-ETH市场：0.03价格买入500个LRC的买单 \"tokenS\": \"ETH\", \"tokenB\": \"LRC\", \"amountS\": 15, // = 500 * 0.03 \"amountB\": 500, \"buy\": true // 完全成交用amountB实际交易额判断 } 注意：上面的卖单如果完全成交，实际上获得的ETH可能大于15ETH；而上面的买单如果完全成交，实际上支付的ETH可能少于15ETH。这就是buy这个参数对撮合引擎行为影响的结果。 将上面两个订单的buy值反转，会有什么效果呢？答案是：LRC-ETH交易对的卖单就变成了ETH-LRC交易对的买单；而LRC-ETH交易对的买单就变成了ETH-LRC交易对的卖单。也就是说，路印协议的一个交易对，实际上等同于多数中心化交易所的LRC-ETH和ETH-LRC两个交易对，并且可以表达这个两个交易对各自的买卖单，并将其放在一起撮合。 除了优雅和简单之外，路印协议的单向订单模型还使得在零知识证明电路中实现更简单的结算逻辑成为可能。 订单数据 路印实际的订单格式要更加复杂一些。您可以通过下面的JSON来表达一个路印的限价单。具体参数细节详见提交订单。 newOrder = { \"tokenSId\": 2, // LRC \"tokenBId\": 0, // ETH \"amountS\": \"500000000000000000000\", \"amountB\": \"15000000000000000000\", \"buy\": \"false\", \"exchangeId\": 2, \"accountId\": 1234, \"allOrNone\": \"false\", // 目前值必须为\"false\" \"maxFeeBips\": 50, \"label\": 211, \"validSince\": 1582094327, \"validUntil\": 1587278341, \"orderId\": 5, \"hash\": \"14504358714580556901944011952143357684927684879578923674101657902115012783290\", \"signatureRx\": \"15179969700843231746888635151106024191752286977677731880613780154804077177446\", \"signatureRy\": \"8103765835373541952843207933665617916816772340145691265012430975846006955894\", \"signatureS\" : \"4462707474665244243174020779004308974607763640730341744048308145656189589982\", \"clientOrderId\": \"Test01\", \"channelId\": \"channel1::maker1\" } 接下来我们为您对其中的一些数据项做进一步说明。 通证和数量 与简化模型不同，实际订单中通证不用其名字或ERC20地址表达，而是使用该通证在路印交易所的合约中注册的序号（Token ID）表达。上面的例子中，我们假设LRC和ETH的ID分别是2和0。 实际通证配置信息可以通过交易所支持的通证信息查询。 订单中的通证数量使用通证的最小单元，通过字符串类型表达。以LRC为例，LRC的ERC20合约中decimals为18，因此1.0LRC应该表示为\"1000000000000000000\"(1后面跟18个0)。每个通证的decimals都是由其智能合约决定；ETH的decimals是18。 请注意：订单中的buy和allOrNone的类型是字符串而不是布尔。 交易手续费 maxFeeBips=50代表该订单愿意支付给交易所的最高手续费比例是0.5%（maxFeeBips的单位是0.01%）。路印的交易手续费都是用成交获得的tokenB支付的。假设上面订单某次成交买入了\"10000000000000000000\"ETH（10ETH)，那么实际支付的手续费不会超过0.05ETH（\"10000000000000000000\" * 0.5%）。 实际支付的手续费比例是由路印中继决定的。中继会根据不同的VIP等级，给不同的用户相应的交易手续费折扣。路印协议不允许实际手续费比例大于用户订单中指定的最高手续费比例。 用户下单的时候，必须将maxFeeBips设置为不小于该用户在指定交易对的默认交易手续费比例。该信息可以通过/api/v2/user/feeRates查询获得。如果您信任路印交易所，也可以将这个maxFeeBips设置为协议允许的最大值63。 生效和过期时间 validSince代表订单生效时间，validUntil代表订单过期时间，其单位均为秒。 中继服务器收到订单时会验证订单中的这两个时间戳；路印协议的零知识证明电路代码在清算时候也需要判断这两个时间戳。由于zkRollup批处理延迟，以及以太坊上时间与服务器时间可能存在的偏差，我们强烈建议validSince设置为当前时间，且validSince和validUntil之间的时间窗口不小于一个星期，否则您的订单可能不会被撮合。 您可以通过使用validUntil时间戳来让订单自动过期，避免不必要的主动取消订单操作。 成交量与订单号 路印协议3.1.1为支持的每个通证预留了16384（2142^{14}2​14​​）个槽位来记录卖出该通证的订单的成交量。如果订单ID是N，那么使用的槽位编号就是N % 16384。换言之，如果槽位编号是m，该槽位就可以被用来记录具有下列ID的订单：m，m + 16384，m + 16384 * 2，... 以此类推。 每个槽位都记录了当前在追踪的订单的ID（初始值就是槽位编号），并且后续不接受订单ID比当前订单ID更小的订单。假设槽位1记录的是ID为32769（ 1 + 16384 * 2）的订单的订单状态，当用户下一个订单ID为1或16385的订单的时候，下单就会失败。当您在一个市场的活跃订单达到16384后，您需要先取消部分订单释放槽位，才可以继续下新的订单。 订单ID的最大值是1048576，即2202^{20}2​20​​。到达这个ID上限后，对应的通证就无法再下任何卖单。对于普通用户，这不是大问题；但对于程序化交易，您可能需要注册一个新账号继续交易。 路印协议3.5会去除订单ID最大值的限制，但依然保留槽位的设计和数量。 值得注意的是，同一用户在基础通证相同的多个交易对（如LRC-ETH和LRC-USDT）的所有卖单共享上面的16384槽位的。如果您不想在客户端维护交易对间订单ID和槽位的分配，您可以注册多个账号：一个账号参与LRC-ETH市场的交易，另一个账号参与LRC-USDT市场的交易。 我们知道这种设计带来的不便利。不过这是路印协议设计时候做的取舍。希望后续技术的进步可以将这个限制去除。 其它数据项 exchangeId：路印交易所在路印协议体系中的交易所序号。后续路印交易所升级智能合约后，这个exchangeId的值会变化。路印交易所beta1对应的exchangeId是2。 accountId：用户的账号ID。 allOrNone：如果是\"true\"，要求订单要么不成交，要么就要完全成交。目前这个参数还不被撮合引擎支持，因此请先设置为\"false\"。 label: 用于在协议层标记订单。该项的值对于交易清算没有任何影响。用户会对这个值做签名，因此该值对于不同实体间的分润根据可信度。 clientOrderId: 用户客户端在协议层外标记订单，可以是任意长度小于66的字符串。该项的值对于交易清算没有任何影响。用户不会对该项做签名。 channelId：订单渠道号, 用来标示订单从哪个渠道提交。 更多细节请参考提交订单。 "},"basics/key_mgmt.html":{"url":"basics/key_mgmt.html","title":"Key Management","keywords":"","body":"秘钥管理 使用路印API之前，您需要了解如何获取和更改您账号的EdDSA公秘钥对和ApiKey。调用API时，ApiKey需要通过HTTP头传递给路印的中继；EdDSA秘钥用来在客户端对链下请求做数字签名。 获取 首先您需要在路印交易所的网页界面（Loopring.io）注册一个账号。注册好账号之后，您可以使用『导出账号』功能将账号相关的信息通过JSON格式导出。这些信息包括EdDSA公秘钥对和ApiKey。 导出的JSON看起来应该类似于： { \"exchangeName\": \"LoopringDEX: Beta 1\", \"exchangeAddress\": \"0x944644Ea989Ec64c2Ab9eF341D383cEf586A5777\", \"exchangeId\": 2, \"accountAddress\": \"0xe9577b420d96adfc97ff1e9e0557f8c73d7247fe\", \"accountId\": 12345, \"apiKey\": \"qXJpfTKrF0O5jIDPYIu7YkVgLFbvm5uIgPKBmHP2kBpcdKZjgfFKhIlE8evo9lKa\", \"publicKeyX\": \"20230748339558541226323870947000799026059173889124399831342481595010628000129\", \"publicKeyY\": \"4980637490279511620100245514492532318691849019959343538108355525575855311214\", \"privateKey\": \"1242957328515765470505817310060337585626176314364086438653683782645761561015\" } 其中的前4项是常量，和路印交易所的版本相关；其它数据项和您的账号相关。其中publicKeyX与publicKeyY合起来是您账号的EdDSA公钥，privateKey是EdDSA秘钥。 请您一定妥善保管EdDSA秘钥和ApiKey。如果这些信息不慎泄漏，会导致您资产的丢失。 在任何情况下，路印交易所和其API均不会向您询问EdDSA私钥。 更改 您可以通过路印交易所的『更改密码』功能更改您账号的EdDSA公秘钥对。由于涉及到以太坊交易确认和零知识证明，新的EdDSA公秘钥对需要等待一段才会生效。您可以通过/api/v2/account接口获取账号信息，如果其中的frozen项为true，表明您的账号由于正在更新EdDSA公秘钥对，通过旧的EdDSA公秘钥对和新的EdDSA公秘钥对均无法下单。 如果您通过Loopring.io页面更改密码，您的ApiKey也会被自动更新。另外ApiKey还可以通过路印的API接口更改。 EdDSA派生算法 路印协议对EdDSA的生成方式不做任何限制。在路印交易所，每个账号的EdDSA公秘钥对是由这个账号的以太坊地址和交易密码派生计算出来的。由于地址是公开信息，因此您的交易密码的强度对于您交易资产的安全至关重要。 如果您使用路印交易所网站来设置交易密码，您的密码应该足够强大，无需担心被暴力破解；否则您需要特别注意不要使用简单密码。和中心化交易所不同，暴力破解您的EdDSA秘钥可以不必经过路印的中继系统 - 您的EdDSA公钥存储在以太坊上，黑客可以将其读取出来做暴力破解的对比参照。 EdDSA的派生算法如下所示： seed = keccakHash('LOOPRING' + address.toLowerCase() + keccakHash(password)) keyPair = myEdDSAGenerator.generate(seed) 其中keccakHash返回kecca256运算后的16进制字符串。 ApiKey生成方式 ApiKey是在注册账号时由路印中继随机生成的一个全局唯一字符串，与您的账号一对一绑定。 "},"basics/signing.html":{"url":"basics/signing.html","title":"Request Signing","keywords":"","body":"请求签名 路印API涉及到两种不同类别的签名。一种是通用API请求签名，用来验证API调用被用户授权；另一种是路印协议链下请求签名，用来向路印协议证明链下请求被用户授权。我们分别对这两种类别做个说明。 通用API请求签名 签名生成算法（伪代码） 初始化空字符串signatureBase 将请求方法字符串追加到signatureBase 将“＆”字符附加到signatureBase 将percent-encoded的请求路径（不是查询字符串）追加到signatureBase 将“＆”字符附加到signatureBase 初始化空字符串parameterString 对于GET / DELETE 数据 将请求里的参数按键的字典顺序排序，得到排过序后的键/值对 将percent-encoded的键附加到parameterString 将“=”字符附加到parameterString 将percent-encoded的值附加到parameterString 如果有更多的键/值对，请在parameterString后面附加“＆”字符 对于POST / PUT 数据 将发送请求的body json字符串附加到parameterString 将percent-encoded的parameterString附加到signatureBase 计算signatureBase的SHA-256哈希值hash 对hash用账号的私钥privateKey做签名，得到三个值：Rx,Ry, 和S 将Rx,Ry, 和S通过逗号分隔拼接成最终签名字符串：${Rx},${Ry},${S} 获取请求方法和URL 要生成签名，请先确定HTTP method和请求的base URL。loopring.io REST API使用四种请求方法： GET POST PUT DELETE Http method GET base URL是请求指向的URL，减去任何查询字符串或哈希参数。 请始终对loopring.io API使用\"https://\"协议。 Base URL: https://api.loopring.io/api/v2/apiKey 获取请求参数 接下来，从query string中获取请求参数(用于GET和POST请求)和body(POST、PUT)。 在HTTP请求中，参数是url编码的，但是您应该收集原始值。在上面的原始HTTP请求中，参数如下: 参数名 参数值 publicKeyX 13375450901292179417154974849571793069911517354720397125027633242680470075859 publicKeyY 13375450901292179417154974849571793069911517354720397125027633242680470075859 accountId 1 这些值需要进行编码和拼接: 按键按字典顺序对参数列表进行排序 对于每个键/值对: percent-encoded参数名并将其附加到输出字符串中 将' = '字符附加到输出字符串 percent-encoded参数值并将其附加到输出字符串中 如果还剩下更多的键/值对，则将'&'字符附加到输出字符串中 Parameter string: accountId=1&publicKeyX=13375450901292179417154974849571793069911517354720397125027633242680470075859&publicKeyY=13375450901292179417154974849571793069911517354720397125027633242680470075859 生成 signature base string signature base string是我们按照以下顺序将之前生成的三个字符串连接起来的结果:HTTP method、percent-encoded的base URL和percent-encoded的parameter string，在相邻组件之间用'&'字符连接。 Signature base string: GET&https%3A%2F%2Fapi.loopring.io%2Fapi%2Fv2%2FapiKey&accountId%3D1%26publicKeyX%3D13375450901292179417154974849571793069911517354720397125027633242680470075859%26publicKeyY%3D13375450901292179417154974849571793069911517354720397125027633242680470075859 请注意，每一部分都应该是经过percent-encoded的，因此在生成的签名基字符串中应该正好有两个'&'字符。 路印协议链下请求签名 路印协议3.1.1支持“订单”，和“链下提现”两种链下请求。由于这两种链下请求都会造成对交易所默克尔树的修改，通过路印API提交这是两种数据时，必须附带路印协议要求的特殊的签名。 路印协议3.1.1还支持“取消订单”链下请求，但会在后续的3.5版本中将其去掉。因此路印中继不会支持该链下请求。 链下请求签名包括以下步骤： 对请求r（JSON类型）进行规整，生成一个字符串s。 计算s的Poseidon哈希h（见下面章节）。 对h用账号的私钥privateKey做签名，得到三个值：Rx,Ry, 和S（见下面章节）。 将h、Rx、Ry、 和S转换成字符串后合并到r当中（请注意名字的改变）。 { ..., \"hash\": ..., \"signatureRx\": \"16367919966553849834214288740952929086694704883595501207054796240908626703398\", \"signatureRy\": \"5706650945525714138019517276433581394702490352313697178959212750249847059862\", \"signatureS\": \"410675649229327911665390972834008845981102813589085982164606483611508480748\" } 订单签名 订单中一些数据项需要按照特定序列化成一个整数数组，对这个数组计算Poseidon哈希，然后对该哈希做EdDSA签名。 订单的序列化规则，哈希，签名方式必须严格遵循路印协议规范。 下面我们用Python代码做示范： def sign_int_array(privateKey, serialized, t): PoseidonHashParams = poseidon_params( SNARK_SCALAR_FIELD, t, 6, 53, b'poseidon', 5, security_target=128 ) hash = poseidon(serialized, PoseidonHashParams) signedMessage = PoseidonEdDSA.sign(hash, FQ(int(privateKey))) return ({ \"hash\": str(hash), \"signatureRx\": str(signedMessage.sig.R.x), \"signatureRy\": str(signedMessage.sig.R.y), \"signatureS\": str(signedMessage.sig.s), }) def serialize_order(order): return [ int(order[\"exchangeId\"]), int(order[\"orderId\"]), int(order[\"accountId\"]), int(order[\"tokenSId\"]), int(order[\"tokenBId\"]), int(order[\"amountS\"]), int(order[\"amountB\"]), int(order[\"allOrNone\"]==\"true\"), int(order[\"validSince\"]), int(order[\"validUntil\"]), int(order[\"maxFeeBips\"]), int(order[\"buy\"]==\"true\"), int(order[\"label\"]) ] def sign_order(privateKey, order): serialized = serialize_order(order) signed = sign_int_array(serialized, 14 /* 注意这个t值 */) order.update(signed) 如果您不使用ethsnarks代码仓库计算Poseidon哈希，请一定注意Poseidon参数的配置，保证其与路印协议使用的参数完全一致。否则验证签名会失败。 链下提现签名 目前的路印API还不支持客户端提交链下提现请求。不过我们会很快增加这个API。 下面是链下提现的一个例子： { \"exchangeId\": 2, \"accountId\":100, \"tokenId\": 0, \"amount\": 1000000000000000000, \"feeTokenId\": \"2\", \"amountFee\": 20000000000000000000, \"label\": 0, \"nonce\": 10 } 其中的nonce值必须从0开始，不间断增加。 用Python对其签名的代码如下： def serialize_offchain_withdrawal(withdrawal): return [ int(withdrawal['exchangeId']), int(withdrawal['accountId']), int(withdrawal['tokenId']), int(withdrawal['amount']), int(withdrawal['feeTokenId']), int(withdrawal['amountFee']), int(withdrawal['label']), int(withdrawal['nonce']) ] def sign_offchain_withdrawal(privateKey, offchainWithdrawal): serialized = serialize_offchain_withdrawal(offchainWithdrawal) signed = sign_int_array(serialized, 9 /* 注意这个t值 */) offchainWithdrawal.update(signed) 参考资料 您可以通过下列文献和代码仓库了解更多关于Poseidon哈希和EdDSA签名的细节。 ethsnarks：https://github.com/HarryR/ethsnarks.git SHA256 Hash：https://en.wikipedia.org/wiki/SHA-2 EdDSA：https://en.wikipedia.org/wiki/EdDSA Poseidon Hash：https://www.poseidon-hash.info/ 您也可以参考我们的示范代码了解更多应用细节。 "},"basics/examples.html":{"url":"basics/examples.html","title":"Example Code","keywords":"","body":"示范代码 https://github.com/Loopring/hello_loopring代码仓库包含了一些简单示例，帮助您快速上手使用路印API。其中： hash_and_sign/：使用Python和ethsnarks开源仓库，计算任意字符串的Poseidon哈希，并对其做EdDSA的签名和验签。 trading/：提交订单，读取订单，和取消订单。 offchain_withdrawal/：链下提现的签名和提交（未完成）。 我们后续会不断完善，开源更多的代码教程。敬请期待。 "},"basics/contracts.html":{"url":"basics/contracts.html","title":"Smart Contracts","keywords":"","body":"智能合约 下面是路印协议和路印交易所在以太坊主网的合约列表。 LRC LRC代币: 0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD（lrctoken.eth） 路印协议（3.1.1） UniversalRegistry: 0x36F568EF555df25be4B6e15D16994F3A8374214E LoopringV3: 0x18dd1dda037B009F7C1024dDdD58e4Fe9F960ac7 ExchangeV3: 0x730Ea81C982939931d7514CC3Fbc22eAf7D372ec ProtocolFeeVaultAddress: 0x4b89f8996892d137c3dE1312d1dD4E4F4fFcA171（feevault.lrctoken.eth） BlockVerifier: 0x40598B41cc17a7E56dd72F415E8223aaCCA94cF7（blockverifier.lrctoken.eth） DowntimeCostCalculator: 0x873685f032c6Aa1572766401f3198a1f09A5C221 UniswapTokenSellerAddress: 0xdd5102f902b0892D1bbf2D2d0fCBE11ccEA1D537 UserStakingPoolAddress: 0xF4662bB1C4831fD411a95b8050B3A5998d8A4A5b（stakingpool.lrctoken.eth） ChainlinkTokenPriceProvider: 0x3B740FeE3ED82FA676286938E124A8Bb74553f93 MovingAveragePriceProvider: 0x388110217e4d194d501BB52c3AB28dC709EB450d 开源 路印协议代码完全开源，包括设计文档，智能合约代码，和电路代码。如果您有任何问题，请发电邮给路印基金会 - foundation@loopirng.org。 路印交易所（beta1） exchangeName: LoopringDEX: Beta 1 exchangeId: 2 exchangeAddress: 0x944644Ea989Ec64c2Ab9eF341D383cEf586A5777 owner: 0x4374D3d032B3c96785094ec9f384f07077792768 operator: 0x4374D3d032B3c96785094ec9f384f07077792768 "},"rest_apis.html":{"url":"rest_apis.html","title":"REST APIs","keywords":"","body":"REST APIs 本文主要描述路印交易所REST API的共性部分。 接入URL https://api.loopring.io 限流 每个API都有流量限制，超额的调用请求会被拒绝（返回429）。如果您长期超额调用，您的账号就会被列入黑名单，从而无法继续使用路印API。 HTTP头 X-API-KEY 除查询用户ApiKey外的所有API都需要指定X-API-KEYHTTP头，提供用户的ApiKey。 X-API-SIG 以下API需要指定X-API-SIGHTTP头，提供用户的的EdDSA数字签名： 查询用户ApiKey 取消订单 更新ApiKey 设置HTTP头 使用Python设置HTTP头的代码如下： def init_request_session(apiKey, sig): session = requests.session() session.headers.update({ 'Accept': 'application/json', 'X-API-KEY': apiKey, 'X-API-SIG': sig, }) return session API返回值 除了网络错误，所有API都会返回200状态码和代表API结果的JSON数据。JSON返回信息中都包含一个resultInfo字段，用以反馈API调用的通用状态，特别是出错时候的状态码。如果请求正常返回，则还会返回一个data字段，该字段的值也是一个JSON结构，针对不同API代表不同的业务数据，请参考每个API说明。 Response Field Type Required Description Example resultInfo ResultInfo Y Result of API invocation - ResultInfo Struct Field Type Required Description Example code integer Y Status code 0 message string Y Return message. This is used for debug only. Do not show to users \"SUCCESS\" Status code Status code Description 0 Success 100000 Unknown internal error 100001 Invalid parameter 100002 Request timeout 100202 Update fail 100203 Internal persistence error 100204 Duplicate request "},"dex_apis/getTimestamp.html":{"url":"dex_apis/getTimestamp.html","title":"Query the servers current time","keywords":"","body":"Query the servers current time Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/timestamp Function Returns the current server time, in milliseconds API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters None Request example HTTPCURLGET https://api.loopring.io/api/v2/timestamp HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/timestamp Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data integer N The returned servers current time 1584683483382 Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : 1584683483382 } Status code Status code Description 100000 Unknown error Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/getApiKey.html":{"url":"dex_apis/getApiKey.html","title":"Query users ApiKey","keywords":"","body":"Query users ApiKey Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/apiKey Function The system has generated an ApiKey when the user registered, user can query the current ApiKey by this method API description Header Field Type Required Description Example X-API-SIG string Y Signature \"13834524429315716527072245289201098743367448928828941694333300773464291931668,19252438164424980901323496067579767457298262609633182654968500317796010794338,1296502169918579172046019624886776672473813683541532008712357317204831986826\" Request parameters Field Type Required Description Example accountId integer Y AccountID 10 pubKeyX string Y public key X 123 pubKeyY string Y public key X 456 Request example HTTPCURLGET https://api.loopring.io/api/v2/apiKey?accountId=10&pubKeyX=123&pubKeyY=456 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-SIG: dkkfinfasdfcurl -H \"X-API-SIG:dkkfinfasdf\" https://api.loopring.io/api/v2/apiKey\\?accountId\\=10\\&pubKeyX\\=123\\&pubKeyY\\=456 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data string Y ApiKey 6BJaCehh0z4ta4TW5vwoKyo0yk5FdXkQxpt8AStG49aU3dMNC9jid6syyWPEMtTt Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"6BJaCehh0z4ta4TW5vwoKyo0yk5FdXkQxpt8AStG49aU3dMNC9jid6syyWPEMtTt\" } Status code Status code Description 100000 Unknown error 101002 The user was not found 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found 104004 No signature information provided 104005 Wrong signature information Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/applyApiKey.html":{"url":"dex_apis/applyApiKey.html","title":"Update users ApiKey","keywords":"","body":"Update users ApiKey Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method POST Visit path /api/v2/apiKey Function If the user wants to change the ApiKey, call this interface, put the last used ApiKey in the header, and the new ApiKey will be returned. After each call to getApiKey, the current ApiKey is returned. API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y AccountID 1 publicKeyX string Y public key X 13375450901292179417154974849571793069911517354720397125027633242680470075859 publicKeyY string Y public key Y 13375450901292179417154974849571793069911517354720397125027633242680470075859 Request example HTTPCURLPOST https://api.loopring.io/api/v2/apiKey HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfa Content-Type: application/json { \"accountId\" : 1, \"publicKeyX\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"publicKeyY\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\" }curl -X POST -H \"X-API-KEY:sra1aavfa\" -H \"Content-Type:application/json\" https://api.loopring.io/api/v2/apiKey -d \\ '{ \"accountId\" : 1, \"publicKeyX\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"publicKeyY\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\" }' Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data string Y ApiKey 6BJaCehh0z4ta4TW5vwoKyo0yk5FdXkQxpt8AStG49aU3dMNC9jid6syyWPEMtTt Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"6BJaCehh0z4ta4TW5vwoKyo0yk5FdXkQxpt8AStG49aU3dMNC9jid6syyWPEMtTt\" } Status code Status code Description 100000 Unknown error 101002 The user was not found 100001 Invalid argument 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found 104004 No signature information provided 104005 Wrong signature information Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/getNextOrderId.html":{"url":"dex_apis/getNextOrderId.html","title":"Get the next valid OrderId","keywords":"","body":"Get the next valid OrderId Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/orderId Function Get the next valid OrderId API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y Account ID 1 tokenSId integer Y The ID of The Token to be sold 0 Request example HTTPCURLGET https://api.loopring.io/api/v2/orderId?accountId=1&tokenSId=0 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/orderId\\?accountId\\=1\\&tokenSId\\=0 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data string N Order ID 108 Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"108\" } Status code Status code Description 100000 Unknown error 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/getOrderDetail.html":{"url":"dex_apis/getOrderDetail.html","title":"Get order details","keywords":"","body":"Get order details Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/order Function Get order details according to specified hash API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y Account id 1 orderHash string Y Order hash 13375450901292179417154974849571793069911517354720397125027633242680470075859 Request example HTTPCURLGET https://api.loopring.io/api/v2/order?accountId=1&orderHash=13375450901292179417154974849571793069911517354720397125027633242680470075859 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/order\\?accountId\\=1\\&orderHash\\=13375450901292179417154974849571793069911517354720397125027633242680470075859 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data OrderDetail N Response details of order / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"hash\" : \"0xfb5e711c2f044e94322ed262229cd8f0d0da00c22e1a00a0f5d881e45a38e1cf\", \"clientOrderId\" : \"200310143135081332\", \"size\" : \"8210000000000001024\", \"volume\" : \"163182534700000032\", \"price\" : \"0.01987608\", \"filledSize\" : \"0\", \"filledVolume\" : \"0\", \"filledFee\" : \"0\", \"status\" : \"processing\", \"validSince\" : 1583929591, \"validUntil\" : 1586521591, \"createdAt\" : 1583933191494, \"side\" : \"SELL\", \"market\" : \"LRC-ETH\" } } Status code Status code Description 100000 Unknown error 107001 User ID cannot be empty 107002 Order Hash cannot be empty 107003 Order does not exist 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS OrderDetail Response details of order Field Type Required Description Example hash string Y Order hash 0xfb5e711c2f044e94322ed262229cd8f0d0da00c22e1a00a0f5d881e45a38e1cf clientOrderId string Y Client order unique id 200310143135081332 size string Y Order quantity 8210000000000001024 volume string Y Order amount 163182534700000032 price string Y Deal price 0.01987608 filledSize string Y Volume 0 filledVolume string Y Turnover 0 filledFee string Y Fee 0 status string Y Order statusAllowable : ['processing', 'processed', 'cancelling', 'cancelled', 'expired', 'waiting'] processing validSince integer Y Order effective time from 1583929591 validUntil integer Y Order effective time to 1586521591 createdAt integer Y Order creation time 1583933191494 side string Y Sell or buyAllowable : ['SELL', 'BUY'] SELL market string Y Market LRC-ETH "},"dex_apis/submitOrder.html":{"url":"dex_apis/submitOrder.html","title":"Submit order","keywords":"","body":"Submit order Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method POST Visit path /api/v2/order Function 您需要以下步骤来下单： 通过/api/v2/orderId获取正确的orderId。如果您在客户端维护订单ID，可以跳过该步骤。 选择合理的validSince和validUntil值。我们推荐的参数是validSince设置为当前系统时间，validUntil设置成比当前时间晚至少一个星期。 选择合理的MaxFeeBips。我们建议这个值设置为63。 如果您想更好地追踪订单，请选择使用clientOrderId和（或）channelId。 对订单进行签名。 提交订单, 确认返回的结果包含订单哈希。 API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example exchangeId integer Y Exchange ID 1 orderId integer Y Order ID 1 accountId integer Y Account ID 1 tokenSId integer Y The ID of The Token to be sold 0 tokenBId integer Y The ID of The Token to be bought 2 amountS string Y Number of tokens to be sold 1000000000000000000 amountB string Y Number of tokens to be bought 1000000000000000000 allOrNone string N Whether the order can only be filled completely or 0 deals, currently only supports false false buy string Y Buy until buy or sell until buy true validSince integer Y Order effective time, accuracy is in seconds 1567053142 validUntil integer Y Order expiration time, accuracy is in seconds 1567053142 maxFeeBips integer Y Maximum order fee that the user can accept, value range (in ten thousandths) 1 ~ 63 20 label integer Y Order label, used to indicate the order attribute or source, etc., to participate in order signature, value range 0 ~ 65535 20 signatureRx string Y Rx part of order signed result 13375450901292179417154974849571793069911517354720397125027633242680470075859 signatureRy string Y Ry part of order signed result 13375450901292179417154974849571793069911517354720397125027633242680470075859 signatureS string Y S part of order signed result 13375450901292179417154974849571793069911517354720397125027633242680470075859 clientOrderId string N The unique order ID of the client 1 channelId string N Order channel ID, used to indicate from which channel the order was submitted hebao::subchannel::0001 Request example HTTPCURLPOST https://api.loopring.io/api/v2/order HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfa Content-Type: application/json { \"exchangeId\" : 1, \"orderId\" : 1, \"accountId\" : 1, \"tokenSId\" : 0, \"tokenBId\" : 2, \"amountS\" : \"1000000000000000000\", \"amountB\" : \"1000000000000000000\", \"allOrNone\" : \"false\", \"buy\" : \"true\", \"validSince\" : 1567053142, \"validUntil\" : 1567053142, \"maxFeeBips\" : 20, \"label\" : 20, \"signatureRx\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"signatureRy\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"signatureS\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"clientOrderId\" : \"1\", \"channelId\" : \"hebao::subchannel::0001\" }curl -X POST -H \"X-API-KEY:sra1aavfa\" -H \"Content-Type:application/json\" https://api.loopring.io/api/v2/order -d \\ '{ \"exchangeId\" : 1, \"orderId\" : 1, \"accountId\" : 1, \"tokenSId\" : 0, \"tokenBId\" : 2, \"amountS\" : \"1000000000000000000\", \"amountB\" : \"1000000000000000000\", \"allOrNone\" : \"false\", \"buy\" : \"true\", \"validSince\" : 1567053142, \"validUntil\" : 1567053142, \"maxFeeBips\" : 20, \"label\" : 20, \"signatureRx\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"signatureRy\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"signatureS\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"clientOrderId\" : \"1\", \"channelId\" : \"hebao::subchannel::0001\" }' Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data string N Hash of the order submitted 13375450901292179417154974849571793069911517354720397125027633242680470075859 Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\" } Status code Status code Description 100000 Unknown error 102001 Exchange ID is incorrect 102002 Unsupported TokenId in the order 102003 Invalid account ID 102004 Invalid order ID 102005 Market does not support 102006 Illegal rate field 102007 Order already exists 102008 Order has expired 102010 Order is missing signature information 102011 Insufficient user balance 102012 The order amount is too small 102014 Failed to freeze the amount, please try again later 102020 Exceeded the maximum order amount 102120 Order is not valid 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found 104004 No signature information provided 104005 Wrong signature information Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/batchSubmitOrder.html":{"url":"dex_apis/batchSubmitOrder.html","title":"Batch submit order","keywords":"","body":"Batch submit order Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method POST Visit path /api/v2/batchOrders Function Batch submit order, 10 order at most nonce. API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example orders List[SubmitOrderRequest] Y Orders to submit. / Request example HTTPCURLPOST https://api.loopring.io/api/v2/batchOrders HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfa Content-Type: application/json { \"orders\" : [ { \"exchangeId\" : 1, \"orderId\" : 1, \"accountId\" : 1, \"tokenSId\" : 0, \"tokenBId\" : 2, \"amountS\" : \"1000000000000000000\", \"amountB\" : \"1000000000000000000\", \"allOrNone\" : \"false\", \"buy\" : \"true\", \"validSince\" : 1567053142, \"validUntil\" : 1567053142, \"maxFeeBips\" : 20, \"label\" : 20, \"signatureRx\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"signatureRy\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"signatureS\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"clientOrderId\" : \"1\", \"channelId\" : \"hebao::subchannel::0001\" } ] }curl -X POST -H \"X-API-KEY:sra1aavfa\" -H \"Content-Type:application/json\" https://api.loopring.io/api/v2/batchOrders -d \\ '{ \"orders\" : [ { \"exchangeId\" : 1, \"orderId\" : 1, \"accountId\" : 1, \"tokenSId\" : 0, \"tokenBId\" : 2, \"amountS\" : \"1000000000000000000\", \"amountB\" : \"1000000000000000000\", \"allOrNone\" : \"false\", \"buy\" : \"true\", \"validSince\" : 1567053142, \"validUntil\" : 1567053142, \"maxFeeBips\" : 20, \"label\" : 20, \"signatureRx\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"signatureRy\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"signatureS\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"clientOrderId\" : \"1\", \"channelId\" : \"hebao::subchannel::0001\" } ] }' Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data List[SubmitOrderResult] Y Result of batch submit orders. / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [ { \"hash\" : \"0xfb5e711c2f044e94322ed262229cd8f0d0da00c22e1a00a0f5d881e45a38e1cf\", \"error\" : { \"code\" : 0, \"message\" : \"SUCCESS\" } } ] } Status code Status code Description 100000 Unknown error 100001 Invalid argument 104209 Partial batch operation failed Model SubmitOrderRequest Submit order request description Field Type Required Description Example exchangeId integer Y Exchange ID 1 orderId integer Y Order ID 1 accountId integer Y Account ID 1 tokenSId integer Y The ID of The Token to be sold 0 tokenBId integer Y The ID of The Token to be bought 2 amountS string Y Number of tokens to be sold 1000000000000000000 amountB string Y Number of tokens to be bought 1000000000000000000 allOrNone string N Whether the order can only be filled completely or 0 deals, currently only supports false false buy string Y Buy until buy or sell until buy true validSince integer Y Order effective time, accuracy is in seconds 1567053142 validUntil integer Y Order expiration time, accuracy is in seconds 1567053142 maxFeeBips integer Y Maximum order fee that the user can accept, value range (in ten thousandths) 1 ~ 63 20 label integer Y Order label, used to indicate the order attribute or source, etc., to participate in order signature, value range 0 ~ 65535 20 signatureRx string Y Rx part of order signed result 13375450901292179417154974849571793069911517354720397125027633242680470075859 signatureRy string Y Ry part of order signed result 13375450901292179417154974849571793069911517354720397125027633242680470075859 signatureS string Y S part of order signed result 13375450901292179417154974849571793069911517354720397125027633242680470075859 clientOrderId string N The unique order ID of the client 1 channelId string N Order channel ID, used to indicate from which channel the order was submitted hebao::subchannel::0001 ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS SubmitOrderResult Single order submission results. Field Type Required Description Example hash string Y Hash of order submitted 0xfb5e711c2f044e94322ed262229cd8f0d0da00c22e1a00a0f5d881e45a38e1cf error ResultInfo N Error for order submission failure. / ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/getOrders.html":{"url":"dex_apis/getOrders.html","title":"Get order list","keywords":"","body":"Get order list Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/orders Function Get order list according to conditions API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y Account id 1 market string N Market LRC-ETH start integer N Start time in millisecond (orders create time larger than this param will be matched) 1567053142000 end integer N End time in millisecond (orders create time less than this param will be matched) 1567053242000 fromHash string N Orders create time less than specific hash will be matched 2600105125336468966417510367500403435128941502452005674156103328855968837178 side string N Buy or SellAllowable : ['BUY', 'SELL'] BUY status string N Order statusAllowable : ['waiting', 'processing', 'processed', 'failed', 'cancelled', 'expired'] processing,processed limit integer N Limit of orders (default 50) 50 offset integer N Offset of orders (default 0)Default : 0L 0 Request example HTTPCURLGET https://api.loopring.io/api/v2/orders?accountId=1&market=LRC-ETH&start=1567053142000&end=1567053242000&fromHash=2600105125336468966417510367500403435128941502452005674156103328855968837178&side=BUY&status=processing,processed&limit=50&offset=0 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/orders\\?accountId\\=1\\&market\\=LRC-ETH\\&start\\=1567053142000\\&end\\=1567053242000\\&fromHash\\=2600105125336468966417510367500403435128941502452005674156103328855968837178\\&side\\=BUY\\&status\\=processing,processed\\&limit\\=50\\&offset\\=0 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data OrdersDetail N Response orders / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 10, \"orders\" : [ { \"hash\" : \"0xfb5e711c2f044e94322ed262229cd8f0d0da00c22e1a00a0f5d881e45a38e1cf\", \"clientOrderId\" : \"200310143135081332\", \"size\" : \"8210000000000001024\", \"volume\" : \"163182534700000032\", \"price\" : \"0.01987608\", \"filledSize\" : \"0\", \"filledVolume\" : \"0\", \"filledFee\" : \"0\", \"status\" : \"processing\", \"validSince\" : 1583929591, \"validUntil\" : 1586521591, \"createdAt\" : 1583933191494, \"side\" : \"SELL\", \"market\" : \"LRC-ETH\" } ] } } Status code Status code Description 100000 Unknown error 107001 User ID cannot be empty 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS OrdersDetail Response orders Field Type Required Description Example totalNum integer Y Total number of orders 10 orders List[OrderDetail] N List of order / OrderDetail Response details of order Field Type Required Description Example hash string Y Order hash 0xfb5e711c2f044e94322ed262229cd8f0d0da00c22e1a00a0f5d881e45a38e1cf clientOrderId string Y Client order unique id 200310143135081332 size string Y Order quantity 8210000000000001024 volume string Y Order amount 163182534700000032 price string Y Deal price 0.01987608 filledSize string Y Volume 0 filledVolume string Y Turnover 0 filledFee string Y Fee 0 status string Y Order statusAllowable : ['processing', 'processed', 'cancelling', 'cancelled', 'expired', 'waiting'] processing validSince integer Y Order effective time from 1583929591 validUntil integer Y Order effective time to 1586521591 createdAt integer Y Order creation time 1583933191494 side string Y Sell or buyAllowable : ['SELL', 'BUY'] SELL market string Y Market LRC-ETH "},"dex_apis/cancelOrders.html":{"url":"dex_apis/cancelOrders.html","title":"Cancel order","keywords":"","body":"Cancel order Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method DELETE Visit path /api/v2/orders Function Cancel orders based on account ID and order hash or unique client ID. The order HASH and the clients unique ID may not be transmitted. If neither is transmitted, all pending orders of the user will be cancelled. API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" X-API-SIG string Y Signature \"13834524429315716527072245289201098743367448928828941694333300773464291931668,19252438164424980901323496067579767457298262609633182654968500317796010794338,1296502169918579172046019624886776672473813683541532008712357317204831986826\" Request parameters Field Type Required Description Example accountId integer Y Account ID 1 orderHash string N Order HASH 13375450901292179417154974849571793069911517354720397125027633242680470075859 clientOrderId string N The unique order ID of the client 20200318000000001010 Request example HTTPCURLDELETE https://api.loopring.io/api/v2/orders?accountId=1&orderHash=13375450901292179417154974849571793069911517354720397125027633242680470075859&clientOrderId=20200318000000001010 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfa X-API-SIG: dkkfinfasdfcurl -X DELETE -H \"X-API-KEY:sra1aavfa\" -H \"X-API-SIG:dkkfinfasdf\" https://api.loopring.io/api/v2/orders\\?accountId\\=1\\&orderHash\\=13375450901292179417154974849571793069911517354720397125027633242680470075859\\&clientOrderId\\=20200318000000001010 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data boolean N Cancel order response true Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : true } Status code Status code Description 100000 Unknown error 104001 APIKEY cannot be empty 102117 No order can be cancelled 102118 Failed to cancel the order, please try again later 104002 APIKEY verification failed 104003 The user was not found Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/batchCancelOrdersByOrderHash.html":{"url":"dex_apis/batchCancelOrdersByOrderHash.html","title":"Cancel multiple order by hashes.","keywords":"","body":"Cancel multiple order by hashes. Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method DELETE Visit path /api/v2/orders/byHash Function Separate multiple hashes with commas,10 at most nonce. API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y Account ID 1 orderHash string Y Hash of order to be canceled,separate multiple hashes with commas. 13375450901292179417154974849571793069911517354720397125027633242680470075859,13375450901292179417154974849571793069911517354720397125027633242680470075860 Request example HTTPCURLDELETE https://api.loopring.io/api/v2/orders/byHash?accountId=1&orderHash=13375450901292179417154974849571793069911517354720397125027633242680470075859,13375450901292179417154974849571793069911517354720397125027633242680470075860 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -X DELETE -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/orders/byHash\\?accountId\\=1\\&orderHash\\=13375450901292179417154974849571793069911517354720397125027633242680470075859,13375450901292179417154974849571793069911517354720397125027633242680470075860 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data List[CancelOrderResult] Y Results of batch order cancellation. / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [ { \"id\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"result\" : true, \"error\" : { \"code\" : 0, \"message\" : \"SUCCESS\" } } ] } Status code Status code Description 100000 Unknown error 100001 Invalid argument 104209 Partial batch operation failed Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS CancelOrderResult result for order cancellation. Field Type Required Description Example id string Y Hash or clientOrderId of order cancelled. 13375450901292179417154974849571793069911517354720397125027633242680470075859 result boolean Y Order cancellation result. true error ResultInfo N Error for cancel order failure. / ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/batchCancelOrdersByClientOrderId.html":{"url":"dex_apis/batchCancelOrdersByClientOrderId.html","title":"Cancel multiple orders by clientOrderIds.","keywords":"","body":"Cancel multiple orders by clientOrderIds. Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method DELETE Visit path /api/v2/orders/byClientOrderId Function Multiple order IDs separated by commas, 10 at most. API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y Account ID 1 clientOrderId string Y ClientOrderIds of orders to be cancelled. 20200318000000001010,20200318000000001011 Request example HTTPCURLDELETE https://api.loopring.io/api/v2/orders/byClientOrderId?accountId=1&clientOrderId=20200318000000001010,20200318000000001011 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -X DELETE -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/orders/byClientOrderId\\?accountId\\=1\\&clientOrderId\\=20200318000000001010,20200318000000001011 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data List[CancelOrderResult] Y Results of batch order cancellation. / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [ { \"id\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"result\" : true, \"error\" : { \"code\" : 0, \"message\" : \"SUCCESS\" } } ] } Status code Status code Description 100000 Unknown error 100001 Invalid argument 104209 Partial batch operation failed Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS CancelOrderResult result for order cancellation. Field Type Required Description Example id string Y Hash or clientOrderId of order cancelled. 13375450901292179417154974849571793069911517354720397125027633242680470075859 result boolean Y Order cancellation result. true error ResultInfo N Error for cancel order failure. / ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/sendTransaction.html":{"url":"dex_apis/sendTransaction.html","title":"Send raw transaction","keywords":"","body":"Send raw transaction Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method POST Visit path /api/v2/sendEthTx Function Deposit,onchainWithdrawal,createAccount,updatePassword,enableToken use this interface. API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example data string Y Serialized Ethereum signature transaction as hexadecimal string 0xf8aa0a8502540be400830186a0949032dbf5669341c3d95bc02b4bde90e4e051db3580b844095ea7b30000000000000000000000001d307532a97879b866a6fe33bf4a517bd28de854ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff25a071af95d2a3eb01bb11f84d9c66d09924d97a2b3ce38e0079a2d56dfb13035df0a07404b3a48c40cc3e7b9893d88512ef526a67bf3c274548ec09f94386e0062fc2 Request example HTTPCURLPOST https://api.loopring.io/api/v2/sendEthTx HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfa Content-Type: application/json { \"data\" : \"0xf8aa0a8502540be400830186a0949032dbf5669341c3d95bc02b4bde90e4e051db3580b844095ea7b30000000000000000000000001d307532a97879b866a6fe33bf4a517bd28de854ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff25a071af95d2a3eb01bb11f84d9c66d09924d97a2b3ce38e0079a2d56dfb13035df0a07404b3a48c40cc3e7b9893d88512ef526a67bf3c274548ec09f94386e0062fc2\" }curl -X POST -H \"X-API-KEY:sra1aavfa\" -H \"Content-Type:application/json\" https://api.loopring.io/api/v2/sendEthTx -d \\ '{ \"data\" : \"0xf8aa0a8502540be400830186a0949032dbf5669341c3d95bc02b4bde90e4e051db3580b844095ea7b30000000000000000000000001d307532a97879b866a6fe33bf4a517bd28de854ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff25a071af95d2a3eb01bb11f84d9c66d09924d97a2b3ce38e0079a2d56dfb13035df0a07404b3a48c40cc3e7b9893d88512ef526a67bf3c274548ec09f94386e0062fc2\" }' Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data string N Transaction hash 0x28251d0415096a549604350e5ad1ff53f88b834bd195aa05b50610da41eff886 Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"0x28251d0415096a549604350e5ad1ff53f88b834bd195aa05b50610da41eff886\" } Status code Status code Description 100000 Unknown error 104202 The current node service is not available 104205 Error in internal request 104208 Node service returns an error message Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/getEthNonce.html":{"url":"dex_apis/getEthNonce.html","title":"Query the available nonce of the users Ethereum address","keywords":"","body":"Query the available nonce of the users Ethereum address Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/ethNonce Function Query the nonce of the Ethereum address API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example owner string Y Ethereum address to be queried 0x0000000000000000000000000000000000000000 Request example HTTPCURLGET https://api.loopring.io/api/v2/ethNonce?owner=0x0000000000000000000000000000000000000000 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/ethNonce\\?owner\\=0x0000000000000000000000000000000000000000 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data integer N The result of nonce 0 Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : 0 } Status code Status code Description 100000 Unknown error 104205 Error in internal request 104208 Node service returns an error message Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/getEthBalance.html":{"url":"dex_apis/getEthBalance.html","title":"Query ETH balance","keywords":"","body":"Query ETH balance Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/ethBalances Function Query the ETH balance of Ethereum address API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example owner string Y Ethereum address to be queried 0x0000000000000000000000000000000000000000 Request example HTTPCURLGET https://api.loopring.io/api/v2/ethBalances?owner=0x0000000000000000000000000000000000000000 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/ethBalances\\?owner\\=0x0000000000000000000000000000000000000000 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data string N Balance 0 Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"0\" } Status code Status code Description 100000 Unknown error 104205 Error in internal request 104208 Node service returns an error message Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/getRecommendedGasPrice.html":{"url":"dex_apis/getRecommendedGasPrice.html","title":"Get current recommended gas price","keywords":"","body":"Get current recommended gas price Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/recommendedGasPrice Function Get current recommended gas price in Gwei API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters None Request example HTTPCURLGET https://api.loopring.io/api/v2/recommendedGasPrice HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/recommendedGasPrice Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data string N Response value of current recommended gas price in Gwei 10000000000 Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"10000000000\" } Status code Status code Description 100000 Unknown error 105001 Failed to get recommended gas Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/getMarkets.html":{"url":"dex_apis/getMarkets.html","title":"Query the market configuration supported by the exchange","keywords":"","body":"Query the market configuration supported by the exchange Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/exchange/markets Function Query all supported market configurations API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters None Request example HTTPCURLGET https://api.loopring.io/api/v2/exchange/markets HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/exchange/markets Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data List[MarketInfo] N Markets list / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [ { \"market\" : \"LRC-USDT\", \"baseTokenId\" : 2, \"quoteTokenId\" : 0, \"precisionForPrice\" : 6, \"orderbookAggLevels\" : 4, \"enabled\" : false } ] } Status code Status code Description 100000 Unknown error Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS MarketInfo Field Type Required Description Example market string Y Market LRC-USDT baseTokenId integer Y The base token ID 2 quoteTokenId integer Y The quote token ID 0 precisionForPrice integer Y The server returns the maximum price accuracy supported in depth 6 orderbookAggLevels integer Y The server returns the maximum merge level supported in depth, the support range is 0 to this value 4 enabled boolean Y Is open trade or not false "},"dex_apis/getTokens.html":{"url":"dex_apis/getTokens.html","title":"Query the token information supported by the exchange","keywords":"","body":"Query the token information supported by the exchange Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/exchange/tokens Function Get all the token information supported by the exchange API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters None Request example HTTPCURLGET https://api.loopring.io/api/v2/exchange/tokens HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/exchange/tokens Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data List[TokenInfo] N Token list / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [ { \"type\" : \"ERC20\", \"tokenId\" : 2, \"symbol\" : \"LRC\", \"name\" : \"Loopring\", \"address\" : \"0x97241525fe425C90eBe5A41127816dcFA5954b06\", \"unit\" : \"LRC\", \"decimals\" : 18, \"precision\" : 6, \"minOrderAmount\" : \"10000000000000000\", \"maxOrderAmount\" : \"1000000000000000000\", \"dustOrderAmount\" : \"1000000000000000\", \"enabled\" : true } ] } Status code Status code Description 100000 Unknown error Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS TokenInfo Token Detail Field Type Required Description Example type string Y Token TypeAllowable : ['ERC20', 'ETH'] ERC20 tokenId integer Y Token Id in Loopring exchange contract 2 symbol string Y Token symbol LRC name string Y Token name Loopring address string Y Token contract address 0x97241525fe425C90eBe5A41127816dcFA5954b06 unit string Y Token unit LRC decimals integer Y Token decimals 18 precision integer Y Max decimals that relayer use for token 6 minOrderAmount string Y The minimum order quantity allowed for a single order 10000000000000000 maxOrderAmount string Y The maximum order quantity allowed for a single order 1000000000000000000 dustOrderAmount string Y amount that judged a dust order. 1000000000000000 enabled boolean Y Whether the server currently supports true "},"dex_apis/getExchangeInfo.html":{"url":"dex_apis/getExchangeInfo.html","title":"Query exchange basic info.","keywords":"","body":"Query exchange basic info. Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/exchange/info Function Query the necessary information to interact with the exchange API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters None Request example HTTPCURLGET https://api.loopring.io/api/v2/exchange/info HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/exchange/info Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data ExchangeInfo N Necessary exchange to interact with the exchange / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"chainId\" : 1, \"exchangeId\" : 1, \"exchangeAddress\" : \"0xbA1D5779131aa529F51B4B00186E9e97f3BeB854\", \"onchainFees\" : [ { \"type\" : \"withdraw\", \"fee\" : \"2000000000000000\" } ] } } Status code Status code Description 100000 Unknown error Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS ExchangeInfo Exchange basic info. Field Type Required Description Example chainId integer Y Ethereum network number supported by the exchange 1 exchangeId integer Y Exchange Id of loopring protocol 1 exchangeAddress string Y Contract address of exchange. 0xbA1D5779131aa529F51B4B00186E9e97f3BeB854 onchainFees List[FeeInfo] Y Fees charged by the exchange. / FeeInfo Information about fees charged by the exchange. Field Type Required Description Example type string Y Type of fee. withdraw fee string Y Fee amount of Ethereum in wei. 2000000000000000 "},"dex_apis/getDepth.html":{"url":"dex_apis/getDepth.html","title":"Get order book info","keywords":"","body":"Get order book info Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/depth Function Get order book info about a specified market API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example market string Y Market，not support multiple markets LRC-ETH level integer Y Order book aggregation level, bigger level means more aggregation. 2 limit integer N Limit on the number of bids and asks returnedDefault : 50 50 Request example HTTPCURLGET https://api.loopring.io/api/v2/depth?market=LRC-ETH&level=2&limit=50 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/depth\\?market\\=LRC-ETH\\&level\\=2\\&limit\\=50 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data Depth N Order book detail. / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"version\" : 147, \"timestamp\" : 432312312, \"bids\" : [[\"0.002\",\"21000\",\"33220000\",\"4\"]], \"asks\" : [] } } Status code Status code Description 100000 Unknown error 108000 Unsupported market 108001 Unsupported depth level Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS Depth Order book info Field Type Required Description Example version integer Y Order book update version number,the client judges whether the data is lost according to this (refer to the websocket for details) 147 timestamp integer Y Push timestamp 432312312 bids List[List[string]] Y Bids,each contains price, size, volume and order count. [[\"0.002\",\"21000\",\"33220000\",\"4\"]] asks List[List[string]] Y Asks,each contains price, size, volume and order count. [] "},"dex_apis/getTicker.html":{"url":"dex_apis/getTicker.html","title":"The response of querying the exchange ticker","keywords":"","body":"The response of querying the exchange ticker Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/ticker Function Query exchange 24-hour dimension Ticker API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example market string Y Market pair, support multiple markets LRC-ETH,LRC-USDT Request example HTTPCURLGET https://api.loopring.io/api/v2/ticker?market=LRC-ETH,LRC-USDT HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/ticker\\?market\\=LRC-ETH,LRC-USDT Response fields Field Type Required Description Example resultInfo ResultInfo Y The returned message / data List[List[string]] N Ticker information，each set of data includes market-pair, timestamp, Base Token total transaction volume, Quote Token total transaction volume, opening price, highest price, lowest price, closing price, number of transactions, buy order, sell order [[\"LRC-ETH\", \"1584565505000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\"]] Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [[\"LRC-ETH\", \"1584565505000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\"]] } Status code Status code Description 100000 Unknown error 100001 Invalid argument Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/getCandlestick.html":{"url":"dex_apis/getCandlestick.html","title":"Query candlestick data","keywords":"","body":"Query candlestick data Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/candlestick Function Query K-line data, currently supports data within a range of 2 years, each query can query up to 120 data points API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example market string Y Market pair, multi-market is not supported LRC-ETH interval string Y Interval, can be: 1min, 5min, 15min, 30min, 1hr, 2hr, 4hr, 12hr, 1d, 1w 5min start integer N start time 1584479105000 end integer N end time 1584565505000 limit integer N number of data points 120 Request example HTTPCURLGET https://api.loopring.io/api/v2/candlestick?market=LRC-ETH&interval=5min&start=1584479105000&end=1584565505000&limit=120 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/candlestick\\?market\\=LRC-ETH\\&interval\\=5min\\&start\\=1584479105000\\&end\\=1584565505000\\&limit\\=120 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data List[List[string]] N K-line data, each set of data includes start time, number of transactions, opening price, closing price, highest price, lowest price, total transaction volume of Base Token, total transaction volume of Quote Token [[\"1584565500000\",\"5\",\"1.5\",\"5.5\",\"8.8\",\"0.5\",\"0.5\",\"0.5\"]] Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [[\"1584565500000\",\"5\",\"1.5\",\"5.5\",\"8.8\",\"0.5\",\"0.5\",\"0.5\"]] } Status code Status code Description 100000 Unknown error 100001 Invalid argument Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/getPrice.html":{"url":"dex_apis/getPrice.html","title":"Query token fiat price","keywords":"","body":"Query token fiat price Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/price Function Query the token price with specified fiat currency API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example legal string Y The specified denomination currency, Supports incoming values USD,CNY,JPY,EUR,GBP,HKD USD Request example HTTPCURLGET https://api.loopring.io/api/v2/price?legal=USD HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/price\\?legal\\=USD Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data List[Price] N Return the fiat currency price / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [ { \"symbol\" : \"LRC\", \"price\" : \"0\", \"timestamp\" : 0 } ] } Status code Status code Description 100000 Unknown error Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS Price Token fiat price Field Type Required Description Example symbol string Y Token symbol LRC price string Y Fiat price 0 timestamp integer Y The synchronize time of query price 0 "},"dex_apis/getMarketTrade.html":{"url":"dex_apis/getMarketTrade.html","title":"Query market trades","keywords":"","body":"Query market trades Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/trade Function Query trades with specified market API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example market string Y Single market to query LRC-USDT limit integer N Number of queries 20 Request example HTTPCURLGET https://api.loopring.io/api/v2/trade?market=LRC-USDT&limit=20 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/trade\\?market\\=LRC-USDT\\&limit\\=20 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data MarketTrades N Market trades list / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 0, \"trades\" : [[\"0\",\"0\",\"BUY\",\"0\",\"0\",\"LRC-USDT\",\"0\"]] } } Status code Status code Description 100000 Unknown error Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS MarketTrades Market trades list Field Type Required Description Example totalNum integer Y The total number of trades in query result 0 trades List[List[string]] Y List of trades records, each trade record in the order of the array is the trade time, record id, buying and selling direction, volume, price, market and fees [[\"0\",\"0\",\"BUY\",\"0\",\"0\",\"LRC-USDT\",\"0\"]] "},"dex_apis/getAllowance.html":{"url":"dex_apis/getAllowance.html","title":"Query allowance","keywords":"","body":"Query allowance Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/allowances Function Query the allowance value of the Ethereum address on the exchange API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example owner string Y Ethereum address to be queried 0x0000000000000000000000000000000000000000 token string Y The token address to query 0x0000000000000000000000000000000000000000 Request example HTTPCURLGET https://api.loopring.io/api/v2/allowances?owner=0x0000000000000000000000000000000000000000&token=0x0000000000000000000000000000000000000000 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/allowances\\?owner\\=0x0000000000000000000000000000000000000000\\&token\\=0x0000000000000000000000000000000000000000 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data string N The value of allowance 0 Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"0\" } Status code Status code Description 100000 Unknown error 104205 Error in internal request 104208 Node service returns an error message Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/getTokenBalance.html":{"url":"dex_apis/getTokenBalance.html","title":"Query token balance","keywords":"","body":"Query token balance Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/tokenBalances Function Query the token balances of Ethereum address API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example owner string Y Ethereum address to be queried 0x0000000000000000000000000000000000000000 token string Y Token address to query 0x0000000000000000000000000000000000000000 Request example HTTPCURLGET https://api.loopring.io/api/v2/tokenBalances?owner=0x0000000000000000000000000000000000000000&token=0x0000000000000000000000000000000000000000 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/tokenBalances\\?owner\\=0x0000000000000000000000000000000000000000\\&token\\=0x0000000000000000000000000000000000000000 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data string N Balances 0 Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"0\" } Status code Status code Description 100000 Unknown error 104205 Error in internal request 104208 Node service returns an error message Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS "},"dex_apis/getAccount.html":{"url":"dex_apis/getAccount.html","title":"Query user information","keywords":"","body":"Query user information Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/account Function Query user information API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example owner string Y Ethereum address to be queried 0x123456 Request example HTTPCURLGET https://api.loopring.io/api/v2/account?owner=0x123456 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/account\\?owner\\=0x123456 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data DexAccount Y user information 0 Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"accountId\" : 10, \"frozen\" : false, \"publicKeyX\" : \"123\", \"publicKeyY\" : \"456\", \"tags\" : \"vip_1\" } } Status code Status code Description 100000 Unknown error 101001 The address was not found 101002 The user was not found Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS DexAccount user information Field Type Required Description Example accountId integer Y account ID 10 frozen boolean Y The frozen state of the account, true stands for frozen false publicKeyX string Y public key X 123 publicKeyY string Y public key Y 456 tags string N The level and other special identifiers of the user, separated by\",\" vip_1 "},"dex_apis/getUserCreate.html":{"url":"dex_apis/getUserCreate.html","title":"Get user creation list","keywords":"","body":"Get user creation list Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/user/createInfo Function Get user creation list API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y Account id 1 start integer N Start time in millisecond (create time larger than this param will be matched)Default : 0L 1578558098000 end integer N End time in millisecond (create time less than this param will be matched)Default : 0L 1578558098000 status string N Current statusAllowable : ['processing', 'processed', 'received', 'failed'] processing,processed limit integer N Limit of list (default 50) 50 fromHash string N Create time less than specific hash will be matched 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 offset integer N Offset of list (default 0)Default : 0L 1 Request example HTTPCURLGET https://api.loopring.io/api/v2/user/createInfo?accountId=1&start=1578558098000&end=1578558098000&status=processing,processed&limit=50&fromHash=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632&offset=1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/createInfo\\?accountId\\=1\\&start\\=1578558098000\\&end\\=1578558098000\\&status\\=processing,processed\\&limit\\=50\\&fromHash\\=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\\&offset\\=1 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data TxDataList N User transactions response / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 1, \"transactions\" : [ { \"id\" : 1, \"txType\" : \"deposit\", \"symbol\" : \"LRC\", \"amount\" : \"1000000000000000000\", \"realAmount\" : \"1000000000000000000\", \"receiver\" : 1, \"txHash\" : \"0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\", \"feeAmount\" : \"1000000000000000\", \"status\" : \"processing\", \"progress\" : \"100%\", \"timestamp\" : 1578572292000, \"depositType\" : \"DEPOSIT\", \"blockNum\" : 100 } ] } } Status code Status code Description 100000 Unknown error 107001 User ID cannot be empty 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS TxDataList User transactions response Field Type Required Description Example totalNum integer Y Total number of user transactions 1 transactions List[TxData] Y list of user transaction / TxData Response data Field Type Required Description Example id integer Y Unique id 1 txType string Y User transaction typeAllowable : ['deposit', 'onchainWithdrawal', 'transfer', 'createAccount', 'changePassword'] deposit symbol string Y Token symbol LRC amount string Y Request amount 1000000000000000000 realAmount string Y Effective amount 1000000000000000000 receiver integer N Receiver id 1 txHash string Y Transaction hash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 feeAmount string Y User transaction type 1000000000000000 status string Y Current statusAllowable : ['processing', 'processed', 'received', 'failed'] processing progress string Y Progress 100% timestamp integer Y Update time 1578572292000 depositType string N Deposit typeAllowable : ['DEPOSIT', 'CREATE_ACCOUNT', 'UPDATE_ACCOUNT'] DEPOSIT blockNum integer N Block height 100 "},"dex_apis/getUserUpdate.html":{"url":"dex_apis/getUserUpdate.html","title":"Get user update list","keywords":"","body":"Get user update list Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/user/updateInfo Function Get user update list API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y Account id 1 start integer N Start time in millisecond (create time larger than this param will be matched)Default : 0L 1578558098000 end integer N End time in millisecond (create time less than this param will be matched)Default : 0L 1578558098000 status string N Current statusAllowable : ['processing', 'processed', 'received', 'failed'] processing,processed limit integer N Limit of list (default 50) 50 fromHash string N Create time less than specific hash will be matched 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 offset integer N Offset of list (default 0)Default : 0L 1 Request example HTTPCURLGET https://api.loopring.io/api/v2/user/updateInfo?accountId=1&start=1578558098000&end=1578558098000&status=processing,processed&limit=50&fromHash=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632&offset=1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/updateInfo\\?accountId\\=1\\&start\\=1578558098000\\&end\\=1578558098000\\&status\\=processing,processed\\&limit\\=50\\&fromHash\\=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\\&offset\\=1 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data TxDataList N User transactions response / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 1, \"transactions\" : [ { \"id\" : 1, \"txType\" : \"deposit\", \"symbol\" : \"LRC\", \"amount\" : \"1000000000000000000\", \"realAmount\" : \"1000000000000000000\", \"receiver\" : 1, \"txHash\" : \"0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\", \"feeAmount\" : \"1000000000000000\", \"status\" : \"processing\", \"progress\" : \"100%\", \"timestamp\" : 1578572292000, \"depositType\" : \"DEPOSIT\", \"blockNum\" : 100 } ] } } Status code Status code Description 100000 Unknown error 107001 User ID cannot be empty 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS TxDataList User transactions response Field Type Required Description Example totalNum integer Y Total number of user transactions 1 transactions List[TxData] Y list of user transaction / TxData Response data Field Type Required Description Example id integer Y Unique id 1 txType string Y User transaction typeAllowable : ['deposit', 'onchainWithdrawal', 'transfer', 'createAccount', 'changePassword'] deposit symbol string Y Token symbol LRC amount string Y Request amount 1000000000000000000 realAmount string Y Effective amount 1000000000000000000 receiver integer N Receiver id 1 txHash string Y Transaction hash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 feeAmount string Y User transaction type 1000000000000000 status string Y Current statusAllowable : ['processing', 'processed', 'received', 'failed'] processing progress string Y Progress 100% timestamp integer Y Update time 1578572292000 depositType string N Deposit typeAllowable : ['DEPOSIT', 'CREATE_ACCOUNT', 'UPDATE_ACCOUNT'] DEPOSIT blockNum integer N Block height 100 "},"dex_apis/getUserBalances.html":{"url":"dex_apis/getUserBalances.html","title":"Query the users balance in exchange","keywords":"","body":"Query the users balance in exchange Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/user/balances Function Query the users balance in exchange API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y AccountID 1 tokens string N Asset list 0,1 Request example HTTPCURLGET https://api.loopring.io/api/v2/user/balances?accountId=1&tokens=0,1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/balances\\?accountId\\=1\\&tokens\\=0,1 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data List[Balance] Y Asset information / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [ { \"accountId\" : 10, \"tokenId\" : 10, \"totalAmount\" : \"100\", \"frozenAmount\" : \"100\" } ] } Status code Status code Description 100000 Unknown error 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS Balance Asset information Field Type Required Description Example accountId integer Y Account ID 10 tokenId integer Y Token ID 10 totalAmount string Y Amount of the asset 100 frozenAmount string Y Amount of the frozen Asset frozen 100 "},"dex_apis/getUserDeposits.html":{"url":"dex_apis/getUserDeposits.html","title":"Get user deposit list","keywords":"","body":"Get user deposit list Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/user/deposits Function Get user deposit list API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y Account id 1 start integer N Start time in millisecond (create time larger than this param will be matched)Default : 0L 1578558098000 end integer N End time in millisecond (create time less than this param will be matched)Default : 0L 1578558098000 allType boolean N Whether to obtain the deposit record accompanying the user creation false status string N Current statusAllowable : ['processing', 'processed', 'received', 'failed'] processing,processed limit integer N Limit of list (default 50) 50 fromHash string N Create time less than specific hash will be matched 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 tokenSymbol string N Token symbol ETH offset integer N Offset of list (default 0)Default : 0L 1 Request example HTTPCURLGET https://api.loopring.io/api/v2/user/deposits?accountId=1&start=1578558098000&end=1578558098000&allType=false&status=processing,processed&limit=50&fromHash=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632&tokenSymbol=ETH&offset=1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/deposits\\?accountId\\=1\\&start\\=1578558098000\\&end\\=1578558098000\\&allType\\=false\\&status\\=processing,processed\\&limit\\=50\\&fromHash\\=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\\&tokenSymbol\\=ETH\\&offset\\=1 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data TxDataList N User transactions response / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 1, \"transactions\" : [ { \"id\" : 1, \"txType\" : \"deposit\", \"symbol\" : \"LRC\", \"amount\" : \"1000000000000000000\", \"realAmount\" : \"1000000000000000000\", \"receiver\" : 1, \"txHash\" : \"0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\", \"feeAmount\" : \"1000000000000000\", \"status\" : \"processing\", \"progress\" : \"100%\", \"timestamp\" : 1578572292000, \"depositType\" : \"DEPOSIT\", \"blockNum\" : 100 } ] } } Status code Status code Description 100000 Unknown error 107001 User ID cannot be empty 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS TxDataList User transactions response Field Type Required Description Example totalNum integer Y Total number of user transactions 1 transactions List[TxData] Y list of user transaction / TxData Response data Field Type Required Description Example id integer Y Unique id 1 txType string Y User transaction typeAllowable : ['deposit', 'onchainWithdrawal', 'transfer', 'createAccount', 'changePassword'] deposit symbol string Y Token symbol LRC amount string Y Request amount 1000000000000000000 realAmount string Y Effective amount 1000000000000000000 receiver integer N Receiver id 1 txHash string Y Transaction hash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 feeAmount string Y User transaction type 1000000000000000 status string Y Current statusAllowable : ['processing', 'processed', 'received', 'failed'] processing progress string Y Progress 100% timestamp integer Y Update time 1578572292000 depositType string N Deposit typeAllowable : ['DEPOSIT', 'CREATE_ACCOUNT', 'UPDATE_ACCOUNT'] DEPOSIT blockNum integer N Block height 100 "},"dex_apis/getUserWithdrawals.html":{"url":"dex_apis/getUserWithdrawals.html","title":"Get user withdrawal list","keywords":"","body":"Get user withdrawal list Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/user/withdrawals Function Get user withdrawal list API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y Account id 1 start integer N Start time in millisecond (create time larger than this param will be matched)Default : 0L 1578558098000 end integer N End time in millisecond (create time less than this param will be matched)Default : 0L 1578558098000 status string N Current statusAllowable : ['processing', 'processed', 'received', 'failed'] processing,processed limit integer N Limit of list (default 50) 50 fromHash string N Create time less than specific hash will be matched 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 tokenSymbol string N Token symbol LRC offset integer N Offset of list (default 0)Default : 0L 1 Request example HTTPCURLGET https://api.loopring.io/api/v2/user/withdrawals?accountId=1&start=1578558098000&end=1578558098000&status=processing,processed&limit=50&fromHash=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632&tokenSymbol=LRC&offset=1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/withdrawals\\?accountId\\=1\\&start\\=1578558098000\\&end\\=1578558098000\\&status\\=processing,processed\\&limit\\=50\\&fromHash\\=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\\&tokenSymbol\\=LRC\\&offset\\=1 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data TxDataList N User transactions response / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 1, \"transactions\" : [ { \"id\" : 1, \"txType\" : \"deposit\", \"symbol\" : \"LRC\", \"amount\" : \"1000000000000000000\", \"realAmount\" : \"1000000000000000000\", \"receiver\" : 1, \"txHash\" : \"0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\", \"feeAmount\" : \"1000000000000000\", \"status\" : \"processing\", \"progress\" : \"100%\", \"timestamp\" : 1578572292000, \"depositType\" : \"DEPOSIT\", \"blockNum\" : 100 } ] } } Status code Status code Description 100000 Unknown error 107001 User ID cannot be empty 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS TxDataList User transactions response Field Type Required Description Example totalNum integer Y Total number of user transactions 1 transactions List[TxData] Y list of user transaction / TxData Response data Field Type Required Description Example id integer Y Unique id 1 txType string Y User transaction typeAllowable : ['deposit', 'onchainWithdrawal', 'transfer', 'createAccount', 'changePassword'] deposit symbol string Y Token symbol LRC amount string Y Request amount 1000000000000000000 realAmount string Y Effective amount 1000000000000000000 receiver integer N Receiver id 1 txHash string Y Transaction hash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 feeAmount string Y User transaction type 1000000000000000 status string Y Current statusAllowable : ['processing', 'processed', 'received', 'failed'] processing progress string Y Progress 100% timestamp integer Y Update time 1578572292000 depositType string N Deposit typeAllowable : ['DEPOSIT', 'CREATE_ACCOUNT', 'UPDATE_ACCOUNT'] DEPOSIT blockNum integer N Block height 100 "},"dex_apis/getUserTransfers.html":{"url":"dex_apis/getUserTransfers.html","title":"Get user transfer list","keywords":"","body":"Get user transfer list Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/user/transfers Function Get user transfer list API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y Account id 1 start integer N Start time in millisecond (create time larger than this param will be matched)Default : 0L 1578558098000 end integer N End time in millisecond (create time less than this param will be matched)Default : 0L 1578558098000 status string N Current statusAllowable : ['processing', 'processed', 'received', 'failed'] processing,processed limit integer N Limit of list (default 50) 50 fromHash string N Create time less than specific hash will be matched 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 tokenSymbol string N Token symbol LRC offset integer N Offset of list (default 0)Default : 0L 1 Request example HTTPCURLGET https://api.loopring.io/api/v2/user/transfers?accountId=1&start=1578558098000&end=1578558098000&status=processing,processed&limit=50&fromHash=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632&tokenSymbol=LRC&offset=1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/transfers\\?accountId\\=1\\&start\\=1578558098000\\&end\\=1578558098000\\&status\\=processing,processed\\&limit\\=50\\&fromHash\\=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\\&tokenSymbol\\=LRC\\&offset\\=1 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data TxDataList N User transactions response / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 1, \"transactions\" : [ { \"id\" : 1, \"txType\" : \"deposit\", \"symbol\" : \"LRC\", \"amount\" : \"1000000000000000000\", \"realAmount\" : \"1000000000000000000\", \"receiver\" : 1, \"txHash\" : \"0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\", \"feeAmount\" : \"1000000000000000\", \"status\" : \"processing\", \"progress\" : \"100%\", \"timestamp\" : 1578572292000, \"depositType\" : \"DEPOSIT\", \"blockNum\" : 100 } ] } } Status code Status code Description 100000 Unknown error 107001 User ID cannot be empty 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS TxDataList User transactions response Field Type Required Description Example totalNum integer Y Total number of user transactions 1 transactions List[TxData] Y list of user transaction / TxData Response data Field Type Required Description Example id integer Y Unique id 1 txType string Y User transaction typeAllowable : ['deposit', 'onchainWithdrawal', 'transfer', 'createAccount', 'changePassword'] deposit symbol string Y Token symbol LRC amount string Y Request amount 1000000000000000000 realAmount string Y Effective amount 1000000000000000000 receiver integer N Receiver id 1 txHash string Y Transaction hash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 feeAmount string Y User transaction type 1000000000000000 status string Y Current statusAllowable : ['processing', 'processed', 'received', 'failed'] processing progress string Y Progress 100% timestamp integer Y Update time 1578572292000 depositType string N Deposit typeAllowable : ['DEPOSIT', 'CREATE_ACCOUNT', 'UPDATE_ACCOUNT'] DEPOSIT blockNum integer N Block height 100 "},"dex_apis/getUserTrades.html":{"url":"dex_apis/getUserTrades.html","title":"Get user trading list","keywords":"","body":"Get user trading list Traffic limit (#Request/seconds): 5 / 1 API Overview HTTP method GET Visit path /api/v2/user/trades Function Get user trading list API description Header Field Type Required Description Example X-API-KEY string Y ApiKey \"HlkcGxbqBeaF76j4rvPaOasyfPwnkQ6B6DQ6THZWbvrAGxzEdulXQvOKLrRWZLnN\" Request parameters Field Type Required Description Example accountId integer Y Account id 1 orderHash string N Order hash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 offset integer N Offset of list (default 0) 1 limit integer N Limit of list (default 50) 50 fromId integer N Create time less than specific id will be matched 1 Request example HTTPCURLGET https://api.loopring.io/api/v2/user/trades?accountId=1&orderHash=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632&offset=1&limit=50&fromId=1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/trades\\?accountId\\=1\\&orderHash\\=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\\&offset\\=1\\&limit\\=50\\&fromId\\=1 Response fields Field Type Required Description Example resultInfo ResultInfo Y Information returned by the API / data TradeList N Response trading list / Response example { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 100, \"trades\" : [[\"0\",\"0\",\"BUY\",\"0\",\"0\",\"LRC-USDT\",\"0\"]] } } Status code Status code Description 100000 Unknown error 104001 APIKEY cannot be empty 104002 APIKEY verification failed 104003 The user was not found Model ResultInfo Information returned by the API Field Type Required Description Example code integer Y The returned code 0 message string Y The returned message SUCCESS TradeList Response trading list Field Type Required Description Example totalNum integer Y Total number of tradings 100 trades List[List[string]] Y List of trades records, each trade record in the order of the array is the trade time, record id, buying and selling direction, volume, price, market and fees [[\"0\",\"0\",\"BUY\",\"0\",\"0\",\"LRC-USDT\",\"0\"]] "},"websocket/overview.html":{"url":"websocket/overview.html","title":"WebSocket APIs","keywords":"","body":"WebSocket APIs 接入URL wss://api.loopring.io/v2/ws 心跳 当用户连接到路印中继的WebSocket之后，中继会进行心跳检测，每30秒会发送“ping”信息，期待接收客户端的“pong”信息。2分钟未收到回复会自动断开连接。 订阅规则 用户在与路印中继建立WebSocket连接之后，可以订阅消息。需满足以下规则： 用户可以一次订阅或者取消订阅多个主题，如果订阅的多个主题中有需要ApiKey的，则必须包含ApiKey。 用户可以重复订阅相同的主题，最新的订阅条件会覆盖之前的订阅条件。 用户在一次订阅中，不允许订阅相同的主题 用户在取消订阅需要ApiKey的主题时，必须包含订阅该主题时所使用的ApiKey。 请求 字段 类型 必须 说明 举例 op string 是 订阅或者取消订阅（\"sub\"或者\"unSub\"） \"sub\" apiKey string 否 订阅要求传ApiKey的主题才是必须的 “16M2hKHw9b5VuP21YBAJQmCd3VhuNtdDqG” args list 是 订阅的主题及条件 [ \"depth&LRC-ETH&0\",\"trade&LRC-ETH\"] 示例 订阅请求示例 { \"op\": \"sub\", \"args\": [ \"candlestick&LRC-BTC&1Hour\", \"depth&LRC-BTC&1\", \"depth10&LRC-BTC&1\", \"trade&LRC-BTC\", \"ticker&LRC-BTC\" ] } 取消订阅请求示例 { \"op\": \"unSub\", \"args\": [ \"candlestick\", \"depth\", \"depth10\", \"trade\", \"ticker\" ] } 返回值 字段 类型 必现 说明 举例 op string 是 用户传送来的操作 \"sub\" apiKey string 否 订阅要求传ApiKey的主题才是必须的 “16M2hKHw9b5VuP21YBAJQmCd3VhuNtdDqG” args list 是 订阅的主题及条件 [ \"depth&LRC-ETH&0\",\"trade&LRC-ETH\"] result Result 是 订阅结果 / Result结构 字段 类型 必现 说明 举例 status string 是 订阅是否成功 \"OK\" error Error 否 订阅失败时的错误信息 / Error结构 字段 类型 必现 说明 举例 code integer 是 状态码 107500 message string 是 错误信息 空的订阅信息 状态码 状态码 描述 104100 空的订阅信息 104101 不支持的操作（路印中继服务器仅支持sub 和 unsub操作） 104102 不支持的主题 104103 重复的订阅主题 104104 缺少ApiKey信息 104105 与之前订阅使用的ApiKey不符 104112 不合法的ApiKey 104113 取消订阅未曾订阅过的主题 104114 无法通过APiKey找到对应的用户 104115 无法识别的订阅消息 示例 订阅成功示例 { \"op\": \"sub\", \"apiKey\": \"\", \"args\": [ \"candlestick&LRC-ETH&1hr\", \"depth&LRC-ETH&1\", \"trade&LRC-ETH\", \"ticker&LRC-ETH\" ], \"result\": { \"status\": \"ok\" } } 订阅条件不合法的失败示例 { \"op\": \"sub\", \"apiKey\": \"\", \"args\": [ \"candlestick&LRC-ETH\" ], \"result\": { \"status\": \"failed\", \"error\": { \"code\": 104106, \"message\": \"receive illegal arg for candlestick:lrc-eth\" } } } 订阅条件无法解析的失败示例 { \"op\": \"\", \"apiKey\": \"\", \"args\": [], \"result\": { \"status\": \"failed\", \"error\": { \"code\": 104115, \"message\": \"unexpected msg:xxx\" } } } "},"websocket/depth.html":{"url":"websocket/depth.html","title":"订阅订单簿更新","keywords":"","body":"订阅订单簿更新 通过订阅该主题，您可以获得指定交易对订单簿更新的数据推送。 订阅规则 topic需要指定交易对和深度聚合等级。如果交易对是LRC-ETH，深度聚合等级是1，那么topic应该拼写为：depth&LRC-ETH&1。 订阅该主题不需要提供ApiKey。 交易对和深度聚合等级可以通过api/v2/exchange/markets接口获取。 状态码 状态码 描述 104107 topic的值或其参数非法 推送示例 { \"topic\": \"depth&LRC-ETH&1\", \"ts\": 1584717910000, \"startVersion\": 1212121, \"endVersion\": \"1212123\", \"data\": { \"bids\": [ [ \"295.97\", //price \"456781000000000\", //size \"3015000000000\", //volume \"4\" //count ] ], \"asks\": [ [ \"298.97\", \"456781000000000000\", \"301500000000000\", \"2\" ] ] } } 模型 推送数据结构 字段 类型 必现 说明 举例 topic string 是 订阅的主题和条件 \"depth&LRC-ETH&1\" ts integer 是 推送时间 1584717910000 startVersion integer 是 该次推送的起始版本号 1212121 endVersion integer 是 该次推送的终结版本号 1212123 data Depth 是 深度信息 / Depth数据结构 字段 类型 必现 说明 举例 bids List[List[string]] （深度条目列表） 是 买单深度 / asks List[List[string]] （深度条目列表） 是 卖单深度 / 深度条目 asks和bids数组中的每个子数组都是定长数组，我们称之为深度条目，其规范如下： 序号 类型 必现 说明 举例 1 string 是 价格 \"0.002\" 2 string 是 挂单量 \"21000\" 3 string 是 挂单总量。每一个推送中的挂单量代表这个价格目前的挂单量绝对值，而不是相对变化。 \"33220000\" 4 string 是 聚合的订单数目 \"4\" 构建本地订单簿 您可以通过下列步骤构建本地订单簿： 订阅 depth主题。 开始缓存收到的更新。同一个价位，后收到的更新覆盖前面的。 访问接口 api/v1/depth 获得一个全量的深度快照。 3中获取的快照如果version大于本地version（endVersion），则直接覆盖，如果小于本地version，则相同的价格不覆盖，不同的价格则覆盖。 将深度快照中的内容更新到本地订单簿副本中，并从WebSocket接收到的第一个startVersion version + 1 且 endVersion >= 本地version 的event开始继续更新本地副本。 每一个新推送的startVersion应该恰好等于上一个event的endVersion + 1，否则可能出现了丢包，请从step3重新进行初始化。 如果某个价格对应的挂单量为0，表示该价位的挂单已经撤单或者被吃，应该移除这个价位。 "},"websocket/depth10.html":{"url":"websocket/depth10.html","title":"订阅订单簿买卖前10的全量推送","keywords":"","body":"订阅买卖前10全量推送 通过订阅该主题，您可以每1秒获得指定交易对前10条卖单和买单的全量数据推送 - 即使数据没有任何变化。 订阅规则 topic需要指定交易对和深度聚合等级。如果交易对是LRC-ETH，深度聚合等级是1，那么topic应该拼写为：depth10&LRC-ETH&1。 订阅该主题不需要提供ApiKey。 交易对和深度聚合等级可以通过api/v2/exchange/markets接口获取。 状态码 状态码 描述 104108 topic的值或其参数非法 推送示例 { \"topic\": \"depth10&LRC-BTC&1\", \"ts\": 1565844208, \"data\": { \"bids\": [ [ \"295.97\", //price \"4567810000000000\", //size \"30150000000000\", //volume \"2\" //count ] ], \"asks\": [ [ \"298.97\", \"456781000000000000\", \"301500000000000\", \"2\" ] ] } } 模型 推送数据结构 字段 类型 必现 说明 举例 topic string 是 订阅的主题和条件 \"depth10&LRC-ETH&1\" ts integer 是 推送时间 1584717910000 data Depth 是 深度信息 / Depth数据结构 字段 类型 必现 说明 举例 bids List[List[string]] （深度条目列表） 是 买单深度 / asks List[List[string]] （深度条目列表） 是 卖单深度 / 深度条目 asks和bids数组中的每个子数组都是定长数组，我们称之为深度条目，其规范如下： 序号 类型 必现 说明 举例 1 string 是 价格 \"0.002\" 2 string 是 挂单量 \"21000\" 3 string 是 挂单总量 \"33220000\" 4 string 是 聚合的订单数目 \"4\" "},"websocket/trade.html":{"url":"websocket/trade.html","title":"订阅市场交易的更新","keywords":"","body":"订阅最新成交 通过订阅该主题，您可以获得特定交易对全部用户新成交记录的数据推送。 订阅规则 topic需要指定交易对。如果交易对是LRC-ETH，那么topic应该拼写为：trade&LRC-ETH。 订阅该主题不需要提供ApiKey。 支持的交易对可以通过api接口api/v2/exchange/markets获取。 状态码 状态码 描述 104109 topic的值或其参数非法 推送示例 { \"topic\": \"trade&LRC-ETH\", \"ts\": 1584717910000, \"data\": [ [ \"1584717910000\", //timestamp \"123456789\", //tradeId \"buy\", //side \"500000\", //size \"0.0008\", //price \"100\" //fee ] ] } 模型 推送数据结构 字段 类型 必现 说明 举例 topic string 是 订阅的主题和条件 \"trade&LRC-ETH\" integer integer 是 推送时间 1584717910000 data List[List[string]] （Trade列表） 是 深度信息 / Trade 数据结构 序号 类型 必现 说明 举例 1 integer 是 成交时间 1584717910000 2 integer 是 交易编号 123456789 3 string 是 买或者卖，指taker \"buy\" 4 string 是 base token的成交数量 \"500000\" 5 string 是 成交价格 \"0.0008\" 6 string 是 base token的收费 \"100\" "},"websocket/ticker.html":{"url":"websocket/ticker.html","title":"订阅市场Ticker的更新","keywords":"","body":"订阅Ticker更新 通过订阅该主题，您可以获得特定交易对ticker更新的数据推送。 订阅规则 topic需要指定交易对。如果交易对是LRC-ETH，那么topic应该拼写为：ticker&LRC-ETH。 订阅该主题不需要提供ApiKey。 支持的交易对可以通过api接口api/v2/exchange/markets获取。 状态码 状态码 描述 104111 topic的值或其参数非法 推送示例 { \"topic\": \"ticker&LRC-ETH\", \"ts\": 1584717910000, \"data\": [ \"LRC-ETH\", //market \"1584717910000\", //timestamp \"5000000\", //size \"1000\", //volume \"0.0002\", //open \"0.00025\", //high \"0.0002\", //low \"0.00025\", //close \"5000\", //count \"0.00026\", //bid \"0.00027\" //ask ] } 模型 推送数据结构 字段 类型 必现 说明 举例 topic string 是 订阅的主题和条件 \"ticker&LRC-ETH\" integer integer 是 推送时间 1584717910000 data List[string] （Ticker） 是 深度信息 / Ticker数据结构 序号 类型 必现 说明 举例 1 string 是 交易对 \"LRC-ETH\" 2 integer 是 ticker生成时间 1584717910000 3 string 是 base token的成交量 \"5000000\" 4 string 是 quote token 的成交量 \"1000\" 5 string 是 开盘价 \"0.0002\" 6 string 是 最高价 0.00025\" 7 string 是 最低价 \"0.0002\" 8 string 是 最新成交价 \"0.00025\" 9 integer 是 成交笔数 5000 10 string 是 买单最高价 \"0.00026\" 11 string 是 卖单最低价 \"0.00027\" "},"websocket/candleStick.html":{"url":"websocket/candleStick.html","title":"订阅市场CandleStick更新","keywords":"","body":"订阅CandleStick更新 通过订阅该主题，您可以获得特定交易对CandleStick更新的数据推送。 订阅规则 topic需要指定交易对和时间间隔。如果交易对是LRC-ETH，时间间隔是1小时，那么topic应该拼写为：candlestick&LRC-ETH&1hr。 订阅该主题不需要提供ApiKey。 支持的交易对可以通过api接口api/v2/exchange/markets获取。 支持的间隔（interval）为1min, 5min, 15min, 30min, 1hr, 2hr, 4hr, 12hr, 1d, 1w 间隔 说明 1min 1分钟 5min 5分钟 15min 15分钟 30min 30分钟 1hr 1小时 2hr 2小时 4hr 4小时 12hr 12小时 1d 1天 1w 1周 状态码 状态码 描述 104106 topic的值或其参数非法 推送示例 { \"topic\": \"candlestick&lrc-btc&1hr\", \"ts\":1584717910000, \"data\": [ \"1584717910000\", //start \"5000\", //count \"3997.3\", //open \"3998.7\", //close \"4031.9\", //high \"3982.5\", //low \"500000000000000000\", //size \"2617521141385000000\", //volume ] } 模型 推送数据结构 字段 类型 必现 说明 举例 topic string 是 订阅的主题和条件 \"candlestick&LRC-ETH&1hr\" ts integer 时 推送时间（毫秒） 1584717910000 data List[string] （CandleStick列表） 是 candlestick数据 / CandleStick结构 序号 类型 必现 说明 举例 1 integer 是 指开盘时间 1584717910000 2 integer 是 成交笔数 5000 3 string 是 开盘价格 \"3997.3\" 4 string 是 收盘价格 \"3998.7\" 5 string 是 最高价 \"4031.9\" 6 string 是 最低价 \"3982.5\" 7 string 是 为wei为单位的base token的成交数量 “500000000000000000” 8 string 是 为wei为单位 quote token的成交数量 \"2617521141385000000\" "},"websocket/account.html":{"url":"websocket/account.html","title":"订阅用户余额更新","keywords":"","body":"订阅用户账号金额更新 通过订阅该主题，您可以获得用户余额和冻结金额更新的数据推送。 订阅规则 topic需要设为account。 订阅该主题需要提供ApiKey。 推送示例 { \"topic\": \"account\", \"ts\":1584717910000, \"data\": { \"accountId\":1, \"totalAmount\": \"24439253519655\", \"tokenId\": 2, \"frezeeAmount\": \"0\" } } 模型 推送数据结构 字段 类型 必现 说明 举例 topic string 是 订阅的主题和条件 \"account\" ts integer 是 推送时间 1584717910000 data Balance 是 余额信息 / Balance数据结构 字段 类型 必现 说明 举例 accountId integer 是 用户Id 1 tokenId integer 是 通证Id 2 totalAmount string 是 用户余额 \"24439253519655\" frezeeAmount string 是 冻结的余额 \"0\" "},"websocket/order.html":{"url":"websocket/order.html","title":"订阅用户订单更新","keywords":"","body":"订阅用户订单更新 通过订阅该主题，您可以获得用户在指定交易对的订单状态提送。 订阅规则 topic需要指定交易对。如果交易对是LRC-ETH，那么topic应该拼写为：order&LRC-ETH。 订阅该主题需要提供ApiKey。 支持的交易对可以通过api接口api/v2/exchange/markets获取。 状态码 状态码 描述 104110 topic的值或其参数非法 推送示例 { \"topic\": \"order&LRC-BTC\", \"ts\":1565844328, \"data\": { \"hash\": \"11212\", \"clientOrderId\": \"myOrder\", \"size\": \"500000000\", \"volume\": \"210000000\", \"price\": \"0.000004\", \"filledSize\": \"30000000\", \"filledVolume\": \"100000\", \"filledFee\": \"1000000\", \"status\": \"processing\", \"createdAt\": \"1494900087\", \"validSince\": \"1494900087\", \"validUntil\": \"1495900087\", \"side\": \"buy\", \"market\": \"LRC-BTC\" } } 模型 推送数据结构 字段 类型 必现 说明 举例 topic string 是 订阅的主题和条件 \"order&LRC-ETH\" ts integer 是 推送时间 1584717910000 data Order 是 订单信息 / Order数据结构 字段 类型 必现 说明 举例 hash string 是 订单哈希 \"11212\" clientOrderId string 是 用户自定义id \"myOrder\" size string 是 base token 的数量 \"500000000\" volume string 是 quote token 的数量 \"210000000\" price string 是 订单价格 \"0.000004\" filledSize string 是 已经成交的basetoken的数量 \"30000000\" filledVolume string 是 已经成交的quotetoken的数量 \"100000\" filledFee string 是 已支付的手续费 \"1000000\" status string 是 订单状态 \"processing\" createdAt integer 是 订单创建时间 1584717910000 updateAt integer 是 订单最后一次的更新时间 1584717910000 side string 是 买或卖 \"buy\" market string 是 交易对 \"LRC-ETH\" 订单状态取值范围 状态 说明 processing 订单进行中，订单等待成交或者已经成交一部分 processed 订单完全成交 cancelling 取消中 cancelled 订单取消 expired 订单过期 waiting 订单还未生效 "},"GLOSSARY.html":{"url":"GLOSSARY.html","keywords":"","body":"术语 DEX Decenralized EXchange的简称，即去中心化交易所。路印交易所是搭建在以太坊上的去中心化交易所。 零知识证明。 一种证明者能够在不向验证者提供任何有用的信息的情况下，使验证者相信某个论断是正确的一种技术。 中继 路印交易所的后台系统，负责订单操作，交易撮合，零知识证明生成等。 链上请求 通过以太坊交易发送给路印交易所智能合约的请求。 链下请求 通过路印中继的API，绕过以太坊区块链，直接发送给路印交易所的请求。 基础通证（Base Token） 指一个交易对的交易对象。如LRC-ETH交易对中，LRC即为该交易对的基础通证。 计价通证（Quote Token） 指一个交易对的计价通证。如LRC-ETH交易对中，ETH即为该交易对的计价通证。 Size 指订单的基础通证数量。对于2000LRC 买 1EHT的订单，Size为2000。 Volume 指订单的计价通证数量。对于2000LRC 买 1EHT的订单，Volume为1。 EdDSA 路印协议用于对链下请求做签名的算法。路印交易所的链上请求需要用户使用以太坊地址对应的ECDSA私钥签名，而链下请求则需要使用交易账号的EdDSA私钥来签名。 "}}