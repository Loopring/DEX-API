{"./":{"url":"./","title":"Introduction","keywords":"","body":"介绍 [!Note] 本文档仍在持续更新中，一些内容在未来可能会有变化。 路印目前的主要产品是去中心化交易所（DEX）及钱包。 DEX基于路印协议3.0，具有高吞吐量、低成本、非托管等特点。用户资产绝对安全。更多信息请参考路印官网。 路印DEX的整体架构如下图所示： 本文主要描述Realyer部分的API产品的使用。其中包括DEX与钱包两部分。当前发布版本只包含DEX API以及做市商对接集成部分。其余功能会陆续开放。敬请期待。 "},"GLOSSORY.html":{"url":"GLOSSORY.html","title":"Glossory","keywords":"","body":"DEX 去中心化交易所。 ZKP 零知识证明。 Relayer 路印DEX的后台系统，负责订单操作，交易撮合，零知识证明生成等。 链上请求 发送ETH交易调用路印DEX合约的请求。 链下请求 直接发送给relayer的请求。 Base token 指一个交易对的交易对象，即写在靠前部分的Token。 LRC-ETH市场对，LRC 即为该市场对的Base Token。 Quote token 指一个交易对的定价Token，即写在靠后部分的Token。 LRC-ETH市场对，ETH 即为该市场对的Quote Token。 Size 指订单的base Token数量。对于 2000 LRC 买 1 EHT的订单，2000 即为size Volume 指订单的quote Token 数量。对于 2000 LRC 买 1 EHT的订单，1 即为volume EDDSA 用户用于下单签名的算法，区别ETH公私钥对。路印交易所的链上请求需要用户使用ETH的私钥签名，而一些链下请求（下单，取消订单）则使用EDDSA产生的私钥来对交易进行签名。 "},"dex_integration_overview.html":{"url":"dex_integration_overview.html","title":"DEX integration doc","keywords":"","body":"集成文档概述 本部分描述了如何使用路印API来进行自动化交易甚至搭建自己的前端。因为路印DEX使用了ZKP技术，一些地方需要做相应的适配。比如签名方式（EDDSA）的适配；订单号的维护等。使用API产品前请仔细阅读本章节。 "},"dex_integrations/trader.html":{"url":"dex_integrations/trader.html","title":"Market making","keywords":"","body":"API集成--做市交易 基本信息 本篇描述实现在LoopringDEX上进行做市交易的程序涉及的主要APIs以及对应参数的注意事项 代码使用python描述 注册账户 路印DEX通过发送ETH交易调用智能合约来完成账户的创建，充值，提现等操作（此类请求成为链上请求） 对于做市商用户，我们推荐在路印DEX网站完成此类操作，从而省去对接ETH的工作。 获取API key 创建好账户之后，您可以使用官网的'导出账号'功能导出API-Key及EDDSA公私钥publicKeyX,publicKeyY和privateKey，路印DEX链下请求需要这些信息。 [!DANGER] 请妥善保管API key 和 EDDSA私钥，如泄漏，可能会发生信息泄漏，甚至资产损失。 提交订单 准备发送订单的参数举例，API参数细节详见提交订单。 newOrder = { \"exchangeId\": 2, \"orderId\": 5, \"accountId\": 1234, \"tokenSId\": 2, \"tokenBId\": 3, \"amountS\": \"5000000000000000000\", \"amountB\": \"15000000\", \"allOrNone\": \"false\", \"buy\": \"false\", \"validSince\": 1582094327, \"validUntil\": 1587278341, \"maxFeeBips\": 50, \"label\": 211, \"hash\": \"14504358714580556901944011952143357684927684879578923674101657902115012783290\", \"signatureRx\": \"15179969700843231746888635151106024191752286977677731880613780154804077177446\", \"signatureRy\": \"8103765835373541952843207933665617916816772340145691265012430975846006955894\", \"signatureS\" : \"4462707474665244243174020779004308974607763640730341744048308145656189589982\", \"clientOrderId\": \"Test01\" } 首先选择合适价格和交易量，填写对应的tokenID和amount，比如在LRC-USDT市场上以0.03U的价格卖出500个LRC，即售出500个LRC，买入15个USDT(500∗0.03=15500*0.03 = 15500∗0.03=15)，则订单数据如下。需要注意的是订单买卖参数的计数单位为该品种的最小单位，ETH,LRC以及大部分ERC20代币为101810^{18}10​18​​，而USDT则是10610^{6}10​6​​，用户需要提前访问/api/v2/exchange/token得到各个代币的参数，最重要的是tokenId和decimals，该API详见查询交易所支持的通证信息。 order = { 'exchangeId': 2, 'accountId': 1234, 'tokenSId': 2, #LRC 'tokenBId': 3, #USDT 'amountS': '500000000000000000000', # 500 * 10**18 'amountB': '15000000', # 15 * 10**6 'allOrNone': 'false', 'buy': 'false', # 卖出 'validSince': 1582094327, # 生效时间，比下单时间提前15分钟，见注意事项 'validUntil': 1587278341, # 失效时间 'maxFeeBips': 50, # 最大费率，实际费率由服务器计算 'label': 'hebao::subchannel::0001' } 订单的maxFeeBips是此订单的最大费率，实际费率由服务器计算，如果服务器费率大于此上限，则此Order无效，因此填一个服务器上限即可，具体参考提交订单里面关于maxFeeBips的描述。 访问/api/v2/orderId获得OrderId，详见获取下一个有效OrderId。查询到当前对应市场对应的OrderId，注意OrderID由用户出售的代币品种决定，然后根据返回值更新订单数据结构。订单OrderId是LoopringDEX一个比较特殊的地方，详见注意事项一节关于OrderId的说明。 order.update({\"orderId\": 2, \"clientOrderId\": \"TEST01\"}) 对订单签名，签名使用EDDSA PoseidonHASH算法，并更新订单数据。签名过程详见注意事项签名部分，算法细节请查询参考文献[3]和[4]。 from ethsnarks.poseidon import poseidon_params, poseidon # 对订单数据签名 PoseidonHashParams = poseidon_params(SNARK_SCALAR_FIELD, 14, 6, 53, b'poseidon', 5, security_target=128) msgHash = poseidon(msg_parts, PoseidonHashParams) signedMessage = PoseidonEdDSA.sign(msgHash, FQ(int(api_secret))) order.update({ \"hash\": str(msgHash), \"signatureRx\": str(signedMessage.sig.R.x), \"signatureRy\": str(signedMessage.sig.R.y), \"signatureS\": str(signedMessage.sig.s), }) 访问/api/v2/order发送订单到服务器，详见提交订单，一般来说刚开始主要的错误来自于签名部分，请仔细检查所使用的API-Secret以及签名算法流程。 访问/api/v2/orders查看订单状态，详见获取订单详情。或者通过订阅Websocket更新来跟踪订单状态，关于WebSocket订阅部分，请参考Websocket介绍。 取消订单通过/api/v2/orders，参数见取消订单，访问取消订单接口需要签名，和订单数据的签名略有不同，请参考注意事项需要签名的API接口一节。 注意事项 订单生效时间 服务器收到订单时会判断订单中的ValidSince时间戳，注意不是订单发送的时间，而是订单开始生效的时间，因此推荐订单的ValidSince在当前时间上提前15分钟，即： order[\"validSince\"] = int(time.time() - 900) 订单OrderID 访问/api/v2/orderid得到当前币种的OrderID，API参数细节参考获取下一个有效OrderId，建议提前访问API建立并维护一个币种和OrderID的对应关系，类似： token_orderid_mapping = { 'ETH' : 3, 'LRC' : 5， 'DAI' : 2 } 订单OrderID由用户售出的代币品种，在LRC-ETH市场上，如果用户提交一个买单，即售出ETH，买入LRC，则OrderID值为： order[\"orderId\"] = token_orderid_mapping['ETH'] 反之如果是卖单，即售出LRC，买入ETH，则OrderID为： order[\"orderId\"] = token_orderid_mapping['LRC'] 当前LoopringDEX每一个币种的最大订单OrderID为220 2^{20} 2​20​​，如果当前账户某个币种的OrderID超过该值，则下单失败。后续版本的LoopringDEX将会更新此限制。 [!TIP] 订单号的限制是基于卖出的token共享的，比如LRC-USDT和ETH-USDT两个市场会共享220 2^{20} 2​20​​个订单号，用完就不能再下用USDT买入的市场订单了（卖出USDT不受影响）。针对不同市场，建议注册不同账号做市。 同时存活有效的订单数最大为214 2^{14} 2​14​​即16384。超出后需要取消一部分订单才能够继续下单。 如果两个未成交的订单 A和B的OrderID对16384同余，即： OrderA.OrderID % 214≡OrderB.OrderID % 214 OrderA.OrderID\\ \\%\\ 2^{14} \\equiv OrderB.OrderID\\ \\%\\ 2^{14} OrderA.OrderID % 2​14​​≡OrderB.OrderID % 2​14​​ 必须取消前面一个，否则后面一个会被服务器拒绝。不过普通用户一般不会遇到这个问题。 需要API-KEY的API接口 API密钥可以从loopringDEX网页导出或通过API获取。 所有接口（除查询用户ApiKey）都需要传入API-KEY，API信息请查询Restful API 概述。 API密钥数据放在http request header里的X-API-KEY中。 def init_request_session(user_api_key): session = requests.session() session.headers.update({'Accept': 'application/json', 'X-API-KEY': user_api_key}) return session 需要签名的API接口 除了需要API-KEY外，和账户信息有关的还需要签名，详见Restful API 概述，这里仅以取消订单为例。 调用取消订单接口时，除了接口本身所需的参数外，还需传递signature即参数签名。 LoopringDEX对API签名使用EDDSA SHA256算法，首先将API参数序列化成型如[(参数1名, 参数1值), (参数2名, 参数2值), ..., (参数N名, 参数N值)]的字符串二元组数组，其中参数名按照字典序排序，从而保证服务器验证顺序一致。然后整体转为JSON字符串作为SHA256的操作对象，得到SHA256Hash值，再用EDDSA算法对该SHA256Hash进行签名，私钥即privateKey，最终的签名包含三个整数：Rx, Ry, S，将这三个序列化成字符串并用,连接起来即为API签名，流程请参考sign_api_data代码示例。 对API接口的签名使用的EDDSA使用ethsnarks工程代码，其内部使用Poseidon HASH算法，LoopringDEX的签名参数如下: poseidon_params(SNARK_SCALAR_FIELD, 6, 6, 52, b'poseidon', 5, security_target=128) EDDSA和Poseidon Hash算法细节见参考文献[3]，[4]。 可以重载ethsnarks的_SignatureScheme实现该固定参数的签名类，如下面python代码所示。 签名数据放在http request header里的X-API-SIG中。 session = init_request_session(user_api_key) ... #初始化API数据 api_request_params ... #对API数据签名 x_api_sign = sign_api_data(api_request_params，user_api_secret) session.headers.update({'X-API-SIG': x_api_sign}) API接口签名代码部分关键函数示例： #继承ethsnarks.eddsa._SignatureScheme class PoseidonEdDSA(_SignatureScheme): @classmethod def hash_public(cls, *args): PoseidonHashParams = poseidon_params(SNARK_SCALAR_FIELD, 6, 6, 52, b'poseidon', 5, security_target=128) inputMsg = list(as_scalar(*args)) return poseidon(inputMsg, PoseidonHashParams) #对数据签名并返回签名 def sign_api_data(api_request_params，api_secret): data = serialize_api_data(api_request_params) hasher = hashlib.sha256() msgBuf = ujson.dumps(data).encode('utf-8') hasher.update(msgBuf) msgHash = int(hasher.hexdigest(), 16) % SNARK_SCALAR_FIELD signed = PoseidonEdDSA.sign(msgHash, FQ(int(api_secret))) signature = ','.join(str(_) for _ in [signed.sig.R.x, signed.sig.R.y, signed.sig.s]) return signature def serialize_api_data(data): has_signature = False params = [] for key, value in data.items(): if key == 'signature': has_signature = True else: params.append((key, value)) # sort parameters by key, in alphabet order params.sort(key=itemgetter(0)) if has_signature: params.append(('signature', data['signature'])) return params 需要签名的数据类型（订单ORDER） 在访问api/v2/order发送订单之前，和其他需要API参数签名不同的是，这里要对订单本身进行签名，签名结果放在订单参数里面，同样地，订单参数也需要序列化再进行PoseidonHash运算，这里为了配合PoseidonHash，所以序列化成整数数组，请注意这里序列化数组的顺序和服务器必须保持一致，如示例代码所示： def serialize_api_data(order): return [ int(order[\"exchangeId\"]), int(order[\"orderId\"]), int(order[\"accountId\"]), int(order[\"tokenSId\"]), int(order[\"tokenBId\"]), int(order[\"amountS\"]), int(order[\"amountB\"]), int(order[\"allOrNone\"]==\"true\"), int(order[\"validSince\"]), int(order[\"validUntil\"]), int(order[\"maxFeeBips\"]), int(order[\"buy\"]==\"true\"), int(order[\"label\"]) ] def sign_order(order, api_secret) PoseidonHashParams = poseidon_params(SNARK_SCALAR_FIELD, 14, 6, 53, b'poseidon', 5, security_target=128) serialized_order = serialize_api_data(order) msgHash = poseidon(serialized_order, PoseidonHashParams) signedMessage = PoseidonEdDSA.sign(msgHash, FQ(int(api_secret))) order.update({ \"hash\": str(msgHash), \"signatureRx\": str(signedMessage.sig.R.x), \"signatureRy\": str(signedMessage.sig.R.y), \"signatureS\": str(signedMessage.sig.s), }) LoopringDEX使用EDDSA PoseidonHASH算法对订单参数签名，EDDSA PoseidonHASH算法代码可以参考ethsnarks，对订单参数计算PoseidonHash的参数如下： poseidon_params(SNARK_SCALAR_FIELD, 14, 6, 53, b'poseidon', 5, security_target=128) 订单参数签名和API接口参数签名的区别在于：API接口参数是用SHA256计算HASH值，再经过EDDSA签名，而订单内容是用PoseidonHASH计算HASH值，然后经过EDDSA签名，而EDDSA签名算法是相同的。 参考文献及代码库 ethsnarks代码仓库：https://github.com/HarryR/ethsnarks.git SHA256 Hash算法：https://en.wikipedia.org/wiki/SHA-2 EDDSA算法：https://en.wikipedia.org/wiki/EdDSA Poseidon Hash算法：https://www.poseidon-hash.info/ "},"dex_api_overview.html":{"url":"dex_api_overview.html","title":"DEX API","keywords":"","body":"DEX API 概述 路印DEX API 分为Restful API与websocket。 Restful API Websocket API "},"restful_api_overview.html":{"url":"restful_api_overview.html","title":"Restful API","keywords":"","body":"Restful API 概述 本部分主要讨论路印DEX Restful API的共性部分。 [!DANGER] 每个API请求会有流量限制的说明，超过此流量限制的请求会被拒绝（返回429）。如果调用端长期超过流量限制调用请求，有可能进入黑名单，从而无法调用路印DEX的API。 Http 请求头 API请求要求在Header中传入X-API-KEY 或/和X-API-SIG。请求都需要X-API-KEY才能访问；一些关键请求需要EDDSA签名信息：X-API-SIG。 还有一些请求需要使用特殊的方式来进行EDDSA签名。 需要X-API-KEY的请求： 除查询用户ApiKey以外的所有请求 需要X-API-SIG的请求： 查询用户ApiKey 取消订单 需要特殊签名的请求： 提交订单 获取API key [前端获取] 用户可以在交易所( https://www.loopring.io )的“导出账户”中看到自己的“apiKey”，并在调用API时，设置到http header的X-API-KEY中。 [API获取] 用户注册的时候系统会产生对应的API key，用户通过查询用户ApiKey拿到这个key，此时需要对请求签名以保证别的用户无法获取API key。以后每次调用此API都返回同样的key。 如果用户想要更换API key，可以调用更新用户ApiKey接口（请求头需传入老的API key），这样会更换一个新的API key，然后每次调用查询用户ApiKey都会返回新的key。 请求签名 请求参数是大小写不敏感的 如上所述，路印DEX的一部分链下请求需要使用签名，用户在创建账号的同时，会创建一对公私钥用于EDDSA签名。有两类使用此公私钥签名的方式。 一种是电路不感知的签名，主要用于网关进行权限校验： [X-API-SIG] 当用户请求获取API-KEY或取消订单时，需要在header里添加X-API-SIG，生成规则如下： 将请求参数按key字典顺序排序后生成Json String 使用SHA-256计算json字符串的hash 使用创建账户时的EDDSA私钥，对hash签名，将签名结果Rx,Ry,S三部分按\",\"分隔并以上述顺序拼成一个字符串，作为X-API-SIG的值放入请求的header里。签名使用的EDDSA参考ethsnarks，其内部使用Poseidon HASH算法，参数如下：poseidon_params(SNARK_SCALAR_FIELD, 6, 6, 52, b'poseidon', 5, security_target=128) 另外一种是在电路处验签的签名，这种请求利用零知识证明技术保证即使是路印的Relayer也无法更改用户的意图： 电路签名 返回结果 除了网络错误，所有API都会返回200状态码，以及json信息。 json返回信息中都会包含resultInfo字段，告知本次调用的情况：是否成功；若失败，发生了什么样的错误。 如果请求正常返回，则还会返回data字段（也是json串），该字段针对不同API代表不同的结构，可以参考具体的API说明。 下面是公共信息的细节描述。 Common info API host https://api.loopring.io Header Field Type Required Description Sample X-API-KEY string N API Key \"sra1aavfa\" X-API-SIG string N Signature info \"dkkfinfasdf\" Response Field Type Required Description Sample resultInfo ResultInfo Y Result of api invoking / Return code Return code Description 0 Success 100000 Internal unknown error 100001 Illegality parameter 100002 Request timeout 100202 Update fail 100203 Internal persistence error 100204 Submit duplicated 模型 ResultInfo Field Type Required Description Sample code integer Y Return code 0 message string Y Return message. This is used for debug only. Do not show to users \"SUCCESS\" "},"dex_apis/getTimestamp.html":{"url":"dex_apis/getTimestamp.html","title":"api.timestamp.value","keywords":"","body":"api.timestamp.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/timestamp Function api.timestamp.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters None Request sample HTTPCURLGET https://api.loopring.io/api/v2/timestamp HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/timestamp Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data integer N field.getTimestampV2Response.data 1584683483382 Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : 1584683483382 } Return code Return code Description 100000 code.100000 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/getApiKey.html":{"url":"dex_apis/getApiKey.html","title":"api.getApiKey.value","keywords":"","body":"api.getApiKey.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/apiKey Function api.getApiKey.notes API description Header Field Type Required Description Sample X-API-SIG string Y Signature info \"dkkfinfasdf\" Request parameters Field Type Required Description Sample accountId integer Y request.getApiKey.accountId 10 pubKeyX string Y request.getApiKey.pubKeyX 123 pubKeyY string Y request.getApiKey.pubKeyX 456 Request sample HTTPCURLGET https://api.loopring.io/api/v2/apiKey?accountId=10&pubKeyX=123&pubKeyY=456 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-SIG: dkkfinfasdfcurl -H \"X-API-SIG:dkkfinfasdf\" https://api.loopring.io/api/v2/apiKey\\?accountId\\=10\\&pubKeyX\\=123\\&pubKeyY\\=456 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data string Y field.getApiKeyResponse.apiKey 6BJaCehh0z4ta4TW5vwoKyo0yk5FdXkQxpt8AStG49aU3dMNC9jid6syyWPEMtTt Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"6BJaCehh0z4ta4TW5vwoKyo0yk5FdXkQxpt8AStG49aU3dMNC9jid6syyWPEMtTt\" } Return code Return code Description 100000 code.100000 101002 code.101002 104001 code.104001 104002 code.104002 104003 code.104003 104004 code.104004 104005 code.104005 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/applyApiKey.html":{"url":"dex_apis/applyApiKey.html","title":"api.applyApiKey.value","keywords":"","body":"api.applyApiKey.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method POST Visit path /api/v2/apiKey Function api.applyApiKey.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample accountId integer Y request.applyApiKey.accountId 1 publicKeyX string Y request.applyApiKey.pubKeyX 13375450901292179417154974849571793069911517354720397125027633242680470075859 publicKeyY string Y request.applyApiKey.pubKeyY 13375450901292179417154974849571793069911517354720397125027633242680470075859 Request sample HTTPCURLPOST https://api.loopring.io/api/v2/apiKey HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfa Content-Type: application/json { \"accountId\" : 1, \"publicKeyX\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"publicKeyY\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\" }curl -X POST -H \"X-API-KEY:sra1aavfa\" -H \"Content-Type:application/json\" https://api.loopring.io/api/v2/apiKey -d \\ '{ \"accountId\" : 1, \"publicKeyX\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"publicKeyY\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\" }' Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data string Y field.getApiKeyResponseV2.data 6BJaCehh0z4ta4TW5vwoKyo0yk5FdXkQxpt8AStG49aU3dMNC9jid6syyWPEMtTt Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"6BJaCehh0z4ta4TW5vwoKyo0yk5FdXkQxpt8AStG49aU3dMNC9jid6syyWPEMtTt\" } Return code Return code Description 100000 code.100000 101002 code.101002 100001 code.100001 104001 code.104001 104002 code.104002 104003 code.104003 104004 code.104004 104005 code.104005 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/getNextOrderId.html":{"url":"dex_apis/getNextOrderId.html","title":"api.GetNextOrderIdRequest.value","keywords":"","body":"api.GetNextOrderIdRequest.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/orderId Function api.GetNextOrderIdRequest.value API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample accountId integer Y request.getNextOrderId.accountId 1 tokenSId integer Y request.getNextOrderId.tokenSId 0 Request sample HTTPCURLGET https://api.loopring.io/api/v2/orderId?accountId=1&tokenSId=0 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/orderId\\?accountId\\=1\\&tokenSId\\=0 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data string N field.GetNextOrderIdResponseData.data 108 Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"108\" } Return code Return code Description 100000 code.100000 104001 code.104001 104002 code.104002 104003 code.104003 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/getOrderDetail.html":{"url":"dex_apis/getOrderDetail.html","title":"api.getOrderDetail.value","keywords":"","body":"api.getOrderDetail.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/order Function api.getOrderDetail.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample accountId integer Y request.getOrderDetail.accountId 1 orderHash string Y request.getOrderDetail.orderHash 13375450901292179417154974849571793069911517354720397125027633242680470075859 Request sample HTTPCURLGET https://api.loopring.io/api/v2/order?accountId=1&orderHash=13375450901292179417154974849571793069911517354720397125027633242680470075859 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/order\\?accountId\\=1\\&orderHash\\=13375450901292179417154974849571793069911517354720397125027633242680470075859 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data OrderDetail N field.GetOrderDetailResponseV2.data / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"hash\" : \"0xfb5e711c2f044e94322ed262229cd8f0d0da00c22e1a00a0f5d881e45a38e1cf\", \"clientOrderId\" : \"200310143135081332\", \"size\" : \"8210000000000001024\", \"volume\" : \"163182534700000032\", \"price\" : \"0.01987608\", \"filledSize\" : \"0\", \"filledVolume\" : \"0\", \"filledFee\" : \"0\", \"status\" : \"processing\", \"validSince\" : 1583929591, \"validUntil\" : 1586521591, \"createdAt\" : 1583933191494, \"side\" : \"SELL\", \"market\" : \"LRC-ETH\" } } Return code Return code Description 100000 code.100000 107001 code.107001 107002 code.107002 107003 code.107003 104001 code.104001 104002 code.104002 104003 code.104003 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS OrderDetail model.OrderDetail.description Field Type Required Description Sample hash string Y field.OrderDetail.hash 0xfb5e711c2f044e94322ed262229cd8f0d0da00c22e1a00a0f5d881e45a38e1cf clientOrderId string Y field.OrderDetail.clientOrderId 200310143135081332 size string Y field.OrderDetail.size 8210000000000001024 volume string Y field.OrderDetail.volume 163182534700000032 price string Y field.OrderDetail.price 0.01987608 filledSize string Y field.OrderDetail.filledSize 0 filledVolume string Y field.OrderDetail.filledVolume 0 filledFee string Y field.OrderDetail.filledFee 0 status string Y field.OrderDetail.statusAllowable : ['processing', 'processed', 'cancelling', 'cancelled', 'expired', 'waiting'] processing validSince integer Y field.OrderDetail.validSince 1583929591 validUntil integer Y field.OrderDetail.validUntil 1586521591 createdAt integer Y field.OrderDetail.createdAt 1583933191494 side string Y field.OrderDetail.sideAllowable : ['SELL', 'BUY'] SELL market string Y field.OrderDetail.market LRC-ETH "},"dex_apis/submitOrder.html":{"url":"dex_apis/submitOrder.html","title":"api.submitOrder.value","keywords":"","body":"api.submitOrder.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method POST Visit path /api/v2/order Function api.submitOrder.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample exchangeId integer Y field.SubmitOrderRequest.exchangeId 1 orderId integer Y field.SubmitOrderRequest.orderId 1 accountId integer Y field.SubmitOrderRequest.accountId 1 tokenSId integer Y field.SubmitOrderRequest.tokenSId 0 tokenBId integer Y field.SubmitOrderRequest.tokenBId 2 amountS string Y field.SubmitOrderRequest.amountS 1000000000000000000 amountB string Y field.SubmitOrderRequest.amountB 1000000000000000000 allOrNone string N field.SubmitOrderRequest.allOrNone false buy string Y field.SubmitOrderRequest.buy true validSince integer Y field.SubmitOrderRequest.validSince 1567053142 validUntil integer Y field.SubmitOrderRequest.validUntil 1567053142 maxFeeBips integer Y field.SubmitOrderRequest.maxFeeBips 20 label integer Y field.SubmitOrderRequest.label 20 signatureRx string Y field.SubmitOrderRequest.signatureRx 13375450901292179417154974849571793069911517354720397125027633242680470075859 signatureRy string Y field.SubmitOrderRequest.signatureRy 13375450901292179417154974849571793069911517354720397125027633242680470075859 signatureS string Y field.SubmitOrderRequest.signatureS 13375450901292179417154974849571793069911517354720397125027633242680470075859 clientOrderId string N field.SubmitOrderRequest.clientOrderId 1 channelId string N field.SubmitOrderRequest.channelId 1 Request sample HTTPCURLPOST https://api.loopring.io/api/v2/order HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfa Content-Type: application/json { \"exchangeId\" : 1, \"orderId\" : 1, \"accountId\" : 1, \"tokenSId\" : 0, \"tokenBId\" : 2, \"amountS\" : \"1000000000000000000\", \"amountB\" : \"1000000000000000000\", \"allOrNone\" : \"false\", \"buy\" : \"true\", \"validSince\" : 1567053142, \"validUntil\" : 1567053142, \"maxFeeBips\" : 20, \"label\" : 20, \"signatureRx\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"signatureRy\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"signatureS\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"clientOrderId\" : \"1\", \"channelId\" : \"1\" }curl -X POST -H \"X-API-KEY:sra1aavfa\" -H \"Content-Type:application/json\" https://api.loopring.io/api/v2/order -d \\ '{ \"exchangeId\" : 1, \"orderId\" : 1, \"accountId\" : 1, \"tokenSId\" : 0, \"tokenBId\" : 2, \"amountS\" : \"1000000000000000000\", \"amountB\" : \"1000000000000000000\", \"allOrNone\" : \"false\", \"buy\" : \"true\", \"validSince\" : 1567053142, \"validUntil\" : 1567053142, \"maxFeeBips\" : 20, \"label\" : 20, \"signatureRx\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"signatureRy\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"signatureS\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\", \"clientOrderId\" : \"1\", \"channelId\" : \"1\" }' Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data string N field.SubmitOrderResponse.data 13375450901292179417154974849571793069911517354720397125027633242680470075859 Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"13375450901292179417154974849571793069911517354720397125027633242680470075859\" } Return code Return code Description 100000 code.100000 102001 code.102001 102002 code.102002 102003 code.102003 102004 code.102004 102005 code.102005 102006 code.102006 102007 code.102007 102008 code.102008 102010 code.102010 102011 code.102011 102012 code.102012 102014 code.102014 102020 code.102020 102120 code.102120 104001 code.104001 104002 code.104002 104003 code.104003 104004 code.104004 104005 code.104005 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/getOrders.html":{"url":"dex_apis/getOrders.html","title":"api.getOrders.value","keywords":"","body":"api.getOrders.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/orders Function api.getOrders.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample accountId integer Y request.getOrders.accountId 1 market string N request.getOrders.market LRC-ETH start integer N request.getOrders.start 1567053142000 end integer N request.getOrders.end 1567053242000 fromHash string N request.getOrders.fromHash 2600105125336468966417510367500403435128941502452005674156103328855968837178 side string N request.getOrders.sideAllowable : ['BUY', 'SELL'] BUY status string N request.getOrders.statusAllowable : ['waiting', 'processing', 'processed', 'failed', 'cancelled', 'expired'] processing,processed limit integer N request.getOrders.limit 50 offset integer N request.getOrders.offsetDefault : 0L 0 Request sample HTTPCURLGET https://api.loopring.io/api/v2/orders?accountId=1&market=LRC-ETH&start=1567053142000&end=1567053242000&fromHash=2600105125336468966417510367500403435128941502452005674156103328855968837178&side=BUY&status=processing,processed&limit=50&offset=0 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/orders\\?accountId\\=1\\&market\\=LRC-ETH\\&start\\=1567053142000\\&end\\=1567053242000\\&fromHash\\=2600105125336468966417510367500403435128941502452005674156103328855968837178\\&side\\=BUY\\&status\\=processing,processed\\&limit\\=50\\&offset\\=0 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data OrdersDetail N field.GetOrdersResponseV2.data / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 10, \"orders\" : [ { \"hash\" : \"0xfb5e711c2f044e94322ed262229cd8f0d0da00c22e1a00a0f5d881e45a38e1cf\", \"clientOrderId\" : \"200310143135081332\", \"size\" : \"8210000000000001024\", \"volume\" : \"163182534700000032\", \"price\" : \"0.01987608\", \"filledSize\" : \"0\", \"filledVolume\" : \"0\", \"filledFee\" : \"0\", \"status\" : \"processing\", \"validSince\" : 1583929591, \"validUntil\" : 1586521591, \"createdAt\" : 1583933191494, \"side\" : \"SELL\", \"market\" : \"LRC-ETH\" } ] } } Return code Return code Description 100000 code.100000 107001 code.107001 104001 code.104001 104002 code.104002 104003 code.104003 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS OrdersDetail model.OrdersDetail.description Field Type Required Description Sample totalNum integer Y field.OrdersDetail.totalNum 10 orders List[OrderDetail] N field.OrdersDetail.orders / OrderDetail model.OrderDetail.description Field Type Required Description Sample hash string Y field.OrderDetail.hash 0xfb5e711c2f044e94322ed262229cd8f0d0da00c22e1a00a0f5d881e45a38e1cf clientOrderId string Y field.OrderDetail.clientOrderId 200310143135081332 size string Y field.OrderDetail.size 8210000000000001024 volume string Y field.OrderDetail.volume 163182534700000032 price string Y field.OrderDetail.price 0.01987608 filledSize string Y field.OrderDetail.filledSize 0 filledVolume string Y field.OrderDetail.filledVolume 0 filledFee string Y field.OrderDetail.filledFee 0 status string Y field.OrderDetail.statusAllowable : ['processing', 'processed', 'cancelling', 'cancelled', 'expired', 'waiting'] processing validSince integer Y field.OrderDetail.validSince 1583929591 validUntil integer Y field.OrderDetail.validUntil 1586521591 createdAt integer Y field.OrderDetail.createdAt 1583933191494 side string Y field.OrderDetail.sideAllowable : ['SELL', 'BUY'] SELL market string Y field.OrderDetail.market LRC-ETH "},"dex_apis/cancelOrders.html":{"url":"dex_apis/cancelOrders.html","title":"api.CancelOrders.value","keywords":"","body":"api.CancelOrders.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method DELETE Visit path /api/v2/orders Function api.CancelOrders.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" X-API-SIG string Y Signature info \"dkkfinfasdf\" Request parameters Field Type Required Description Sample accountId integer Y request.cancelOrders.accountId 1 orderHash string N request.cancelOrders.orderHash 13375450901292179417154974849571793069911517354720397125027633242680470075859 clientOrderId string N request.cancelOrders.clientOrderId 20200318000000001010 Request sample HTTPCURLDELETE https://api.loopring.io/api/v2/orders?accountId=1&orderHash=13375450901292179417154974849571793069911517354720397125027633242680470075859&clientOrderId=20200318000000001010 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfa X-API-SIG: dkkfinfasdfcurl -X DELETE -H \"X-API-KEY:sra1aavfa\" -H \"X-API-SIG:dkkfinfasdf\" https://api.loopring.io/api/v2/orders\\?accountId\\=1\\&orderHash\\=13375450901292179417154974849571793069911517354720397125027633242680470075859\\&clientOrderId\\=20200318000000001010 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data boolean N field.CancelOrdersResponseData.data true Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : true } Return code Return code Description 100000 code.100000 104001 code.104001 102117 code.102117 102118 code.102118 104002 code.104002 104003 code.104003 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/sendTransaction.html":{"url":"dex_apis/sendTransaction.html","title":"api.sendTx.value","keywords":"","body":"api.sendTx.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method POST Visit path /api/v2/sendEthTx Function api.sendTx.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample data string Y request.sendTx.value 0xf8aa0a8502540be400830186a0949032dbf5669341c3d95bc02b4bde90e4e051db3580b844095ea7b30000000000000000000000001d307532a97879b866a6fe33bf4a517bd28de854ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff25a071af95d2a3eb01bb11f84d9c66d09924d97a2b3ce38e0079a2d56dfb13035df0a07404b3a48c40cc3e7b9893d88512ef526a67bf3c274548ec09f94386e0062fc2 Request sample HTTPCURLPOST https://api.loopring.io/api/v2/sendEthTx HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfa Content-Type: application/json { \"data\" : \"0xf8aa0a8502540be400830186a0949032dbf5669341c3d95bc02b4bde90e4e051db3580b844095ea7b30000000000000000000000001d307532a97879b866a6fe33bf4a517bd28de854ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff25a071af95d2a3eb01bb11f84d9c66d09924d97a2b3ce38e0079a2d56dfb13035df0a07404b3a48c40cc3e7b9893d88512ef526a67bf3c274548ec09f94386e0062fc2\" }curl -X POST -H \"X-API-KEY:sra1aavfa\" -H \"Content-Type:application/json\" https://api.loopring.io/api/v2/sendEthTx -d \\ '{ \"data\" : \"0xf8aa0a8502540be400830186a0949032dbf5669341c3d95bc02b4bde90e4e051db3580b844095ea7b30000000000000000000000001d307532a97879b866a6fe33bf4a517bd28de854ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff25a071af95d2a3eb01bb11f84d9c66d09924d97a2b3ce38e0079a2d56dfb13035df0a07404b3a48c40cc3e7b9893d88512ef526a67bf3c274548ec09f94386e0062fc2\" }' Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data string N field.sendTx.data 0x28251d0415096a549604350e5ad1ff53f88b834bd195aa05b50610da41eff886 Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"0x28251d0415096a549604350e5ad1ff53f88b834bd195aa05b50610da41eff886\" } Return code Return code Description 100000 code.100000 104202 code.104202 104205 code.104205 104208 code.104208 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/getEthNonce.html":{"url":"dex_apis/getEthNonce.html","title":"api.getEthNonce.value","keywords":"","body":"api.getEthNonce.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/ethNonce Function api.getEthNonce.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample owner string Y request.owner 0x0000000000000000000000000000000000000000 Request sample HTTPCURLGET https://api.loopring.io/api/v2/ethNonce?owner=0x0000000000000000000000000000000000000000 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/ethNonce\\?owner\\=0x0000000000000000000000000000000000000000 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data integer N field.getEthNonceResponse.data 0 Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : 0 } Return code Return code Description 100000 code.100000 104205 code.104205 104208 code.104208 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/getEthBalance.html":{"url":"dex_apis/getEthBalance.html","title":"api.getEthBalance.value","keywords":"","body":"api.getEthBalance.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/ethBalances Function api.getEthBalance.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample owner string Y request.owner 0x0000000000000000000000000000000000000000 Request sample HTTPCURLGET https://api.loopring.io/api/v2/ethBalances?owner=0x0000000000000000000000000000000000000000 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/ethBalances\\?owner\\=0x0000000000000000000000000000000000000000 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data string N field.getEthBalancesResponse.data 0 Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"0\" } Return code Return code Description 100000 code.100000 104205 code.104205 104208 code.104208 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/getRecommendedGasPrice.html":{"url":"dex_apis/getRecommendedGasPrice.html","title":"api.getRecommendedGasPrice.value","keywords":"","body":"api.getRecommendedGasPrice.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/recommendedGasPrice Function api.getRecommendedGasPrice.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters None Request sample HTTPCURLGET https://api.loopring.io/api/v2/recommendedGasPrice HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/recommendedGasPrice Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data string N field.GetRecommendedGasPriceResponseV2.data 10000000000 Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"10000000000\" } Return code Return code Description 100000 code.100000 105001 code.105001 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/getMarkets.html":{"url":"dex_apis/getMarkets.html","title":"api.getMarkets.value","keywords":"","body":"api.getMarkets.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/exchange/markets Function api.getMarkets.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters None Request sample HTTPCURLGET https://api.loopring.io/api/v2/exchange/markets HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/exchange/markets Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data List[MarketInfo] N field.getMarketInfoResponse.data / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [ { \"market\" : \"LRC-USDT\", \"baseTokenId\" : 2, \"quoteTokenId\" : 0, \"precisionForPrice\" : 6, \"orderbookAggLevels\" : 4, \"enabled\" : false } ] } Return code Return code Description 100000 code.100000 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS MarketInfo Field Type Required Description Sample market string Y field.marketInfo.market LRC-USDT baseTokenId integer Y field.marketInfo.baseTokenId 2 quoteTokenId integer Y field.marketInfo.quoteTokenId 0 precisionForPrice integer Y field.marketInfo.precisionForPrice 6 orderbookAggLevels integer Y field.marketInfo.orderbookAggLevels 4 enabled boolean Y field.marketInfo.enabled false "},"dex_apis/getTokens.html":{"url":"dex_apis/getTokens.html","title":"api.getTokens.value","keywords":"","body":"api.getTokens.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/exchange/tokens Function api.getTokens.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters None Request sample HTTPCURLGET https://api.loopring.io/api/v2/exchange/tokens HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/exchange/tokens Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data List[TokenInfo] N response.getTokenInfo.data / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [ { \"type\" : \"ERC20\", \"tokenId\" : 2, \"symbol\" : \"LRC\", \"name\" : \"Loopring\", \"address\" : \"0x97241525fe425C90eBe5A41127816dcFA5954b06\", \"unit\" : \"LRC\", \"decimals\" : 18, \"precision\" : 6, \"minOrderAmount\" : \"10000000000000000\", \"maxOrderAmount\" : \"1000000000000000000\", \"dustOrderAmount\" : \"1000000000000000\", \"enabled\" : true } ] } Return code Return code Description 100000 code.100000 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS TokenInfo field.tokenInfo.description Field Type Required Description Sample type string Y field.tokenInfo.typeAllowable : ['ERC20', 'ETH'] ERC20 tokenId integer Y field.tokenInfo.tokenId 2 symbol string Y field.tokenInfo.symbol LRC name string Y field.tokenInfo.name Loopring address string Y field.tokenInfo.address 0x97241525fe425C90eBe5A41127816dcFA5954b06 unit string Y field.tokenInfo.unit LRC decimals integer Y field.tokenInfo.decimals 18 precision integer Y field.tokenInfo.precision 6 minOrderAmount string Y field.tokenInfo.minOrderAmount 10000000000000000 maxOrderAmount string Y field.tokenInfo.maxOrderAmount 1000000000000000000 dustOrderAmount string Y field.tokenInfo.dustOrderAmount 1000000000000000 enabled boolean Y field.tokenInfo.enabled true "},"dex_apis/getExchangeInfo.html":{"url":"dex_apis/getExchangeInfo.html","title":"api.getExchangeInfo.value","keywords":"","body":"api.getExchangeInfo.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/exchange/info Function api.getExchangeInfo.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters None Request sample HTTPCURLGET https://api.loopring.io/api/v2/exchange/info HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/exchange/info Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data ExchangeInfo N response.getExchangeInfo.data / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"chainId\" : 1, \"exchangeId\" : 1, \"exchangeAddress\" : \"0xbA1D5779131aa529F51B4B00186E9e97f3BeB854\", \"onchainFees\" : [ { \"type\" : \"withdraw\", \"fee\" : \"2000000000000000\" } ] } } Return code Return code Description 100000 code.100000 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS ExchangeInfo field.exchangeInfo.description Field Type Required Description Sample chainId integer Y field.feeInfo.chainId 1 exchangeId integer Y field.feeInfo.exchangeId 1 exchangeAddress string Y field.feeInfo.exchangeAddress 0xbA1D5779131aa529F51B4B00186E9e97f3BeB854 onchainFees List[FeeInfo] Y field.feeInfo.onchainFees / FeeInfo field.feeInfo.description Field Type Required Description Sample type string Y field.feeInfo.type withdraw fee string Y field.feeInfo.fee 2000000000000000 "},"dex_apis/getDepth.html":{"url":"dex_apis/getDepth.html","title":"api.getDepth.value","keywords":"","body":"api.getDepth.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/depth Function api.getDepth.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample market string Y request.getDepth.market LRC-ETH level integer Y request.getDepth.level 2 limit integer N request.getDepth.limitDefault : 50 50 Request sample HTTPCURLGET https://api.loopring.io/api/v2/depth?market=LRC-ETH&level=2&limit=50 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/depth\\?market\\=LRC-ETH\\&level\\=2\\&limit\\=50 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data Depth N field.getDepth.data / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"version\" : 147, \"timestamp\" : 432312312, \"bids\" : [[\"0.002\",\"21000\",\"33220000\",\"4\"]], \"asks\" : [] } } Return code Return code Description 100000 code.100000 108000 code.108000 108001 code.108001 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS Depth model.depth.description Field Type Required Description Sample version integer Y field.depth.version 147 timestamp integer Y field.depth.timestamp 432312312 bids List[List[string]] Y field.depth.bids [[\"0.002\",\"21000\",\"33220000\",\"4\"]] asks List[List[string]] Y field.depth.asks [] "},"dex_apis/getTicker.html":{"url":"dex_apis/getTicker.html","title":"api.getTicker.value","keywords":"","body":"api.getTicker.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/ticker Function api.getTicker.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample market string Y request.getTicker.market LRC-ETH,LRC-USDT Request sample HTTPCURLGET https://api.loopring.io/api/v2/ticker?market=LRC-ETH,LRC-USDT HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/ticker\\?market\\=LRC-ETH,LRC-USDT Response fields Field Type Required Description Sample resultInfo ResultInfo Y field.resultInfo.message / data List[List[string]] N field.getTickerResponse.data [[\"LRC-ETH\", \"1584565505000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\"]] Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [[\"LRC-ETH\", \"1584565505000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\",\"1000\"]] } Return code Return code Description 100000 code.100000 100001 code.100001 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/getCandlestick.html":{"url":"dex_apis/getCandlestick.html","title":"api.getCandlestick.value","keywords":"","body":"api.getCandlestick.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/candlestick Function api.getCandlestick.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample market string Y request.getCandlestick.market LRC-ETH interval string Y request.getCandlestick.interval 5min start integer N request.getCandlestick.start 1584479105000 end integer N request.getCandlestick.end 1584565505000 limit integer N request.getCandlestick.limit 120 Request sample HTTPCURLGET https://api.loopring.io/api/v2/candlestick?market=LRC-ETH&interval=5min&start=1584479105000&end=1584565505000&limit=120 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/candlestick\\?market\\=LRC-ETH\\&interval\\=5min\\&start\\=1584479105000\\&end\\=1584565505000\\&limit\\=120 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data List[List[string]] N field.getCandlestickResponse.data [[\"1584565500000\",\"5\",\"1.5\",\"5.5\",\"8.8\",\"0.5\",\"0.5\",\"0.5\"]] Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [[\"1584565500000\",\"5\",\"1.5\",\"5.5\",\"8.8\",\"0.5\",\"0.5\",\"0.5\"]] } Return code Return code Description 100000 code.100000 100001 code.100001 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/getPrice.html":{"url":"dex_apis/getPrice.html","title":"api.getPrice.value","keywords":"","body":"api.getPrice.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/price Function api.getPrice.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample legal string Y request.getPrice.legal USD Request sample HTTPCURLGET https://api.loopring.io/api/v2/price?legal=USD HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/price\\?legal\\=USD Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data List[Price] N field.getPriceResponse.data / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : [ { \"symbol\" : \"LRC\", \"price\" : \"0\", \"timestamp\" : 0 } ] } Return code Return code Description 100000 code.100000 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS Price model.price Field Type Required Description Sample symbol string Y field.price.symbol LRC price string Y field.price.price 0 timestamp integer Y field.price.timestamp 0 "},"dex_apis/getMarketTrade.html":{"url":"dex_apis/getMarketTrade.html","title":"api.getMarketTrade.value","keywords":"","body":"api.getMarketTrade.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/trade Function api.getMarketTrade.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample market string Y request.getMarketTrade.market LRC-USDT limit integer N request.getMarketTrade.limit 20 Request sample HTTPCURLGET https://api.loopring.io/api/v2/trade?market=LRC-USDT&limit=20 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/trade\\?market\\=LRC-USDT\\&limit\\=20 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data MarketTrades N model.marketTrades / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 0, \"trades\" : [[\"0\",\"0\",\"BUY\",\"0\",\"0\",\"LRC-USDT\",\"0\"]] } } Return code Return code Description 100000 code.100000 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS MarketTrades model.marketTrades Field Type Required Description Sample totalNum integer Y field.marketTrades.totalNum 0 trades List[List[string]] Y field.marketTrades.trades [[\"0\",\"0\",\"BUY\",\"0\",\"0\",\"LRC-USDT\",\"0\"]] "},"dex_apis/getAllowance.html":{"url":"dex_apis/getAllowance.html","title":"api.getAllowance.value","keywords":"","body":"api.getAllowance.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/allowances Function api.getAllowance.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample owner string Y request.owner 0x0000000000000000000000000000000000000000 token string Y request.getAllowance.token 0x0000000000000000000000000000000000000000 Request sample HTTPCURLGET https://api.loopring.io/api/v2/allowances?owner=0x0000000000000000000000000000000000000000&token=0x0000000000000000000000000000000000000000 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/allowances\\?owner\\=0x0000000000000000000000000000000000000000\\&token\\=0x0000000000000000000000000000000000000000 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data string N field.getAllowancesResponse.data 0 Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"0\" } Return code Return code Description 100000 code.100000 104205 code.104205 104208 code.104208 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/getTokenBalance.html":{"url":"dex_apis/getTokenBalance.html","title":"api.getTokenBalance.value","keywords":"","body":"api.getTokenBalance.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/tokenBalances Function api.getTokenBalance.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample owner string Y request.owner 0x0000000000000000000000000000000000000000 token string Y request.getTokenBalance.token 0x0000000000000000000000000000000000000000 Request sample HTTPCURLGET https://api.loopring.io/api/v2/tokenBalances?owner=0x0000000000000000000000000000000000000000&token=0x0000000000000000000000000000000000000000 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/tokenBalances\\?owner\\=0x0000000000000000000000000000000000000000\\&token\\=0x0000000000000000000000000000000000000000 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data string N field.getTokenBalancesResponse.data 0 Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : \"0\" } Return code Return code Description 100000 code.100000 104205 code.104205 104208 code.104208 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS "},"dex_apis/getAccount.html":{"url":"dex_apis/getAccount.html","title":"api.getAccount.value","keywords":"","body":"api.getAccount.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/account Function api.getAccount.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample owner string Y request.owner 0x123456 Request sample HTTPCURLGET https://api.loopring.io/api/v2/account?owner=0x123456 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/account\\?owner\\=0x123456 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data DexAccount Y model.dexAccount 0 Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"accountId\" : 10, \"isFreeze\" : false, \"publicKeyX\" : \"123\", \"publicKeyY\" : \"456\" } } Return code Return code Description 100000 code.100000 101001 code.101001 101002 code.101002 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS DexAccount model.dexAccount Field Type Required Description Sample accountId integer Y field.dexAccount.accountId 10 isFreeze boolean Y field.dexAccount.isFreeze false publicKeyX string Y field.dexAccount.publicKeyX 123 publicKeyY string Y field.dexAccount.publicKeyY 456 "},"dex_apis/getUserCreate.html":{"url":"dex_apis/getUserCreate.html","title":"api.getUserCreate.value","keywords":"","body":"api.getUserCreate.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/user/createInfo Function api.getUserCreate.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample accountId integer Y request.getUserTxs.accountId 1 start integer N request.getUserTxs.start 1578558098000 end integer N request.getUserTxs.end 1578558098000 status string N request.getUserTxs.statusAllowable : ['processing', 'processed', 'received', 'failed'] processing,processed limit integer N request.getUserTxs.limit 50 fromHash string N request.getUserTxs.fromHash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 offset integer N request.getUserTxs.offsetDefault : 0L 1 Request sample HTTPCURLGET https://api.loopring.io/api/v2/user/createInfo?accountId=1&start=1578558098000&end=1578558098000&status=processing,processed&limit=50&fromHash=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632&offset=1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/createInfo\\?accountId\\=1\\&start\\=1578558098000\\&end\\=1578558098000\\&status\\=processing,processed\\&limit\\=50\\&fromHash\\=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\\&offset\\=1 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data TxDataList N model.TxDataList.description / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 1, \"transactions\" : [ { \"id\" : 1, \"txType\" : \"deposit\", \"symbol\" : \"LRC\", \"amount\" : \"1000000000000000000\", \"realAmount\" : \"1000000000000000000\", \"receiver\" : 1, \"txHash\" : \"0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\", \"feeAmount\" : \"1000000000000000\", \"status\" : \"processing\", \"progress\" : \"100%\", \"timestamp\" : 1578572292000, \"depositType\" : \"DEPOSIT\", \"blockNum\" : 100 } ] } } Return code Return code Description 100000 code.100000 107001 code.107001 104001 code.104001 104002 code.104002 104003 code.104003 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS TxDataList model.TxDataList.description Field Type Required Description Sample totalNum integer Y field.TxDataList.totalNum 1 transactions List[TxData] Y field.TxDataList.transactions / TxData model.TxData.description Field Type Required Description Sample id integer Y field.TxData.id 1 txType string Y field.TxData.txTypeAllowable : ['deposit', 'onchainWithdrawal', 'transfer', 'createAccount', 'changePassword'] deposit symbol string Y field.TxData.symbol LRC amount string Y field.TxData.amount 1000000000000000000 realAmount string Y field.TxData.realAmount 1000000000000000000 receiver integer N field.TxData.receiver 1 txHash string Y field.TxData.txHash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 feeAmount string Y field.TxData.txType 1000000000000000 status string Y field.TxData.statusAllowable : ['processing', 'processed', 'received', 'failed'] processing progress string Y field.TxData.progress 100% timestamp integer Y field.TxData.timestamp 1578572292000 depositType string N field.TxData.depositTypeAllowable : ['DEPOSIT', 'CREATE_ACCOUNT', 'UPDATE_ACCOUNT'] DEPOSIT blockNum integer N field.TxData.blockNum 100 "},"dex_apis/getUserUpdate.html":{"url":"dex_apis/getUserUpdate.html","title":"api.getUserUpdate.value","keywords":"","body":"api.getUserUpdate.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/user/updateInfo Function api.getUserUpdate.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample accountId integer Y request.getUserTxs.accountId 1 start integer N request.getUserTxs.start 1578558098000 end integer N request.getUserTxs.end 1578558098000 status string N request.getUserTxs.statusAllowable : ['processing', 'processed', 'received', 'failed'] processing,processed limit integer N request.getUserTxs.limit 50 fromHash string N request.getUserTxs.fromHash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 offset integer N request.getUserTxs.offsetDefault : 0L 1 Request sample HTTPCURLGET https://api.loopring.io/api/v2/user/updateInfo?accountId=1&start=1578558098000&end=1578558098000&status=processing,processed&limit=50&fromHash=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632&offset=1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/updateInfo\\?accountId\\=1\\&start\\=1578558098000\\&end\\=1578558098000\\&status\\=processing,processed\\&limit\\=50\\&fromHash\\=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\\&offset\\=1 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data TxDataList N model.TxDataList.description / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 1, \"transactions\" : [ { \"id\" : 1, \"txType\" : \"deposit\", \"symbol\" : \"LRC\", \"amount\" : \"1000000000000000000\", \"realAmount\" : \"1000000000000000000\", \"receiver\" : 1, \"txHash\" : \"0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\", \"feeAmount\" : \"1000000000000000\", \"status\" : \"processing\", \"progress\" : \"100%\", \"timestamp\" : 1578572292000, \"depositType\" : \"DEPOSIT\", \"blockNum\" : 100 } ] } } Return code Return code Description 100000 code.100000 107001 code.107001 104001 code.104001 104002 code.104002 104003 code.104003 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS TxDataList model.TxDataList.description Field Type Required Description Sample totalNum integer Y field.TxDataList.totalNum 1 transactions List[TxData] Y field.TxDataList.transactions / TxData model.TxData.description Field Type Required Description Sample id integer Y field.TxData.id 1 txType string Y field.TxData.txTypeAllowable : ['deposit', 'onchainWithdrawal', 'transfer', 'createAccount', 'changePassword'] deposit symbol string Y field.TxData.symbol LRC amount string Y field.TxData.amount 1000000000000000000 realAmount string Y field.TxData.realAmount 1000000000000000000 receiver integer N field.TxData.receiver 1 txHash string Y field.TxData.txHash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 feeAmount string Y field.TxData.txType 1000000000000000 status string Y field.TxData.statusAllowable : ['processing', 'processed', 'received', 'failed'] processing progress string Y field.TxData.progress 100% timestamp integer Y field.TxData.timestamp 1578572292000 depositType string N field.TxData.depositTypeAllowable : ['DEPOSIT', 'CREATE_ACCOUNT', 'UPDATE_ACCOUNT'] DEPOSIT blockNum integer N field.TxData.blockNum 100 "},"dex_apis/getUserBalances.html":{"url":"dex_apis/getUserBalances.html","title":"api.getUserBalances.value","keywords":"","body":"api.getUserBalances.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/user/balances Function api.getUserBalances.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample accountId integer Y request.getUserBalances.accountId 1 tokens string N request.getUserBalances.tokens 0,1 Request sample HTTPCURLGET https://api.loopring.io/api/v2/user/balances?accountId=1&tokens=0,1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/balances\\?accountId\\=1\\&tokens\\=0,1 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / balances List[Balance] Y field.Balance.balances / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"balances\" : [ { \"accountId\" : 10, \"tokenId\" : 10, \"totalAmount\" : \"100\", \"frozenAmount\" : \"100\" } ] } Return code Return code Description 100000 code.100000 104001 code.104001 104002 code.104002 104003 code.104003 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS Balance model.Balance.description Field Type Required Description Sample accountId integer Y field.Balance.accountId 10 tokenId integer Y field.Balance.tokenId 10 totalAmount string Y field.Balance.totalAmount 100 frozenAmount string Y field.Balance.frozenAmount 100 "},"dex_apis/getUserDeposits.html":{"url":"dex_apis/getUserDeposits.html","title":"api.getUserDeposits.value","keywords":"","body":"api.getUserDeposits.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/user/deposits Function api.getUserDeposits.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample accountId integer Y request.getUserTxs.accountId 1 start integer N request.getUserTxs.start 1578558098000 end integer N request.getUserTxs.end 1578558098000 allType boolean N request.getUserDeposits.allType false status string N request.getUserTxs.statusAllowable : ['processing', 'processed', 'received', 'failed'] processing,processed limit integer N request.getUserTxs.limit 50 fromHash string N request.getUserTxs.fromHash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 tokenSymbol string N request.getUserTxs.tokenSymbol ETH offset integer N request.getUserTxs.offsetDefault : 0L 1 Request sample HTTPCURLGET https://api.loopring.io/api/v2/user/deposits?accountId=1&start=1578558098000&end=1578558098000&allType=false&status=processing,processed&limit=50&fromHash=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632&tokenSymbol=ETH&offset=1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/deposits\\?accountId\\=1\\&start\\=1578558098000\\&end\\=1578558098000\\&allType\\=false\\&status\\=processing,processed\\&limit\\=50\\&fromHash\\=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\\&tokenSymbol\\=ETH\\&offset\\=1 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data TxDataList N model.TxDataList.description / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 1, \"transactions\" : [ { \"id\" : 1, \"txType\" : \"deposit\", \"symbol\" : \"LRC\", \"amount\" : \"1000000000000000000\", \"realAmount\" : \"1000000000000000000\", \"receiver\" : 1, \"txHash\" : \"0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\", \"feeAmount\" : \"1000000000000000\", \"status\" : \"processing\", \"progress\" : \"100%\", \"timestamp\" : 1578572292000, \"depositType\" : \"DEPOSIT\", \"blockNum\" : 100 } ] } } Return code Return code Description 100000 code.100000 107001 code.107001 104001 code.104001 104002 code.104002 104003 code.104003 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS TxDataList model.TxDataList.description Field Type Required Description Sample totalNum integer Y field.TxDataList.totalNum 1 transactions List[TxData] Y field.TxDataList.transactions / TxData model.TxData.description Field Type Required Description Sample id integer Y field.TxData.id 1 txType string Y field.TxData.txTypeAllowable : ['deposit', 'onchainWithdrawal', 'transfer', 'createAccount', 'changePassword'] deposit symbol string Y field.TxData.symbol LRC amount string Y field.TxData.amount 1000000000000000000 realAmount string Y field.TxData.realAmount 1000000000000000000 receiver integer N field.TxData.receiver 1 txHash string Y field.TxData.txHash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 feeAmount string Y field.TxData.txType 1000000000000000 status string Y field.TxData.statusAllowable : ['processing', 'processed', 'received', 'failed'] processing progress string Y field.TxData.progress 100% timestamp integer Y field.TxData.timestamp 1578572292000 depositType string N field.TxData.depositTypeAllowable : ['DEPOSIT', 'CREATE_ACCOUNT', 'UPDATE_ACCOUNT'] DEPOSIT blockNum integer N field.TxData.blockNum 100 "},"dex_apis/getUserWithdrawals.html":{"url":"dex_apis/getUserWithdrawals.html","title":"api.getUserWithdrawals.value","keywords":"","body":"api.getUserWithdrawals.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/user/withdrawals Function api.getUserWithdrawals.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample accountId integer Y request.getUserTxs.accountId 1 start integer N request.getUserTxs.start 1578558098000 end integer N request.getUserTxs.end 1578558098000 status string N request.getUserTxs.statusAllowable : ['processing', 'processed', 'received', 'failed'] processing,processed limit integer N request.getUserTxs.limit 50 fromHash string N request.getUserTxs.fromHash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 tokenSymbol string N request.getUserTxs.tokenSymbol LRC offset integer N request.getUserTxs.offsetDefault : 0L 1 Request sample HTTPCURLGET https://api.loopring.io/api/v2/user/withdrawals?accountId=1&start=1578558098000&end=1578558098000&status=processing,processed&limit=50&fromHash=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632&tokenSymbol=LRC&offset=1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/withdrawals\\?accountId\\=1\\&start\\=1578558098000\\&end\\=1578558098000\\&status\\=processing,processed\\&limit\\=50\\&fromHash\\=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\\&tokenSymbol\\=LRC\\&offset\\=1 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data TxDataList N model.TxDataList.description / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 1, \"transactions\" : [ { \"id\" : 1, \"txType\" : \"deposit\", \"symbol\" : \"LRC\", \"amount\" : \"1000000000000000000\", \"realAmount\" : \"1000000000000000000\", \"receiver\" : 1, \"txHash\" : \"0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\", \"feeAmount\" : \"1000000000000000\", \"status\" : \"processing\", \"progress\" : \"100%\", \"timestamp\" : 1578572292000, \"depositType\" : \"DEPOSIT\", \"blockNum\" : 100 } ] } } Return code Return code Description 100000 code.100000 107001 code.107001 104001 code.104001 104002 code.104002 104003 code.104003 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS TxDataList model.TxDataList.description Field Type Required Description Sample totalNum integer Y field.TxDataList.totalNum 1 transactions List[TxData] Y field.TxDataList.transactions / TxData model.TxData.description Field Type Required Description Sample id integer Y field.TxData.id 1 txType string Y field.TxData.txTypeAllowable : ['deposit', 'onchainWithdrawal', 'transfer', 'createAccount', 'changePassword'] deposit symbol string Y field.TxData.symbol LRC amount string Y field.TxData.amount 1000000000000000000 realAmount string Y field.TxData.realAmount 1000000000000000000 receiver integer N field.TxData.receiver 1 txHash string Y field.TxData.txHash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 feeAmount string Y field.TxData.txType 1000000000000000 status string Y field.TxData.statusAllowable : ['processing', 'processed', 'received', 'failed'] processing progress string Y field.TxData.progress 100% timestamp integer Y field.TxData.timestamp 1578572292000 depositType string N field.TxData.depositTypeAllowable : ['DEPOSIT', 'CREATE_ACCOUNT', 'UPDATE_ACCOUNT'] DEPOSIT blockNum integer N field.TxData.blockNum 100 "},"dex_apis/getUserTransfers.html":{"url":"dex_apis/getUserTransfers.html","title":"api.getUserTransfers.value","keywords":"","body":"api.getUserTransfers.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/user/transfers Function api.getUserTransfers.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample accountId integer Y request.getUserTxs.accountId 1 start integer N request.getUserTxs.start 1578558098000 end integer N request.getUserTxs.end 1578558098000 status string N request.getUserTxs.statusAllowable : ['processing', 'processed', 'received', 'failed'] processing,processed limit integer N request.getUserTxs.limit 50 fromHash string N request.getUserTxs.fromHash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 tokenSymbol string N request.getUserTxs.tokenSymbol LRC offset integer N request.getUserTxs.offsetDefault : 0L 1 Request sample HTTPCURLGET https://api.loopring.io/api/v2/user/transfers?accountId=1&start=1578558098000&end=1578558098000&status=processing,processed&limit=50&fromHash=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632&tokenSymbol=LRC&offset=1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/transfers\\?accountId\\=1\\&start\\=1578558098000\\&end\\=1578558098000\\&status\\=processing,processed\\&limit\\=50\\&fromHash\\=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\\&tokenSymbol\\=LRC\\&offset\\=1 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data TxDataList N model.TxDataList.description / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 1, \"transactions\" : [ { \"id\" : 1, \"txType\" : \"deposit\", \"symbol\" : \"LRC\", \"amount\" : \"1000000000000000000\", \"realAmount\" : \"1000000000000000000\", \"receiver\" : 1, \"txHash\" : \"0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\", \"feeAmount\" : \"1000000000000000\", \"status\" : \"processing\", \"progress\" : \"100%\", \"timestamp\" : 1578572292000, \"depositType\" : \"DEPOSIT\", \"blockNum\" : 100 } ] } } Return code Return code Description 100000 code.100000 107001 code.107001 104001 code.104001 104002 code.104002 104003 code.104003 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS TxDataList model.TxDataList.description Field Type Required Description Sample totalNum integer Y field.TxDataList.totalNum 1 transactions List[TxData] Y field.TxDataList.transactions / TxData model.TxData.description Field Type Required Description Sample id integer Y field.TxData.id 1 txType string Y field.TxData.txTypeAllowable : ['deposit', 'onchainWithdrawal', 'transfer', 'createAccount', 'changePassword'] deposit symbol string Y field.TxData.symbol LRC amount string Y field.TxData.amount 1000000000000000000 realAmount string Y field.TxData.realAmount 1000000000000000000 receiver integer N field.TxData.receiver 1 txHash string Y field.TxData.txHash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 feeAmount string Y field.TxData.txType 1000000000000000 status string Y field.TxData.statusAllowable : ['processing', 'processed', 'received', 'failed'] processing progress string Y field.TxData.progress 100% timestamp integer Y field.TxData.timestamp 1578572292000 depositType string N field.TxData.depositTypeAllowable : ['DEPOSIT', 'CREATE_ACCOUNT', 'UPDATE_ACCOUNT'] DEPOSIT blockNum integer N field.TxData.blockNum 100 "},"dex_apis/getUserTrades.html":{"url":"dex_apis/getUserTrades.html","title":"api.getUserTrades.value","keywords":"","body":"api.getUserTrades.value Traffic limit(#Request/seconds): 1 / 1 API Overview HTTP method GET Visit path /api/v2/user/trades Function api.getUserTrades.notes API description Header Field Type Required Description Sample X-API-KEY string Y API Key \"sra1aavfa\" Request parameters Field Type Required Description Sample accountId integer Y request.getUserTxs.accountId 1 orderHash string N request.getUserTrades.orderHash 0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632 offset integer N request.getUserTxs.offset 1 limit integer N request.getUserTxs.limit 50 fromId integer N request.getUserTrades.fromId 1 Request sample HTTPCURLGET https://api.loopring.io/api/v2/user/trades?accountId=1&orderHash=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632&offset=1&limit=50&fromId=1 HTTP/1.1 Host: api.loopring.io Connection: keep-alive Accept: */* Accept-Encoding: gzip, deflate, br Accept-Language: zh,en;q=0.9 X-API-KEY: sra1aavfacurl -H \"X-API-KEY:sra1aavfa\" https://api.loopring.io/api/v2/user/trades\\?accountId\\=1\\&orderHash\\=0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632\\&offset\\=1\\&limit\\=50\\&fromId\\=1 Response fields Field Type Required Description Sample resultInfo ResultInfo Y model.resultInfo.description / data TradeList N model.TradeList.description / Response sample { \"resultInfo\" : { \"code\" : 0, \"message\" : \"SUCCESS\" }, \"data\" : { \"totalNum\" : 100, \"trades\" : [[\"0\",\"0\",\"BUY\",\"0\",\"0\",\"LRC-USDT\",\"0\"]] } } Return code Return code Description 100000 code.100000 104001 code.104001 104002 code.104002 104003 code.104003 Model ResultInfo model.resultInfo.description Field Type Required Description Sample code integer Y field.resultInfo.code 0 message string Y field.resultInfo.message SUCCESS TradeList model.TradeList.description Field Type Required Description Sample totalNum integer Y field.TradeList.totalNum 100 trades List[List[string]] Y field.marketTrades.trades [[\"0\",\"0\",\"BUY\",\"0\",\"0\",\"LRC-USDT\",\"0\"]] "},"websocket/overview.html":{"url":"websocket/overview.html","title":"Websocket API","keywords":"","body":"Websocket 概述 接入URL wss://api.loopring.io/v2/ws 心跳消息 当用户连接到光锥中继的Websocket之后，中继会进行心跳检测，每30s会发送“ping”信息，期待接收客户端的“pong”信息。2分钟未收到回复会自动断开连接。 订阅规则 用户在与光锥中继建立Websocket连接之后，可以订阅消息。需满足以下规则： 用户可以一次订阅或者取消订阅多个主题，如果订阅的多个主题中有需要ApiKey的，则必须包含ApiKey。 用户可以重复订阅相同的主题，最新的订阅条件会覆盖之前的订阅条件。 用户在一次订阅中，不允许订阅相同的主题 用户在取消订阅需要ApiKey的主题时，必须包含订阅该主题时所使用的ApiKey。 模型 订阅结构 字段 类型 是否必现 说明 举例 op string 是 订阅或者取消订阅 \"sub\" apiKey string 否 订阅要求传ApiKey的主题才是必须的 “16M2hKHw9b5VuP21YBAJQmCd3VhuNtdDqG” args list 是 订阅的主题及条件 [ \"depth&LRC-ETH&0\",\"trade&LRC-ETH\"] 订阅示例 订阅示例 { \"op\": \"sub\", \"args\": [ \"candlestick&LRC-BTC&1Hour\", \"depth&LRC-BTC&1\", \"depth10&LRC-BTC&1\", \"trade&LRC-BTC\", \"ticker&LRC-BTC\" ] } 取消订阅示例 { \"op\": \"unSub\", \"args\": [ \"candlestick\", \"depth\", \"depth10\", \"trade\", \"ticker\" ] } 订阅响应结构 字段 类型 是否必现 说明 举例 op string 是 用户传送来的操作 \"sub\" apiKey string 否 订阅要求传ApiKey的主题才是必须的 “16M2hKHw9b5VuP21YBAJQmCd3VhuNtdDqG” args list 是 订阅的主题及条件 [ \"depth&LRC-ETH&0\",\"trade&LRC-ETH\"] result Result 是 订阅结果 / 订阅返回示例 订阅成功示例 { \"op\": \"sub\", \"apiKey\": \"\", \"args\": [ \"candlestick&LRC-ETH&1hr\", \"depth&LRC-ETH&1\", \"trade&LRC-ETH\", \"ticker&LRC-ETH\" ], \"result\": { \"status\": \"ok\" } } 订阅条件不合法的失败示例 { \"op\": \"sub\", \"apiKey\": \"\", \"args\": [ \"candlestick&LRC-ETH\" ], \"result\": { \"status\": \"failed\", \"error\": { \"code\": 104106, \"message\": \"receive illegal arg for candlestick:lrc-eth\" } } } 订阅条件无法解析的失败示例 { \"op\": \"\", \"apiKey\": \"\", \"args\": [], \"result\": { \"status\": \"failed\", \"error\": { \"code\": 104115, \"message\": \"unexpected msg:xxx\" } } } Result 字段 类型 是否必现 说明 举例 status string 是 订阅是否成功 \"OK\" error Error 否 订阅失败时的错误信息 / Error 字段 类型 是否必现 说明 举例 code integer 是 错误码 107500 message string 是 错误信息 空的订阅信息 公共错误码信息 返回码 描述 104100 空的订阅信息 104101 不支持的操作（光锥中继服务器仅支持sub 和 unsub操作） 104102 不支持的主题 104103 重复的订阅主题 104104 缺少ApiKey信息 104105 与之前订阅使用的ApiKey不符 104112 不合法的ApiKey 104113 取消订阅未曾订阅过的主题 104114 无法通过APiKey找到对应的用户 104115 无法识别的订阅消息 "},"websocket/depth.html":{"url":"websocket/depth.html","title":"订阅订单簿更新","keywords":"","body":"depth 主题 订阅深度的主题，获取定时推送的深度信；订阅该主题不需要apiKey；在没有数据更新时，不进行数据推送。 订阅规则 主题&市场&归并等级 支持的市场以及市场对应支持的归并等级，可以通过api接口api/v2/exchange/markets 获取 返回错误码 返回码 描述 104107 depth主题的订阅条件不合法或者不支持 推送示例 { \"topic\": \"depth&LRC-ETH&1\", \"ts\": 1584717910000, \"startVersion\": 1212121, \"endVersion\": \"1212123\", \"data\": { bids: [ [ \"295.97\", //price \"456781000000000\", //size \"3015000000000\", //volume \"4\" //count ] ], asks: [ ] } } 模型 推送数据结构 字段 类型 是否必现 说明 举例 topic string 是 订阅的主题和条件 \"depth&LRC-ETH&1\" ts integer 是 推送时间 1584717910000 startVersion integer 是 该次推送的起始版本号 1212121 endVersion integer 是 该次推送的终结版本号 1212123 data Depth 是 深度信息 / Depth数据结构 字段 类型 是否必现 说明 举例 bids List[List[string]] 是 买单深度 / asks List[List[string]] 是 卖单深度 / 深度条目 每一条深度数据 字段编号 类型 是否必现 说明 举例 1 string 是 价格 \"0.002\" 2 string 是 挂单量 \"21000\" 3 string 是 挂单总量 \"33220000\" 4 string 是 聚合的订单数目 \"4\" 如何构建本地的Orderbook 订阅 depth主题 开始缓存收到的更新。同一个价位，后收到的更新覆盖前面的。 访问接口 api/v1/depth 获得一个全量的深度快照。 3中获取的快照如果version大约本地version（endVersion），则直接覆盖，如果小于本地version，则相同的价格不覆盖，不同的价格则覆盖。 将深度快照中的内容更新到本地orderbook副本中，并从websocket接收到的第一个startVersion = 本地version 的event开始继续更新本地副本。 每一个新推送的startVersion应该恰好等于上一个event的endVersion+1，否则可能出现了丢包，请从step3重新进行初始化 每一个推送中的挂单量代表这个价格目前的挂单量绝对值，而不是相对变化。 如果某个价格对应的挂单量为0，表示该价位的挂单已经撤单或者被吃，应该移除这个价位。 "},"websocket/depth10.html":{"url":"websocket/depth10.html","title":"订阅订单簿买卖前10的全量推送","keywords":"","body":"depth10 主题 获取定时推送的当前深度中卖单和买单的前10条数据。该订阅不需要apikey，有无数据都会进行推送。 订阅规则： ​ 主题&市场&归并等级 支持的市场以及市场对应支持的归并等级，可以通过api接口api/v2/exchange/markets 获取 返回错误码 返回码 描述 104108 depth10主题的订阅条件不合法或者不支持 订阅推送示例 { \"topic\": \"depth10&LRC-BTC&1\", \"ts\": 1565844208, \"data\": { \"bids\": [ [ \"295.97\", //price \"4567810000000000\", //size \"30150000000000\", //volume \"2\" //count ] ], \"asks\": [ [ \"298.97\", \"456781000000000000\", \"301500000000000\", \"2\" ] ] } } 模型 推送数据结构 字段 类型 是否必现 说明 举例 topic string 是 订阅的主题和条件 \"depth10&LRC-ETH&1\" ts integer 是 推送时间 1584717910000 data Depth 是 深度信息 / Depth数据结构 字段 类型 是否必现 说明 举例 bids List[List[string]] 是 买单深度 / asks List[List[string]] 是 卖单深度 / 深度条目 每一条深度数据 字段编号 类型 是否必现 说明 举例 1 string 是 价格 \"0.002\" 2 string 是 挂单量 \"21000\" 3 string 是 挂单总量 \"33220000\" 4 string 是 聚合的订单数目 \"4\" "},"websocket/trade.html":{"url":"websocket/trade.html","title":"订阅市场交易的更新","keywords":"","body":"trade 主题 订阅该主题，获取定时的最新的成交信息；没有更新则不推送 订阅规则 主题&市场 支持的市场可以通过api接口api/v2/exchange/markets 获取 返回错误码 返回码 描述 104109 trade主题的订阅条件不合法或者不支持 订阅推送示例 { \"topic\": \"trade&LRC-ETH\", \"ts\": 1584717910000, \"data\": { [ \"1584717910000\", //timestamp \"123456789\", //tradeId \"buy\", //side \"500000\", //size \"0.0008\", //price \"100\" //fee ] } } 模型 推送数据结构 字段 类型 是否必现 说明 举例 topic string 是 订阅的主题和条件 \"trade&LRC-ETH\" integer integer 是 推送时间 1584717910000 data List[string] 是 深度信息 / Trade 数据结构 字段编号 类型 是否必现 说明 举例 1 integer 是 成交时间 1584717910000 2 integer 是 交易编号 123456789 3 string 是 买或者卖，指taker \"buy\" 4 string 是 base token的成交数量 \"500000\" 5 string 是 成交价格 \"0.0008\" 6 string 是 base token的收费 \"100\" "},"websocket/ticker.html":{"url":"websocket/ticker.html","title":"订阅市场Ticker的更新","keywords":"","body":"ticker 主题 订阅以获得定时推送的最新的ticker信息，没有更新则不推送 订阅规则 主题&市场 支持的市场可以通过api接口api/v2/exchange/markets获取 返回错误码 返回码 描述 104111 ticker主题的订阅条件不合法或者不支持 订阅推送示例 { \"topic\": \"ticker&LRC-ETH\", \"ts\": 1584717910000, \"data\": [ \"LRC-ETH\", //market \"1584717910000\", //timestamp \"5000000\", //size \"1000\", //volume \"0.0002\", //open \"0.00025\", //high \"0.0002\", //low \"0.00025\", //close \"5000\", //count \"0.00026\", //bid \"0.00027\" //ask ] } 模型 订阅推送模型 字段 类型 是否必现 说明 举例 topic string 是 订阅的主题和条件 \"ticker&LRC-ETH\" integer integer 是 推送时间 1584717910000 data List[string] 是 深度信息 / Ticker数据结构 字段编号 类型 是否必现 说明 举例 1 string 是 市场 \"LRC-ETH\" 2 integer 是 ticker生成时间 1584717910000 3 string 是 base token的成交量 \"5000000\" 4 string 是 quote token 的成交量 \"1000\" 5 string 是 开盘价 \"0.0002\" 6 string 是 最高价 0.00025\" 7 string 是 最低价 \"0.0002\" 8 string 是 最新成交价 \"0.00025\" 9 integer 是 成交笔数 5000 10 string 是 买单最高价 \"0.00026\" 11 string 是 卖单最低价 \"0.00027\" "},"websocket/candleStick.html":{"url":"websocket/candleStick.html","title":"订阅市场CandleStick更新","keywords":"","body":"candlestick 主题 订阅candlestick，获取定时推送的candlestick数据的更新消息推送。订阅该主题不需要传ApiKey信息。 订阅格式 主题&市场&间隔 支持的市场可以通过api接口api/v2/exchange/markets获取 支持的间隔（interval）为1min, 5min, 15min, 30min, 1hr, 2hr, 4hr, 12hr, 1d, 1w 间隔 说明 1min 1分钟 5min 5分钟 15min 15分钟 30min 30分钟 1hr 1小时 2hr 2小时 4hr 4小时 12hr 12小时 1d 1天 1w 1周 返回错误码 返回码 描述 104106 candlestick主题的订阅条件不合法或者不支持 推送示例 { \"topic\": \"candlestick&lrc-btc&1hr\", \"ts\":1584717910000, \"data\": { \"1584717910000\", //start \"5000\", //count \"3997.3\", //open \"3998.7\", //close \"4031.9\", //high \"3982.5\", //low \"500000000000000000\", //size \"2617521141385000000\", //volume } } 模型 推送数据结构 字段 类型 是否必现 说明 举例 topic string 是 订阅的主题和条件 \"candlestick&lrc-btc&1hr\" ts integer 时 推送时间（毫秒） 1584717910000 data List[string] 是 candlestick数据 / CandleStick结构 字段编号 类型 是否必现 说明 举例 1 integer 是 指开盘时间 1584717910000 2 integer 是 成交笔数 5000 3 string 是 开盘价格 \"3997.3\" 4 string 是 收盘价格 \"3998.7\" 5 string 是 最高价 \"4031.9\" 6 string 是 最低价 \"3982.5\" 7 string 是 为wei为单位的base token的成交数量 “500000000000000000” 8 string 是 为wei为单位 quote token的成交数量 \"2617521141385000000\" "},"websocket/account.html":{"url":"websocket/account.html","title":"订阅用户余额更新","keywords":"","body":"Account 主题 订阅用户的余额和冻结金额相关的信息 订阅规则 主题即Account 订阅该主题必须传Apikey 订阅推送示例 { \"topic\": \"account\", \"ts\":1584717910000, \"data\": { \"accountId\":1, \"totalAmount\": \"24439253519655\", \"tokenId\": 2, \"frezeeAmount\": \"0\" } } 模型 订阅推送数据结构 字段 类型 是否必现 说明 举例 topic string 是 订阅的主题和条件 \"account\" ts integer 是 推送时间 1584717910000 data Balance 是 余额信息 / Balance 数据结构 字段 类型 是否必现 说明 举例 accountId integer 是 用户Id 1 tokenId integer 是 通证Id 2 totalAmount string 是 用户余额 \"24439253519655\" frezeeAmount string 是 冻结的余额 \"0\" "},"websocket/order.html":{"url":"websocket/order.html","title":"订阅用户订单更新","keywords":"","body":"order主题 订阅用户的订单更新 订阅规则 主题&市场 订阅该主题必须传apikey 支持的市场可以通过api接口api/v2/exchange/markets 获取 返回错误码 返回码 描述 104110 order主题的订阅条件不合法或者不支持 推送示例 { \"topic\": \"order&LRC-BTC\", \"ts\":1565844328, \"data\": { \"hash\": \"11212\", \"clientOrderId\": \"myOrder\", \"size\": \"500000000\", \"volume\": \"210000000\", \"price\": \"0.000004\", \"filledSize\": \"30000000\", \"filledVolume\": \"100000\", \"filledFee\": \"1000000\", \"status\": \"processing\", \"createdAt\": \"1494900087\", \"validSince\": \"1494900087\", \"validUntil\": \"1495900087\", \"side\": \"buy\", \"market\": \"LRC-BTC\" } } 模型 推送数据结构 字段 类型 是否必现 说明 举例 topic string 是 订阅的主题和条件 \"order&lrc-eth\" ts integer 是 推送时间 1584717910000 data Order 是 订单信息 / Order数据结构 字段 类型 是否必现 说明 举例 hash string 是 订单哈希 \"11212\" clientOrderId string 是 用户自定义id \"myOrder\" size string 是 base token 的数量 \"500000000\" volume string 是 quote token 的数量 \"210000000\" price string 是 订单价格 \"0.000004\" filledSize string 是 已经成交的basetoken的数量 \"30000000\" filledVolume string 是 已经成交的quotetoken的数量 \"100000\" filledFee string 是 已支付的手续费 \"1000000\" status string 是 订单状态 \"processing\" createdAt integer 是 订单创建时间 1584717910000 updateAt integer 是 订单最后一次的更新时间 1584717910000 side string 是 买或卖 \"buy\" market string 是 市场 \"LRC-ETH\" 订单状态取值范围 状态 说明 processing 订单进行中，订单等待成交或者已经成交一部分 processed 订单完全成交 cancelling 取消中 cancelled 订单取消 expired 订单过期 waiting 订单还未生效 "}}