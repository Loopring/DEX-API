{"swagger": "2.0", "info": {"description": "LightCone DEX function interpretation", "version": "1.0", "title": "LightCone 2.0 API Documentation", "termsOfService": "http://Loopring.com", "contact": {"name": "Loopring@Loopring.com"}, "license": {"name": "license Loopring", "url": "https://loopring.org"}}, "host": "161.189.106.255:31610", "basePath": "/", "tags": [{"name": "Loopring DEX Restful API"}, {"name": "LightCone WebSocket API"}], "paths": {"/api/v2/timestamp": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.timestamp.value", "description": "api.timestamp.notes", "operationId": "getTimestamp", "produces": ["application/json"], "parameters": [], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetTimestampV2Response"}}, "100000": {"description": "code.100000"}}}}, "/api/v2/depth": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getDepth.value", "description": "api.getDepth.notes", "operationId": "getDepth", "parameters": [{"name": "market", "in": "query", "description": "request.getDepth.market", "required": true, "type": "string", "x-example": "LRC-ETH"}, {"name": "level", "in": "query", "description": "request.getDepth.level", "required": true, "type": "integer", "format": "int32", "x-example": 2}, {"name": "limit", "in": "query", "description": "request.getDepth.limit", "required": false, "type": "integer", "default": 1, "format": "int32", "x-example": 2}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetDepthResponseV2"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "108000": {"description": "ERR_DEPTH_UNSUPPORTED_MARKET"}, "108001": {"description": "ERR_DEPTH_UNSUPPORTED_LEVEL"}}}}, "/api/v2/ticker": {"get": {"tags": ["Loopring DEX Restful API"], "operationId": "getTicker", "parameters": [{"name": "market", "in": "query", "required": false, "type": "string"}], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/price": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getPrice.value", "description": "api.getPrice.notes", "operationId": "getPrice", "produces": ["application/json"], "parameters": [{"name": "legal", "in": "query", "description": "request.getPrice.legal", "required": true, "type": "string", "x-example": "USD\uff0cCNY\uff0cJPY\uff0cEUR\uff0cGBP\uff0cHKD"}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetPriceV2Response"}}, "100000": {"description": "code.100000"}}}}, "/api/v2/trade": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getMarketTrade.value", "description": "api.getMarketTrade.notes", "operationId": "getMarketTrade", "produces": ["application/json"], "parameters": [{"name": "market", "in": "query", "description": "request.getMarketTrade.market", "required": true, "type": "string", "x-example": "LRC-USDT"}, {"name": "limit", "in": "query", "description": "request.getMarketTrade.limit", "required": true, "type": "integer", "default": "None", "format": "int32", "x-example": 20}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetMarketTradesV2Response"}}, "100000": {"description": "code.100000"}}}}, "/api/v2/candlestick": {"get": {"tags": ["Loopring DEX Restful API"], "operationId": "getCandlestick", "parameters": [{"name": "market", "in": "query", "required": false, "type": "string"}, {"name": "interval", "in": "query", "required": false, "type": "string"}, {"name": "start", "in": "query", "required": false, "type": "integer", "default": "None", "format": "int64"}, {"name": "end", "in": "query", "required": false, "type": "integer", "default": "None", "format": "int64"}, {"name": "limit", "in": "query", "required": false, "type": "integer", "default": "None", "format": "int32"}], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/ethNonce": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getEthNonce.value", "description": "api.getEthNonce.notes", "operationId": "getEthNonce", "produces": ["application/json"], "parameters": [{"name": "owner", "in": "query", "description": "request.owner", "required": true, "type": "string", "x-example": "0x"}, {"name": "tag", "in": "query", "description": "request.getEthNonce.tag", "required": true, "type": "string", "default": "latest", "x-example": "pending"}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetEthNonceV2Response"}}, "100000": {"description": "code.100000"}}}}, "/api/v2/recommendedGasPrice": {"get": {"tags": ["Loopring DEX Restful API"], "operationId": "getRecommendedGasPrice", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/exchange/markets": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getMarkets.value", "description": "api.getMarkets.notes", "operationId": "getMarkets", "produces": ["application/json"], "parameters": [], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetMarketInfoV2Response"}}, "100000": {"description": "code.100000"}}}}, "/api/v2/exchange/tokens": {"get": {"tags": ["Loopring DEX Restful API"], "operationId": "getTokens", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/exchange/info": {"get": {"tags": ["Loopring DEX Restful API"], "operationId": "getExchangeInfo", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/account": {"get": {"tags": ["Loopring DEX Restful API"], "operationId": "getAccount", "parameters": [{"name": "owner", "in": "query", "required": false, "type": "string"}], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/apiKey": {"get": {"tags": ["Loopring DEX Restful API"], "operationId": "getApiKey", "parameters": [{"name": "accountId", "in": "query", "required": false, "type": "integer", "format": "int32"}, {"name": "pubKeyX", "in": "query", "required": false, "type": "string"}, {"name": "pubKeyY", "in": "query", "required": false, "type": "string"}], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}, "post": {"tags": ["Loopring DEX Restful API"], "operationId": "applyApiKey", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/orderId": {"get": {"tags": ["Loopring DEX Restful API"], "operationId": "getNextOrderId", "parameters": [{"name": "accountId", "in": "query", "required": false, "type": "integer", "format": "int32"}, {"name": "tokenSId", "in": "query", "required": false, "type": "integer", "format": "int32"}], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/dexNonce": {"get": {"tags": ["Loopring DEX Restful API"], "operationId": "getDexNonce", "parameters": [{"name": "accountId", "in": "query", "required": false, "type": "integer", "format": "int32"}], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/order": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getOrderDetail.value", "description": "api.getOrderDetail.notes", "operationId": "getOrderDetail", "produces": ["application/json"], "parameters": [{"name": "accountId", "in": "query", "description": "request.getOrderDetail.accountId", "required": true, "type": "integer", "format": "int32", "x-example": 1}, {"name": "orderHash", "in": "query", "description": "request.getOrderDetail.orderHash", "required": true, "type": "string", "x-example": "13375450901292179417154974849571793069911517354720397125027633242680470075859"}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetOrderDetailResponseV2"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107003": {"description": "ERR_USERTX_ORDER_HASH_EMPTY"}, "107004": {"description": "ERR_USERTX_ORDER_NOT_EXIST"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}, "post": {"tags": ["Loopring DEX Restful API"], "operationId": "submitOrder", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/orders": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getOrders.value", "description": "api.getOrders.notes", "operationId": "getOrders", "produces": ["application/json"], "parameters": [{"name": "accountId", "in": "query", "description": "request.getOrders.accountId", "required": true, "type": "integer", "format": "int32", "x-example": 1}, {"name": "market", "in": "query", "description": "request.getOrders.market", "required": false, "type": "string", "default": "None", "x-example": "LRC-ETH"}, {"name": "start", "in": "query", "description": "request.getOrders.start", "required": false, "type": "integer", "format": "int64", "x-example": 1567053142000}, {"name": "end", "in": "query", "description": "request.getOrders.end", "required": false, "type": "integer", "format": "int64", "x-example": 1567053242000}, {"name": "fromHash", "in": "query", "description": "request.getOrders.fromHash", "required": false, "type": "string", "default": "None ", "x-example": "2600105125336468966417510367500403435128941502452005674156103328855968837178"}, {"name": "side", "in": "query", "description": "request.getOrders.side", "required": false, "type": "string", "default": "None", "x-example": "buy", "enum": ["buy", "sell"]}, {"name": "status", "in": "query", "description": "request.getOrders.status", "required": false, "type": "string", "default": "None", "x-example": "processing,processed", "enum": ["waiting", "processing", "processed", "failed", "cancelled", "expired"]}, {"name": "limit", "in": "query", "description": "request.getOrders.limit", "required": false, "type": "integer", "default": "None ", "format": "int32", "x-example": 50}, {"name": "offset", "in": "query", "description": "request.getOrders.offset", "required": false, "type": "integer", "default": "0L", "format": "int64", "x-example": 0}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetOrdersResponseV2"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107003": {"description": "ERR_USERTX_ORDER_HASH_EMPTY"}, "107004": {"description": "ERR_USERTX_ORDER_NOT_EXIST"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}, "delete": {"tags": ["Loopring DEX Restful API"], "operationId": "cancelOrders", "parameters": [{"name": "accountId", "in": "query", "required": false, "type": "integer", "format": "int32"}, {"name": "orderHash", "in": "query", "required": false, "type": "string", "default": "None"}, {"name": "clientOrderId", "in": "query", "required": false, "type": "string", "default": "None"}], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/offchainWithdrawal": {"post": {"tags": ["Loopring DEX Restful API"], "operationId": "submitWithdrawal", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/transfer": {"post": {"tags": ["Loopring DEX Restful API"], "operationId": "submitTransfer", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/user/balances": {"get": {"tags": ["Loopring DEX Restful API"], "operationId": "getUserBalances", "parameters": [{"name": "accountId", "in": "query", "required": false, "type": "integer", "format": "int32"}, {"name": "tokens", "in": "query", "required": false, "type": "string"}], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/user/deposits": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getUserDeposits.value", "description": "api.getUserDeposits.notes", "operationId": "getUserDeposits", "produces": ["application/json"], "parameters": [{"name": "accountId", "in": "query", "description": "request.getUserTxs.accountId", "required": true, "type": "integer", "format": "int32", "x-example": 1}, {"name": "start", "in": "query", "description": "request.getUserTxs.start", "required": false, "type": "integer", "format": "int64", "x-example": 1578558098000}, {"name": "end", "in": "query", "description": "request.getUserTxs.end", "required": false, "type": "integer", "format": "int64", "x-example": 1578558098000}, {"name": "allType", "in": "query", "description": "request.getUserDeposits.allType", "required": false, "type": "boolean", "default": false, "x-example": false}, {"name": "status", "in": "query", "description": "request.getUserTxs.status", "required": false, "type": "string", "default": "None", "x-example": "processing", "enum": ["processing", "processed", "received", "failed"]}, {"name": "limit", "in": "query", "description": "request.getUserTxs.limit", "required": false, "type": "integer", "default": "None", "format": "int32", "x-example": 50}, {"name": "fromHash", "in": "query", "description": "request.getUserTxs.fromHash", "required": false, "type": "string", "default": "None", "x-example": "0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632"}, {"name": "tokenSymbol", "in": "query", "description": "request.getUserTxs.tokenSymbol", "required": false, "type": "string", "default": "None", "x-example": "ETH"}, {"name": "offset", "in": "query", "description": "request.getUserTxs.offset", "required": false, "type": "integer", "default": "0L", "format": "int64", "x-example": 1}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserTxsResponseV2"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107001": {"description": "ERR_USERTX_ACCOUNT_ID_INVALID"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v2/user/withdrawals": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getUserWithdrawals.value", "description": "api.getUserWithdrawals.notes", "operationId": "getUserWithdrawals", "produces": ["application/json"], "parameters": [{"name": "accountId", "in": "query", "description": "request.getUserTxs.accountId", "required": true, "type": "integer", "format": "int32", "x-example": 1}, {"name": "start", "in": "query", "description": "request.getUserTxs.start", "required": false, "type": "integer", "format": "int64", "x-example": 1578558098000}, {"name": "end", "in": "query", "description": "request.getUserTxs.end", "required": false, "type": "integer", "format": "int64", "x-example": 1578558098000}, {"name": "status", "in": "query", "description": "request.getUserTxs.status", "required": false, "type": "string", "default": "None", "x-example": "processing", "enum": ["processing", "processed", "received", "failed"]}, {"name": "limit", "in": "query", "description": "request.getUserTxs.limit", "required": false, "type": "integer", "default": "None", "format": "int32", "x-example": 50}, {"name": "fromHash", "in": "query", "description": "request.getUserTxs.fromHash", "required": false, "type": "string", "default": "None", "x-example": "0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632"}, {"name": "tokenSymbol", "in": "query", "description": "request.getUserTxs.tokenSymbol", "required": false, "type": "string", "default": "None", "x-example": "LRC"}, {"name": "offset", "in": "query", "description": "request.getUserTxs.offset", "required": false, "type": "integer", "default": "0L", "format": "int64", "x-example": 1}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserTxsResponseV2"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107001": {"description": "ERR_USERTX_ACCOUNT_ID_INVALID"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v2/user/transfers": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getUserTransfers.value", "description": "api.getUserTransfers.notes", "operationId": "getUserTransfers", "produces": ["application/json"], "parameters": [{"name": "accountId", "in": "query", "description": "request.getUserTxs.accountId", "required": true, "type": "integer", "format": "int32", "x-example": 1}, {"name": "start", "in": "query", "description": "request.getUserTxs.start", "required": false, "type": "integer", "format": "int64", "x-example": 1578558098000}, {"name": "end", "in": "query", "description": "request.getUserTxs.end", "required": false, "type": "integer", "format": "int64", "x-example": 1578558098000}, {"name": "status", "in": "query", "description": "request.getUserTxs.status", "required": false, "type": "string", "default": "None", "x-example": "processing", "enum": ["processing", "processed", "received", "failed"]}, {"name": "limit", "in": "query", "description": "request.getUserTxs.limit", "required": false, "type": "integer", "default": "None", "format": "int32", "x-example": 50}, {"name": "fromHash", "in": "query", "description": "request.getUserTxs.fromHash", "required": false, "type": "string", "default": "None", "x-example": "0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632"}, {"name": "tokenSymbol", "in": "query", "description": "request.getUserTxs.tokenSymbol", "required": false, "type": "string", "default": "None", "x-example": "LRC"}, {"name": "offset", "in": "query", "description": "request.getUserTxs.offset", "required": false, "type": "integer", "default": "0L", "format": "int64", "x-example": 1}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserTxsResponseV2"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107001": {"description": "ERR_USERTX_ACCOUNT_ID_INVALID"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v2/user/createAcccounts": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getUserCreate.value", "description": "api.getUserCreate.notes", "operationId": "getUserCreate", "produces": ["application/json"], "parameters": [{"name": "accountId", "in": "query", "description": "request.getUserTxs.accountId", "required": true, "type": "integer", "format": "int32", "x-example": 1}, {"name": "start", "in": "query", "description": "request.getUserTxs.start", "required": false, "type": "integer", "format": "int64", "x-example": 1578558098000}, {"name": "end", "in": "query", "description": "request.getUserTxs.end", "required": false, "type": "integer", "format": "int64", "x-example": 1578558098000}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserTxsResponseV2"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107001": {"description": "ERR_USERTX_ACCOUNT_ID_INVALID"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v2/user/updatePasswords": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getUserUpdate.value", "description": "api.getUserUpdate.notes", "operationId": "getUserUpdate", "produces": ["application/json"], "parameters": [{"name": "accountId", "in": "query", "description": "request.getUserTxs.accountId", "required": true, "type": "integer", "format": "int32", "x-example": 1}, {"name": "start", "in": "query", "description": "request.getUserTxs.start", "required": false, "type": "integer", "format": "int64", "x-example": 1578558098000}, {"name": "end", "in": "query", "description": "request.getUserTxs.end", "required": false, "type": "integer", "format": "int64", "x-example": 1578558098000}, {"name": "status", "in": "query", "description": "request.getUserTxs.status", "required": false, "type": "string", "default": "None", "x-example": "processing", "enum": ["processing", "processed", "received", "failed"]}, {"name": "limit", "in": "query", "description": "request.getUserTxs.limit", "required": false, "type": "integer", "default": "None", "format": "int32", "x-example": 50}, {"name": "fromHash", "in": "query", "description": "request.getUserTxs.fromHash", "required": false, "type": "string", "default": "None", "x-example": "0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632"}, {"name": "tokenSymbol", "in": "query", "description": "request.getUserTxs.offset", "required": false, "type": "integer", "default": "None", "format": "int64", "x-example": 1}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserTxsResponseV2"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107001": {"description": "ERR_USERTX_ACCOUNT_ID_INVALID"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v2/user/trades": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getUserTrades.value", "description": "api.getUserTrades.notes", "operationId": "getUserTrades", "produces": ["application/json"], "parameters": [{"name": "accountId", "in": "query", "description": "request.getUserTxs.accountId", "required": true, "type": "integer", "format": "int32", "x-example": 1}, {"name": "orderHash", "in": "query", "description": "request.getUserTrades.orderHash", "required": false, "type": "string", "default": "None", "x-example": "0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632"}, {"name": "offset", "in": "query", "description": "request.getUserTxs.offset", "required": false, "type": "integer", "format": "int32", "x-example": 1}, {"name": "limit", "in": "query", "description": "request.getUserTxs.limit", "required": false, "type": "integer", "default": "None", "format": "int32", "x-example": 50}, {"name": "fromId", "in": "query", "description": "request.getUserTrades.fromId", "required": false, "type": "integer", "default": "None", "format": "int64", "x-example": 1}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserTradesResponseV2"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v2/user/feeRates": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getUserFeeRates.value", "description": "api.getUserFeeRates.notes", "operationId": "getUserFeeRates", "produces": ["application/json"], "parameters": [{"name": "accountId", "in": "query", "description": "request.getUserFeeRates.accountId", "required": true, "type": "integer", "format": "int32", "x-example": 1}, {"name": "markets", "in": "query", "description": "request.getUserFeeRates.markets", "required": true, "type": "string", "x-example": "LRC-USDT,LRC-ETH"}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserFeeRatesV2Response"}}, "100000": {"description": "code.100000"}}}}, "/api/v2/crawl": {"get": {"tags": ["Loopring DEX Restful API"], "operationId": "crawlSite", "parameters": [{"name": "site", "in": "query", "required": false, "type": "string"}], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/ethBalances": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getEthBalance.value", "description": "api.getEthBalance.notes", "operationId": "getEthBalance", "produces": ["application/json"], "parameters": [{"name": "owner", "in": "query", "description": "request.owner", "required": true, "type": "string", "x-example": "0x"}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetEthBalancesV2Response"}}, "100000": {"description": "code.100000"}}}}, "/api/v2/tokenBalances": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getTokenBalance.value", "description": "api.getTokenBalance.notes", "operationId": "getTokenBalance", "produces": ["application/json"], "parameters": [{"name": "owner", "in": "query", "description": "request.owner", "required": true, "type": "string", "x-example": "0x"}, {"name": "token", "in": "query", "description": "request.getTokenBalance.token", "required": true, "type": "string", "x-example": "0x"}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetTokenBalancesV2Response"}}, "100000": {"description": "code.100000"}}}}, "/api/v2/allowances": {"get": {"tags": ["Loopring DEX Restful API"], "summary": "api.getAllowance.value", "description": "api.getAllowance.notes", "operationId": "getAllowance", "produces": ["application/json"], "parameters": [{"name": "owner", "in": "query", "description": "request.owner", "required": true, "type": "string", "x-example": "0x"}, {"name": "token", "in": "query", "description": "request.getAllowance.token", "required": true, "type": "string", "x-example": "0x"}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetAllowancesV2Response"}}, "100000": {"description": "code.100000"}}}}, "/api/v2/enableToken": {"post": {"tags": ["Loopring DEX Restful API"], "operationId": "sendTransaction", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/v2/ws": {"get": {"tags": ["LightCone WebSocket API"], "summary": " build websocket connection with server", "description": "documentation please refer to https://loopring.github.io/lightcone2/websocket.html", "operationId": "ws", "produces": ["application/json"], "parameters": [], "responses": {"200": {"description": "successful operation", "schema": {"$ref": "#/definitions/WebSocket"}}}}}, "/api/v1/timestamp": {"post": {"tags": ["Loopring DEX Restful API"], "operationId": "getTimestamp", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v1/depth": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get depth from exchange", "description": "Returns depth information of specified market", "operationId": "getDepth", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get depth params", "required": true, "schema": {"$ref": "#/definitions/GetDepthRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetDepthResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "108000": {"description": "ERR_DEPTH_UNSUPPORTED_MARKET"}, "108001": {"description": "ERR_DEPTH_UNSUPPORTED_LEVEL"}}}}, "/api/v1/ticker": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get market ticker information", "description": "Returns ticker information of specified market", "operationId": "getTicker", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get ticker params", "required": true, "schema": {"$ref": "#/definitions/GetTickerRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetTickerResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "100001": {"description": "ERR_INVALID_ARGUMENT"}}}}, "/api/v1/price": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get CMC price information", "description": "Returns ticker information of specified market", "operationId": "getPrice", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get CMC price params", "required": true, "schema": {"$ref": "#/definitions/GetPriceRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetPriceResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "100001": {"description": "ERR_INVALID_ARGUMENT"}}}}, "/api/v1/trade": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get token information", "description": "Returns information of specified token", "operationId": "getMarketTrade", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get trade params", "required": true, "schema": {"$ref": "#/definitions/GetMarketTradesRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetMarketTradesResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}}}}, "/api/v1/candlestick": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get Candlestick data of specified market", "description": "Returns candlestick data", "operationId": "getCandlestick", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get candlestick params", "required": true, "schema": {"$ref": "#/definitions/GetCandlestickRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetCandlestickResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "100001": {"description": "ERR_INVALID_ARGUMENT"}}}}, "/api/v1/ethNonce": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get Ethereum nonce of specified address", "description": "Returns nonce", "operationId": "getEthNonce", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get Ethereum nonce params", "required": true, "schema": {"$ref": "#/definitions/GetEthNonceRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetEthNonceResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104202": {"description": "NO_ACCESSIBLE_ETHEREUM_NODE"}, "104203": {"description": "UNEXPECTED_RESPONSE"}, "104205": {"description": "REQUEST_BLOCK_DELEGATOR_FAILED"}, "104208": {"description": "ETHEREUM_RETRUN_ERROR"}}}}, "/api/v1/ethBalances": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get Ethereum balances of specified address", "description": "Returns Ethereum balances", "operationId": "getEthBalances", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get Ethereum balances params", "required": true, "schema": {"$ref": "#/definitions/GetEthBalancesRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetEthBalancesResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104202": {"description": "NO_ACCESSIBLE_ETHEREUM_NODE"}, "104203": {"description": "UNEXPECTED_RESPONSE"}, "104205": {"description": "REQUEST_BLOCK_DELEGATOR"}, "104208": {"description": "ETHEREUM_RETRUN_ERROR"}}}}, "/api/v1/tokenBalances": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get token balances of specified address", "description": "Returns Token Balances", "operationId": "getTokenBalances", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get token balances params", "required": true, "schema": {"$ref": "#/definitions/GetTokenBalancesRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetTokenBalancesResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104202": {"description": "NO_ACCESSIBLE_ETHEREUM_NODE"}, "104203": {"description": "UNEXPECTED_RESPONSE"}, "104205": {"description": "REQUEST_BLOCK_DELEGATOR"}, "104208": {"description": "ETHEREUM_RETRUN_ERROR"}}}}, "/api/v1/allowances": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get token allowances of specified address", "description": "Returns allowances", "operationId": "getAllowances", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get token allowances params", "required": true, "schema": {"$ref": "#/definitions/GetAllowancesRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetAllowancesResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104202": {"description": "NO_ACCESSIBLE_ETHEREUM_NODE"}, "104203": {"description": "UNEXPECTED_RESPONSE"}, "104205": {"description": "REQUEST_BLOCK_DELEGATOR_FAILED"}, "104208": {"description": "ETHEREUM_RETRUN_ERROR"}}}}, "/api/v1/recommendedGasPrice": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get Recommended Gas Price", "description": "Returns Recommended Gas Price In GWEI", "operationId": "getRecommendedGasPrice", "produces": ["application/json"], "parameters": [], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetRecommendedGasPriceResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "105001": {"description": "ERR_COMM_GET_RECOM_GAS_PRICE"}}}}, "/api/v1/account": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get account in DEX of specified Ethereum address", "description": "Returns account information of exchange", "operationId": "getAccount", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get account params", "required": true, "schema": {"$ref": "#/definitions/GetAccountRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetAccountResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "101001": {"description": "ERR_ADDRESS_NOT_FOUND"}, "101002": {"description": "ERR_ACCOUNT_NOT_FOUND"}}}}, "/api/v1/getApiKey": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get API key of specified account ID", "description": "Returns API key", "operationId": "getApiKey", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get API key params", "required": true, "schema": {"$ref": "#/definitions/GetApiKeyRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetApiKeyResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "100001": {"description": "ERR_INVALID_ARGUMENT"}, "101002": {"description": "ERR_ACCOUNT_NOT_FOUND"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}, "104004": {"description": "ERR_REST_EXPECT_SIGNATURE"}, "104005": {"description": "ERR_REST_INVALID_SIGNATURE"}}}}, "/api/v1/applyApiKey": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Apply API key of specified account ID", "description": "Returns API key", "operationId": "applyApiKey", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get API key params", "required": true, "schema": {"$ref": "#/definitions/GetApiKeyRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetApiKeyResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "100001": {"description": "ERR_INVALID_ARGUMENT"}, "101002": {"description": "ERR_ACCOUNT_NOT_FOUND"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}, "104004": {"description": "ERR_REST_EXPECT_SIGNATURE"}, "104005": {"description": "ERR_REST_INVALID_SIGNATURE"}}}}, "/api/v1/orderId": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get order ID of order to submit", "description": "Returns order ID", "operationId": "getNextOrderId", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get order ID params", "required": true, "schema": {"$ref": "#/definitions/GetNextOrderIdRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetNextOrderIdResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v1/dexNonce": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get DEX nonce of specified account ID. NOT implemented yet, coming soon with BETA3", "description": "Returns DEX nonce", "operationId": "getDexNonce", "produces": ["application/json"], "parameters": [{"in": "query", "description": "get DEX nonce params", "required": true, "type": "string"}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetDexNonceResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v1/order": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Submit order of given information", "description": "Returns hash of order", "operationId": "submitOrder", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "post submit order param body", "required": true, "schema": {"$ref": "#/definitions/SubmitOrderRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/SubmitOrderResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "102001": {"description": "ERR_EXCHANGE_ID_INVALID"}, "102002": {"description": "ERR_TOKEN_ID_UNSUPPORT"}, "102003": {"description": "ERR_ACCOUNT_ID_INVALID"}, "102004": {"description": "ERR_ORDER_ID_INVALID"}, "102005": {"description": "ERR_MARKET_UNSUPPORT"}, "102006": {"description": "ERR_FEE_BIP_SETTING_UNSUPPORT"}, "102007": {"description": "ERR_ORDER_EXIST"}, "102008": {"description": "ERR_ORDER_EXPIRED"}, "102009": {"description": "ERR_AMOUNT_S_TOO_SMALL"}, "102010": {"description": "ERR_LACK_SIGN_INFO"}, "102011": {"description": "ERR_BALANCE_NOT_ENOUGH"}, "102012": {"description": "ERR_AMOUNT_LESS_THAN_DUST"}, "102014": {"description": "ERR_FREEZE_BALANCE_FAILED"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}, "104004": {"description": "ERR_REST_EXPECT_SIGNATURE"}, "104005": {"description": "ERR_REST_INVALID_SIGNATURE"}}}}, "/api/v1/orderDetail": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get order detail of specified order hash", "description": "Returns order detail", "operationId": "getOrderDetail", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get order detail params", "required": true, "schema": {"$ref": "#/definitions/GetOrderDetailRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetOrderDetailResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107003": {"description": "ERR_USERTX_ORDER_HASH_EMPTY"}, "107004": {"description": "ERR_USERTX_ORDER_NOT_EXIST"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v1/deleteOrders": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Cancel order of specified order hash", "description": "Returns cancel result", "operationId": "cancelOrders", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "cancel orders param body", "required": true, "schema": {"$ref": "#/definitions/CancelOrdersRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/CancelOrdersResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "102117": {"description": "ERR_NO_ORDER_FOUND_TO_CANCEL"}, "102118": {"description": "ERR_CANCEL_ORDER_FAILED"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}, "104004": {"description": "ERR_REST_EXPECT_SIGNATURE"}, "104005": {"description": "ERR_REST_INVALID_SIGNATURE"}}}}, "/api/v1/orders": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get orders of specified params", "description": "Returns orders", "operationId": "getOrders", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get orders params", "required": true, "schema": {"$ref": "#/definitions/GetOrdersRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetOrdersResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107003": {"description": "ERR_USERTX_ORDER_HASH_EMPTY"}, "107004": {"description": "ERR_USERTX_ORDER_NOT_EXIST"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v1/createAccount": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Create account in DEX", "description": "Returns sending result", "operationId": "createAccount", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "post create account param body", "required": true, "schema": {"$ref": "#/definitions/ForwardEthTxRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/ForwardEthTxResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104202": {"description": "NO_ACCESSIBLE_ETHEREUM_NODE"}, "104203": {"description": "UNEXPECTED_RESPONSE"}, "104205": {"description": "REQUEST_BLOCK_DELEGATOR_FAILED"}, "104208": {"description": "ETHEREUM_RETRUN_ERROR"}}}}, "/api/v1/deposit": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Submit deposit to DEX", "description": "Returns sending result", "operationId": "deposit", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "post deposit param body", "required": true, "schema": {"$ref": "#/definitions/ForwardEthTxRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/ForwardEthTxResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104202": {"description": "NO_ACCESSIBLE_ETHEREUM_NODE"}, "104203": {"description": "UNEXPECTED_RESPONSE"}, "104205": {"description": "REQUEST_BLOCK_DELEGATOR_FAILED"}, "104208": {"description": "ETHEREUM_RETRUN_ERROR"}}}}, "/api/v1/onchainWithdrawal": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Submit on-chain withdrawal to DEX", "description": "Returns sending result", "operationId": "onchainWithdrawal", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "post on-chain withdrawal param body", "required": true, "schema": {"$ref": "#/definitions/ForwardEthTxRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/ForwardEthTxResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104202": {"description": "NO_ACCESSIBLE_ETHEREUM_NODE"}, "104203": {"description": "UNEXPECTED_RESPONSE"}, "104205": {"description": "REQUEST_BLOCK_DELEGATOR_FAILED"}, "104208": {"description": "ETHEREUM_RETRUN_ERROR"}}}}, "/api/v1/updatePassword": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Update account password in DEX", "description": "Returns sending result", "operationId": "updatePassword", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "update account password param body", "required": true, "schema": {"$ref": "#/definitions/ForwardEthTxRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/ForwardEthTxResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104202": {"description": "NO_ACCESSIBLE_ETHEREUM_NODE"}, "104203": {"description": "UNEXPECTED_RESPONSE"}, "104205": {"description": "REQUEST_BLOCK_DELEGATOR_FAILED"}, "104208": {"description": "ETHEREUM_RETRUN_ERROR"}}}}, "/api/v1/enableToken": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Enable token to trade in DEX", "description": "Returns operation result", "operationId": "approve", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "enable token param body", "required": true, "schema": {"$ref": "#/definitions/ForwardEthTxRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/ForwardEthTxResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104202": {"description": "NO_ACCESSIBLE_ETHEREUM_NODE"}, "104203": {"description": "UNEXPECTED_RESPONSE"}, "104205": {"description": "REQUEST_BLOCK_DELEGATOR_FAILED"}, "104208": {"description": "ETHEREUM_RETRUN_ERROR"}}}}, "/api/v1/offchainWithdrawal": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Submit off-chain withdrawal to DEX. NOT implemented yet, coming soon with BETA3", "description": "Returns submit result", "operationId": "submitWithdrawal", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "post submit off-chain withdrawal param body", "required": true, "schema": {"$ref": "#/definitions/SubmitWithdrawalRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/SubmitWithdrawalResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}, "104004": {"description": "ERR_REST_EXPECT_SIGNATURE"}, "104005": {"description": "ERR_REST_INVALID_SIGNATURE"}}}}, "/api/v1/transfer": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Submit off-chain transfer to DEX. NOT implemented yet, coming soon with BETA3", "description": "Returns submit result", "operationId": "submitTransfer", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "post submit off-chain transfer param body", "required": true, "schema": {"$ref": "#/definitions/SubmitTransferRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/SubmitTransferResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}}}}, "/api/v1/user/balances": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get user balances in DEX by account ID", "description": "Returns user balances", "operationId": "getUserBalances", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get user balances params", "required": true, "schema": {"$ref": "#/definitions/GetUserBalancesRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserBalancesResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v1/user/deposits": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get user deposits in DEX by account ID", "description": "Returns user deposits record", "operationId": "getUserDeposits", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get user deposits params", "required": true, "schema": {"$ref": "#/definitions/GetUserTxsRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserTxsResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107001": {"description": "ERR_USERTX_ACCOUNT_ID_INVALID"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v1/user/withdrawals": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get user withdrawals in DEX by account ID", "description": "Returns user withdrawals record", "operationId": "getUserWithdrawals", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get user withdrawals params", "required": true, "schema": {"$ref": "#/definitions/GetUserTxsRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserTxsResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107001": {"description": "ERR_USERTX_ACCOUNT_ID_INVALID"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v1/user/transfers": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get user transfers in DEX by account ID", "description": "Returns user transfers record", "operationId": "getUserTransfers", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get user transfers params", "required": true, "schema": {"$ref": "#/definitions/GetUserTxsRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserTxsResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107001": {"description": "ERR_USERTX_ACCOUNT_ID_INVALID"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v1/user/createAcccounts": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get account create records in DEX of account ID", "description": "Returns account creation records", "operationId": "getUserCreate", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get account creation records params", "required": true, "schema": {"$ref": "#/definitions/GetUserTxsRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserActionsResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107001": {"description": "ERR_USERTX_ACCOUNT_ID_INVALID"}}}}, "/api/v1/user/updatePasswords": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get password update records in DEX of account ID", "description": "Returns password update records", "operationId": "getUserUpdate", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get password update records params", "required": true, "schema": {"$ref": "#/definitions/GetUserTxsRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserActionsResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "107001": {"description": "ERR_USERTX_ACCOUNT_ID_INVALID"}}}}, "/api/v1/user/trades": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get User Trades in DEX of account ID", "description": "Returns User Trades", "operationId": "getUserTrades", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get user trades params", "required": true, "schema": {"$ref": "#/definitions/GetUserTradesRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserTradesResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v1/user/feeRates": {"post": {"tags": ["Loopring DEX Restful API"], "summary": "Get User Fee Rate from DEX of specified account ID. NOT implemented yet, coming soon with BETA3", "description": "Returns User Fee Rate", "operationId": "getUserFeeRates", "produces": ["application/json"], "parameters": [{"in": "body", "name": "body", "description": "get user fee rate params", "required": true, "schema": {"$ref": "#/definitions/GetUserFeeRatesRequest"}}], "responses": {"0": {"description": "successful operation", "schema": {"$ref": "#/definitions/GetUserFeeRatesResponse"}}, "100000": {"description": "ERR_INTERNAL_UNKNOWN"}, "104001": {"description": "ERR_REST_EXPECT_APIKEY"}, "104002": {"description": "ERR_REST_APIKEY_NOT_MATCH"}, "104003": {"description": "ERR_REST_ACCOUNT_NOT_EXIST"}}}}, "/api/v1/crawl": {"get": {"tags": ["Loopring DEX Restful API"], "operationId": "crawlSite", "parameters": [{"name": "site", "in": "query", "required": false, "type": "string"}], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/sign/apiKey": {"post": {"tags": ["Loopring DEX Restful API"], "operationId": "signApiKey", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/sign/cancel": {"post": {"tags": ["Loopring DEX Restful API"], "operationId": "signCancel", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/sign/order": {"post": {"tags": ["Loopring DEX Restful API"], "operationId": "signOrder", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/sign/withdrawal": {"post": {"tags": ["Loopring DEX Restful API"], "operationId": "signWithdrawal", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}, "/api/v2/sign/verify": {"post": {"tags": ["Loopring DEX Restful API"], "operationId": "verify", "parameters": [], "responses": {"200": {"description": "successful operation", "headers": {}, "schema": {"$ref": "#/definitions/ActionAnyContent"}}}}}}, "definitions": {"GetTimestampV2Response": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"type": "object", "example": "1584354752", "description": "field.getTimestampV2Response.data"}}, "description": "model.getTimestampV2Response"}, "ResultInfo": {"type": "object", "required": ["code", "message"], "properties": {"code": {"type": "integer", "format": "int32", "example": 0, "description": "field.resultInfo.code"}, "message": {"type": "string", "example": "SUCCESS", "description": "field.resultInfo.message"}}, "description": "model.resultInfo.description"}, "Depth": {"type": "object", "required": ["asks", "bids", "timestamp", "version"], "properties": {"version": {"type": "integer", "format": "int64", "example": 147, "description": "field.depth.version"}, "timestamp": {"type": "integer", "format": "int64", "example": 432312312, "description": "field.depth.timestamp"}, "bids": {"type": "array", "description": "field.depth.bids", "items": {"$ref": "#/definitions/Slot"}}, "asks": {"type": "array", "description": "field.depth.asks", "items": {"$ref": "#/definitions/Slot"}}}, "description": "model.depth.description"}, "GetDepthResponseV2": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"description": "field.resultInfo.message", "$ref": "#/definitions/ResultInfo"}, "data": {"description": "field.getDepth.data", "$ref": "#/definitions/Depth"}}, "description": "model.getDepth.description"}, "Slot": {"type": "object", "required": ["count", "price", "size", "volume"], "properties": {"price": {"type": "string", "example": "0.002", "description": "field.depth.slot.price"}, "size": {"type": "string", "example": "21000", "description": "field.depth.slot.size"}, "volume": {"type": "string", "example": "33220000", "description": "field.depth.slot.volume"}, "count": {"type": "integer", "format": "int32", "example": 4, "description": "field.depth.slot.count"}}, "description": "field.depth.slot.description"}, "Action": {"type": "object"}, "ActionAnyContent": {"type": "object"}, "GetPriceV2Response": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"type": "array", "description": "field.getPriceResponse.data", "items": {"$ref": "#/definitions/Price"}}}, "description": "model.getPriceResponse"}, "Price": {"type": "object", "required": ["price", "symbol", "timestamp"], "properties": {"symbol": {"type": "string"}, "price": {"type": "string"}, "timestamp": {"type": "integer", "format": "int64"}}}, "GetMarketTradesV2Response": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"description": "model.marketTrades", "$ref": "#/definitions/MarketTrades"}}, "description": "model.getMarketTradesResponse"}, "MarketTrades": {"type": "object", "required": ["totalNum", "trades"], "properties": {"totalNum": {"type": "integer", "format": "int64", "example": 0, "description": "field.marketTrades.totalNum"}, "trades": {"type": "array", "description": "field.marketTrades.trades", "items": {"$ref": "#/definitions/Trade"}}}, "description": "model.marketTrades"}, "Trade": {"type": "object", "required": ["fee", "market", "price", "side", "size", "timestamp", "tradeId"], "properties": {"timestamp": {"type": "integer", "format": "int64", "example": 0, "description": "field.trade.timestamp"}, "tradeId": {"type": "integer", "format": "int64", "example": 0, "description": "field.trade.tradeId"}, "side": {"type": "string", "example": "BUY/SELL", "description": "field.trade.side"}, "size": {"type": "string", "example": "0", "description": "field.trade.size"}, "price": {"type": "string", "example": "0", "description": "field.trade.price"}, "market": {"type": "string", "example": "LRC-USDT", "description": "field.trade.market"}, "fee": {"type": "string", "example": "0", "description": "field.trade.fee"}}, "description": "model.trade"}, "GetEthNonceV2Response": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"type": "object", "example": "0", "description": "field.getEthNonceResponse.data"}}, "description": "model.getEthNonceResponse"}, "GetMarketInfoV2Response": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"type": "array", "description": "field.getMarketInfoV2Response.data", "items": {"$ref": "#/definitions/MarketInfo"}}}, "description": "model.getMarketInfoV2Response"}, "MarketInfo": {"type": "object", "required": ["baseTokenId", "enabled", "market", "orderbookAggLevels", "precisionForPrice", "quoteTokenId"], "properties": {"market": {"type": "string", "example": "LRC-USDT", "description": "field.marketInfo.market"}, "baseTokenId": {"type": "integer", "format": "int32", "example": 0, "description": "field.marketInfo.baseTokenId"}, "quoteTokenId": {"type": "integer", "format": "int32", "example": 0, "description": "field.marketInfo.quoteTokenId"}, "precisionForPrice": {"type": "integer", "format": "int32", "example": 0, "description": "field.marketInfo.precisionForPrice"}, "orderbookAggLevels": {"type": "integer", "format": "int32", "example": 0, "description": "field.marketInfo.orderbookAggLevels"}, "enabled": {"type": "boolean", "example": false, "description": "field.marketInfo.enabled"}}}, "GetOrderDetailResponseV2": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"description": "field.GetOrderDetailResponseV2.data", "$ref": "#/definitions/OrderDetail"}}, "description": "model.GetOrderDetailResponseV2.description"}, "OrderDetail": {"type": "object", "required": ["clientOrderId", "createdAt", "filledFee", "filledSize", "filledVolume", "hash", "market", "price", "side", "size", "status", "validSince", "validUntil", "volume"], "properties": {"hash": {"type": "string", "example": "0xfb5e711c2f044e94322ed262229cd8f0d0da00c22e1a00a0f5d881e45a38e1cf", "description": "field.OrderDetail.hash"}, "clientOrderId": {"type": "string", "example": "200310143135081332", "description": "field.OrderDetail.clientOrderId"}, "size": {"type": "string", "example": "8210000000000001024", "description": "field.OrderDetail.size"}, "volume": {"type": "string", "example": "163182534700000032", "description": "field.OrderDetail.volume"}, "price": {"type": "string", "example": "0.01987608", "description": "field.OrderDetail.price"}, "filledSize": {"type": "string", "example": "0", "description": "field.OrderDetail.filledSize"}, "filledVolume": {"type": "string", "example": "0", "description": "field.OrderDetail.filledVolume"}, "filledFee": {"type": "string", "example": "0", "description": "field.OrderDetail.filledFee"}, "status": {"type": "string", "example": "ORDER_STATUS_PROCESSING", "description": "field.OrderDetail.status", "enum": ["ORDER_STATUS_PROCESSING", "ORDER_STATUS_PROCESSED", "ORDER_STATUS_CANCELLING", "ORDER_STATUS_CANCELLED", "ORDER_STATUS_EXPIRED", "ORDER_STATUS_WAIT_ACTIVE"]}, "validSince": {"type": "integer", "format": "int64", "example": 1583929591, "description": "field.OrderDetail.validSince"}, "validUntil": {"type": "integer", "format": "int64", "example": 1586521591, "description": "field.OrderDetail.validUntil"}, "createdAt": {"type": "integer", "format": "int64", "example": 1583933191494, "description": "field.OrderDetail.createdAt"}, "side": {"type": "string", "example": "SELL", "description": "field.OrderDetail.side", "enum": ["SELL", "BUY"]}, "market": {"type": "string", "example": "LRC-ETH", "description": "field.OrderDetail.market"}}, "description": "model.OrderDetail.description"}, "GetOrdersResponseV2": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"description": "field.GetOrdersResponseV2.data", "$ref": "#/definitions/OrdersDetail"}}, "description": "model.GetOrdersResponseV2.description"}, "OrdersDetail": {"type": "object", "required": ["orders", "totalNum"], "properties": {"totalNum": {"type": "integer", "format": "int64", "example": 10, "description": "field.OrdersDetail.totalNum"}, "orders": {"type": "array", "description": "field.OrdersDetail.orders", "items": {"$ref": "#/definitions/OrderDetail"}}}, "description": "model.OrdersDetail.description"}, "GetUserTxsResponseV2": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"description": "model.TxDataList.description", "$ref": "#/definitions/TxDataList"}}, "description": "model.GetUserTxsResponse.description"}, "TxData": {"type": "object", "required": ["amount", "feeAmount", "id", "progress", "realAmount", "status", "symbol", "timestamp", "txHash", "txType"], "properties": {"id": {"type": "integer", "format": "int64", "example": 1, "description": "field.TxData.id"}, "txType": {"type": "string", "example": "deposit", "description": "field.TxData.txType", "enum": ["deposit", "onchainWithdrawal", "transfer", "createAccount", "changePassword"]}, "symbol": {"type": "string", "example": "LRC", "description": "field.TxData.symbol"}, "amount": {"type": "string", "example": "1000000000000000000", "description": "field.TxData.amount"}, "realAmount": {"type": "string", "example": "1000000000000000000", "description": "field.TxData.realAmount"}, "receiver": {"type": "integer", "format": "int32", "example": 1, "description": "field.TxData.receiver"}, "txHash": {"type": "string", "example": "0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632", "description": "field.TxData.txHash"}, "feeAmount": {"type": "string", "example": "1000000000000000", "description": "field.TxData.txType"}, "status": {"type": "string", "example": "processing", "description": "field.TxData.status", "enum": ["processing", "processed", "received", "failed"]}, "progress": {"type": "string", "example": "100%", "description": "field.TxData.progress"}, "timestamp": {"type": "integer", "format": "int64", "example": 1578572292000, "description": "field.TxData.timestamp"}, "depositType": {"type": "string", "example": "DEPOSIT", "description": "field.TxData.depositType", "enum": ["DEPOSIT", "CREATE_ACCOUNT", "UPDATE_ACCOUNT"]}, "blockNum": {"type": "integer", "format": "int64", "example": 100, "description": "field.TxData.blockNum"}}, "description": "model.TxData.description"}, "TxDataList": {"type": "object", "required": ["totalNum", "transactions"], "properties": {"totalNum": {"type": "integer", "format": "int64", "description": "field.TxDataList.totalNum"}, "transactions": {"type": "array", "description": "field.TxDataList.transactions", "items": {"$ref": "#/definitions/TxData"}}}, "description": "model.TxDataList.description"}, "GetUserTradesResponseV2": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"description": "model.TradeList.description", "$ref": "#/definitions/TradeList"}}, "description": "model.GetUserTradesResponseV2.description"}, "TradeList": {"type": "object", "required": ["totalNum", "trades"], "properties": {"totalNum": {"type": "integer", "format": "int64", "example": 100, "description": "field.TradeList.totalNum"}, "trades": {"type": "array", "description": "model.trade", "items": {"$ref": "#/definitions/Trade"}}}, "description": "model.TradeList.description"}, "FeeRate": {"type": "object", "required": ["makerRate", "symbol", "takerRate"], "properties": {"symbol": {"type": "string", "example": "LRC-USDT", "description": "field.feeRate.symbol"}, "makerRate": {"type": "string", "example": "20", "description": "field.feeRate.makerRate"}, "takerRate": {"type": "string", "example": "20", "description": "field.feeRate.takerRate"}}, "description": "model.feeRate"}, "GetUserFeeRatesV2Response": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"type": "array", "example": "1584354752", "description": "field.getUserFeeRatesV2Response.data", "items": {"$ref": "#/definitions/FeeRate"}}}, "description": "model.getUserFeeRatesV2Response"}, "GetEthBalancesV2Response": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"type": "string", "example": "0", "description": "field.getEthBalancesResponse.data"}}, "description": "model.getEthBalancesResponse"}, "GetTokenBalancesV2Response": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"type": "string", "example": "0", "description": "field.getTokenBalancesResponse.data"}}, "description": "model.getTokenBalancesResponse"}, "GetAllowancesV2Response": {"type": "object", "required": ["data", "resultInfo"], "properties": {"resultInfo": {"description": "model.resultInfo.description", "$ref": "#/definitions/ResultInfo"}, "data": {"type": "string", "example": "0", "description": "field.getAllowancesResponse.data"}}, "description": "model.getAllowancesResponse"}, "WebSocket": {"type": "object"}, "GetDepthResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "depth": {"$ref": "#/definitions/Depth"}}}, "GetDepthRequest": {"type": "object", "required": ["level", "market"], "properties": {"market": {"type": "string", "example": "LRC-ETH", "description": "The market identifier which is case insensitive and should be formatted as ABC-XYZ where ABC is the base token symbol and XYZ is the quote token symbol."}, "level": {"type": "integer", "format": "int32", "example": 2, "description": "The aggregation level for the depth data. If maxLevel = 5, level = 3, then depth will aggregate in two decimal places."}, "limit": {"type": "integer", "format": "int32", "example": 50, "description": "The maximum number of depth items to return for each side of the market. Defaults to 50."}}}, "GetTickerResponse": {"type": "object", "required": ["resultInfo", "tickers"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "tickers": {"type": "array", "items": {"$ref": "#/definitions/Ticker"}}}}, "Ticker": {"type": "object", "required": ["ask", "bid", "close", "count", "high", "low", "market", "open", "size", "timestamp", "volume"], "properties": {"market": {"type": "string"}, "timestamp": {"type": "integer", "format": "int64"}, "size": {"type": "string"}, "volume": {"type": "string"}, "open": {"type": "string"}, "high": {"type": "string"}, "low": {"type": "string"}, "close": {"type": "string"}, "count": {"type": "integer", "format": "int64"}, "bid": {"type": "string"}, "ask": {"type": "string"}}}, "GetTickerRequest": {"type": "object", "required": ["markets"], "properties": {"markets": {"type": "string", "example": "LRC-ETH", "description": "The market identifier which is case insensitive and should be formatted as ABC-XYZ where ABC is the base token symbol and XYZ is the quote token symbol."}, "limit": {"type": "integer", "format": "int32", "example": 50, "description": "The maximum number of depth items to return for each side of the market. Defaults to 50."}}}, "GetPriceResponse": {"type": "object", "required": ["resultInfo", "tickers"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "tickers": {"type": "array", "items": {"$ref": "#/definitions/Price"}}}}, "GetPriceRequest": {"type": "object", "required": ["legal"], "properties": {"legal": {"type": "string", "example": "USD", "description": "legal coin ratio, which includes: USD, CNY, JPY, EUR, GBP, KRW, HKD, MOP, CAD, AUD, SGD, PHP, THB, RUB", "enum": ["USD", "CNY", "JPY", "EUR", "GBP", "KRW", "HKD", "MOP", "CAD", "AUD", "SGD", "PHP", "THB", "RUB"]}}}, "GetMarketTradesResponse": {"type": "object", "required": ["resultInfo", "totalNum", "trades"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "totalNum": {"type": "integer", "format": "int64"}, "trades": {"type": "array", "items": {"$ref": "#/definitions/Trade"}}}}, "GetMarketTradesRequest": {"type": "object", "required": ["market"], "properties": {"market": {"type": "string", "example": "LRC-ETH", "description": "The market identifier which is case insensitive and should be formatted as ABC-XYZ where ABC is the base token symbol and XYZ is the quote token symbol."}, "fromId": {"type": "integer", "format": "int32", "example": 0, "description": "specify later than which, id of market trades will returns. Defaults to 0"}, "limit": {"type": "integer", "format": "int32", "example": 20, "description": "The maximum number of depth items to return for each side of the market. Defaults to 20"}, "offset": {"type": "integer", "format": "int64", "example": 0, "description": "Offset of fill markets. Defaults to 0"}}}, "Candlestick": {"type": "object", "required": ["close", "count", "high", "low", "open", "size", "start", "volume"], "properties": {"start": {"type": "integer", "format": "int64"}, "count": {"type": "integer", "format": "int64"}, "open": {"type": "string"}, "close": {"type": "string"}, "high": {"type": "string"}, "low": {"type": "string"}, "size": {"type": "string"}, "volume": {"type": "string"}}}, "GetCandlestickResponse": {"type": "object", "required": ["candles", "resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "candles": {"type": "array", "items": {"$ref": "#/definitions/Candlestick"}}}}, "GetCandlestickRequest": {"type": "object", "required": ["interval", "market"], "properties": {"market": {"type": "string", "example": "LRC-ETH", "description": "The market identifier which is case insensitive and should be formatted as ABC-XYZ where ABC is the base token symbol and XYZ is the quote token symbol."}, "interval": {"type": "string", "example": "5min", "description": "The candlestick data interval, which includes: 1min, 5min, 15min, 30min, 1hr, 2hr, 4hr, 12hr, 1d, 1w", "enum": ["1min", "5min", "15min", "30min", "1hr", "2hr", "4hr", "12hr", "1d", "1w"]}, "start": {"type": "integer", "format": "int32", "example": 1567053142, "description": "The start time of candlestick data. Defaults to current timestamp."}, "end": {"type": "integer", "format": "int32", "example": 1567053142, "description": "The end time of candlestick data."}, "limit": {"type": "integer", "format": "int32", "example": 120, "description": "The number of candlestick data points. Defaults to 120."}}}, "GetEthNonceResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "nonce": {"type": "object"}}}, "GetEthNonceRequest": {"type": "object", "required": ["address"], "properties": {"address": {"type": "string", "example": "0x9a439ff88267c68cb98b513166b50d2ca75fae382d693c96092be5f47450451e", "description": "The owning Ethereum address of the account"}}}, "GetEthBalancesResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "balances": {"type": "string"}}}, "GetEthBalancesRequest": {"type": "object", "required": ["address"], "properties": {"address": {"type": "string", "example": "0x9a439ff88267c68cb98b513166b50d2ca75fae382d693c96092be5f47450451e", "description": "The owning Ethereum address of the account"}}}, "GetTokenBalancesResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "balances": {"type": "string"}}}, "GetTokenBalancesRequest": {"type": "object", "required": ["owner", "token"], "properties": {"owner": {"type": "string", "example": "0x9a439ff88267c68cb98b513166b50d2ca75fae382d693c96092be5f47450451e", "description": "The owning Ethereum address of the account"}, "token": {"type": "string", "example": "0x9a439ff88267c68cb98b513166b50d2ca75fae382d693c96092be5f47450451e", "description": "The token's ERC20 smart contract address. Use 0x0 as the pseudo-address of Ether (ETH)."}}}, "GetAllowancesResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "allowances": {"type": "string"}}}, "GetAllowancesRequest": {"type": "object", "required": ["owner", "token"], "properties": {"owner": {"type": "string", "example": "0x9a439ff88267c68cb98b513166b50d2ca75fae382d693c96092be5f47450451e", "description": "The owning Ethereum address of the account"}, "token": {"type": "string", "example": "0x9a439ff88267c68cb98b513166b50d2ca75fae382d693c96092be5f47450451e", "description": "The token's ERC20 smart contract address. Use 0x0 as the pseudo-address of Ether (ETH)."}}}, "GetRecommendedGasPriceResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "price": {"type": "string"}}}, "DexAccount": {"type": "object", "required": ["accountId", "isFreeze", "publicKeyX", "publicKeyY"], "properties": {"accountId": {"type": "integer", "format": "int32"}, "isFreeze": {"type": "boolean"}, "publicKeyX": {"type": "string"}, "publicKeyY": {"type": "string"}}}, "GetAccountResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "account": {"$ref": "#/definitions/DexAccount"}}}, "GetAccountRequest": {"type": "object", "required": ["address"], "properties": {"address": {"type": "string", "example": "0x9a439ff88267c68cb98b513166b50d2ca75fae382d693c96092be5f47450451e", "description": "The owning Ethereum address of the account"}}}, "GetApiKeyResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "account": {"type": "string"}}}, "GetApiKeyRequest": {"type": "object", "required": ["accountId", "publicKeyX", "publicKeyY"], "properties": {"accountId": {"type": "integer", "format": "int32", "example": 1, "description": "The user's account ID"}, "publicKeyX": {"type": "string", "example": "13375450901292179417154974849571793069911517354720397125027633242680470075859", "description": "public key X in account's key pair"}, "publicKeyY": {"type": "string", "example": "13375450901292179417154974849571793069911517354720397125027633242680470075859", "description": "public key Y in account's key pair"}}}, "GetNextOrderIdResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "orderId": {"type": "object"}}}, "GetNextOrderIdRequest": {"type": "object", "required": ["accountId", "tokenSId"], "properties": {"accountId": {"type": "integer", "format": "int32", "example": 1, "description": "The unique ID of this exchange (DEX)"}, "tokenSId": {"type": "integer", "format": "int32", "example": 0, "description": "selling token ID in exchange"}}}, "GetDexNonceResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "nonce": {"type": "object"}}}, "SubmitOrderResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "orderHash": {"type": "string"}}}, "SubmitOrderRequest": {"type": "object", "required": ["accountId", "allOrNone", "amountB", "amountS", "buy", "exchangeId", "label", "maxFeeBips", "orderId", "signatureRx", "signatureRy", "signatureS", "tokenBId", "tokenSId", "validSince", "validUntil"], "properties": {"exchangeId": {"type": "integer", "format": "int32", "example": 1, "description": "exchange id"}, "orderId": {"type": "integer", "format": "int32", "example": 1, "description": "this order id"}, "accountId": {"type": "integer", "format": "int32", "example": 1, "description": "account id in exchange"}, "tokenSId": {"type": "integer", "format": "int32", "example": 0, "description": "selling token id in exchange"}, "tokenBId": {"type": "integer", "format": "int32", "example": 2, "description": "buying token id in exchange"}, "amountS": {"type": "string", "example": "1000000000000000000", "description": "selling amount of token, decimal string in WEI"}, "amountB": {"type": "string", "example": "1000000000000000000", "description": "buying amount of token, decimal string in WEI"}, "allOrNone": {"type": "string", "example": "true", "description": "all or none"}, "buy": {"type": "string", "example": "true", "description": "buy"}, "validSince": {"type": "integer", "format": "int64", "example": 1567053142, "description": "beginning period of this order, timestamp in second"}, "validUntil": {"type": "integer", "format": "int64", "example": 1567053142, "description": "ending period of this order, timestamp in second"}, "maxFeeBips": {"type": "integer", "format": "int32", "example": 20, "description": "max accepted fee of this order, selling amount times x/10000"}, "label": {"type": "integer", "format": "int32", "example": 20, "description": "label"}, "signatureRx": {"type": "string", "example": "13375450901292179417154974849571793069911517354720397125027633242680470075859", "description": "trading signature Rx of this order, decimal string"}, "signatureRy": {"type": "string", "example": "13375450901292179417154974849571793069911517354720397125027633242680470075859", "description": "trading signature Ry of this order, decimal string"}, "signatureS": {"type": "string", "example": "13375450901292179417154974849571793069911517354720397125027633242680470075859", "description": "trading signature S of this order, decimal string"}, "clientOrderId": {"type": "string", "example": "1", "description": "client specified ID of this order"}, "channelId": {"type": "string", "example": "1", "description": "client specified channel ID of this order"}}}, "GetOrderDetailResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "orderDetail": {"$ref": "#/definitions/OrderDetail"}}}, "GetOrderDetailRequest": {"type": "object", "required": ["accountId", "orderHash"], "properties": {"accountId": {"type": "integer", "format": "int32", "example": 1, "description": "field.GetOrderDetailRequest.accountId"}, "orderHash": {"type": "string", "example": "0xfb5e711c2f044e94322ed262229cd8f0d0da00c22e1a00a0f5d881e45a38e1cf", "description": "field.GetOrderDetailRequest.orderHash"}}, "description": "model.GetOrderDetailRequest.description"}, "CancelOrdersResponse": {"type": "object", "required": ["resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "success": {"type": "object"}}}, "CancelOrdersRequest": {"type": "object", "required": ["accountId"], "properties": {"accountId": {"type": "integer", "format": "int32", "example": 1, "description": "The unique ID of this exchange (DEX)"}, "orderHash": {"type": "string", "example": "2600105125336468966417510367500403435128941502452005674156103328855968837178", "description": "hash of specified order to cancel, decimal string"}, "clientOrderId": {"type": "string", "example": "10", "description": "client specified ID of order to cancel"}}}, "GetOrdersResponse": {"type": "object", "required": ["orders", "resultInfo", "totalNum"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "totalNum": {"type": "integer", "format": "int64"}, "orders": {"type": "array", "items": {"$ref": "#/definitions/OrderDetail"}}}}, "GetOrdersRequest": {"type": "object", "required": ["accountId"], "properties": {"accountId": {"type": "integer", "format": "int32", "example": 1, "description": "field.GetOrdersRequest.accountId"}, "market": {"type": "string", "example": "LRC-ETH", "description": "field.GetOrdersRequest.market"}, "statuses": {"type": "array", "example": "processing,processed", "description": "field.GetOrdersRequest.statuses", "items": {"type": "string"}}, "start": {"type": "object", "example": "1567053142000", "description": "field.GetOrdersRequest.start"}, "end": {"type": "object", "example": "1567053242000", "description": "field.GetOrdersRequest.end"}, "fromHash": {"type": "string", "example": "2600105125336468966417510367500403435128941502452005674156103328855968837178", "description": "field.GetOrdersRequest.fromHash"}, "limit": {"type": "object", "example": "50", "description": "field.GetOrdersRequest.limit"}, "offset": {"type": "object", "example": "0", "description": "field.GetOrdersRequest.offset"}, "side": {"type": "string", "example": "buy", "description": "field.GetOrdersRequest.side", "enum": ["buy", "sell"]}}, "description": "model.GetOrdersRequest.description"}, "ForwardEthTxResponse": {"type": "object", "required": ["id", "jsonrpc", "result", "resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "id": {"type": "integer", "format": "int32"}, "jsonrpc": {"type": "string"}, "result": {"type": "string"}}}, "ForwardEthTxRequest": {"type": "object", "properties": {"data": {"type": "string", "example": "0xf8aa0a8502540be400830186a0949032dbf5669341c3d95bc02b4bde90e4e051db3580b844095ea7b30000000000000000000000001d307532a97879b866a6fe33bf4a517bd28de854ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff25a071af95d2a3eb01bb11f84d9c66d09924d97a2b3ce38e0079a2d56dfb13035df0a07404b3a48c40cc3e7b9893d88512ef526a67bf3c274548ec09f94386e0062fc2", "description": "SIGNED Ethereum transaction data, HEX string"}}}, "SubmitWithdrawalResponse": {"type": "object", "required": ["orderId", "resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "orderId": {"type": "integer", "format": "int32"}}}, "SubmitWithdrawalRequest": {"type": "object", "required": ["accountId", "amount", "amountF", "exchangeId", "label", "nonce", "signatureRx", "signatureRy", "signatureS", "tokenFId", "tokenId"], "properties": {"exchangeId": {"type": "integer", "format": "int32", "example": 1, "description": "exchange id"}, "accountId": {"type": "integer", "format": "int32", "example": 1, "description": "account id in exchange"}, "tokenId": {"type": "integer", "format": "int32", "example": 1, "description": "withdraw token id in exchange"}, "amount": {"type": "string", "example": "1000000000000000000", "description": "withdraw amount of token, decimal string in WEI"}, "tokenFId": {"type": "integer", "format": "int32", "example": 1, "description": "fee token id in exchange"}, "amountF": {"type": "string", "example": "1000000000000000000", "description": "fee amount of token, decimal string in WEI"}, "nonce": {"type": "integer", "format": "int32", "example": 1, "description": "dex nonce of account"}, "label": {"type": "integer", "format": "int32", "example": 20, "description": "label"}, "signatureRx": {"type": "string", "example": "13375450901292179417154974849571793069911517354720397125027633242680470075859", "description": "trading signature Rx of this order, decimal string"}, "signatureRy": {"type": "string", "example": "13375450901292179417154974849571793069911517354720397125027633242680470075859", "description": "trading signature Ry of this order, decimal string"}, "signatureS": {"type": "string", "example": "13375450901292179417154974849571793069911517354720397125027633242680470075859", "description": "trading signature S of this order, decimal string"}}}, "SubmitTransferResponse": {"type": "object", "required": ["orderId", "resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "orderId": {"type": "integer", "format": "int32"}}}, "SubmitTransferRequest": {"type": "object", "required": ["accountId", "tokenId"], "properties": {"accountId": {"type": "integer", "format": "int32", "description": "The user's account ID"}, "tokenId": {"type": "integer", "format": "int32", "description": "selling token id in exchange"}}}, "Balance": {"type": "object", "required": ["accountId", "frozenAmount", "tokenId", "totalAmount"], "properties": {"accountId": {"type": "integer", "format": "int32"}, "tokenId": {"type": "integer", "format": "int32"}, "totalAmount": {"type": "string"}, "frozenAmount": {"type": "string"}}}, "GetUserBalancesResponse": {"type": "object", "required": ["balances", "resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "balances": {"type": "array", "items": {"$ref": "#/definitions/Balance"}}}}, "GetUserBalancesRequest": {"type": "object", "required": ["accountId"], "properties": {"accountId": {"type": "integer", "format": "int32", "example": 1, "description": "The user's account ID"}, "tokenIds": {"type": "integer", "format": "int32", "example": "0,2", "description": "selling token ids in exchange"}}}, "GetUserTxsResponse": {"type": "object", "required": ["resultInfo", "totalNum", "transactions"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "totalNum": {"type": "integer", "format": "int64"}, "transactions": {"type": "array", "items": {"$ref": "#/definitions/TxData"}}}}, "GetUserTxsRequest": {"type": "object", "required": ["accountId", "types"], "properties": {"accountId": {"type": "integer", "format": "int32", "example": 1, "description": "The user's account ID"}, "statuses": {"type": "string", "example": "processing", "description": "Get user transactions by status, which includes: processing, processed, failed, received", "enum": ["processing", "processed", "failed", "received"]}, "types": {"type": "string", "example": "deposit, onchainWithdrawal", "description": "get user transactions by type, which includes: deposit, onchainWithdrawal", "enum": ["deposit", "onchainWithdrawal"]}, "start": {"type": "integer", "format": "int64", "example": 1567053142, "description": "beginning time, timestamp in millisecond"}, "end": {"type": "integer", "format": "int64", "example": 1567053142, "description": "ending time, timestamp in millisecond"}, "fromHash": {"type": "string", "example": "0x9a439ff88267c68cb98b513166b50d2ca75fae382d693c96092be5f47450451e", "description": "from which hash to get user transactions, hex string"}, "limit": {"type": "integer", "format": "int32", "example": 50, "description": "obtain count of user actions. Defaults to 50"}, "offset": {"type": "integer", "format": "int64", "example": 0, "description": "offset of user transactions. Defaults to 0"}, "allType": {"type": "string", "example": "ETH", "description": "token symbol of user transactions. Defaults to ''"}, "tokenSymbol": {"type": "string"}}}, "ActionData": {"type": "object", "required": ["feeAmount", "id", "progress", "status", "timestamp", "txHash", "txType"], "properties": {"id": {"type": "integer", "format": "int64"}, "txType": {"type": "string"}, "txHash": {"type": "string"}, "status": {"type": "string"}, "feeAmount": {"type": "string"}, "progress": {"type": "string"}, "timestamp": {"type": "integer", "format": "int64"}}}, "GetUserActionsResponse": {"type": "object", "required": ["resultInfo", "updates"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "updates": {"type": "array", "items": {"$ref": "#/definitions/ActionData"}}}}, "GetUserTradesResponse": {"type": "object", "required": ["resultInfo", "totalNum", "trades"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "totalNum": {"type": "integer", "format": "int64"}, "trades": {"type": "array", "items": {"$ref": "#/definitions/Trade"}}}}, "GetUserTradesRequest": {"type": "object", "required": ["accountId"], "properties": {"accountId": {"type": "integer", "format": "int32", "example": 1, "description": "The user's account ID"}, "orderHash": {"type": "integer", "format": "int32", "example": "13375450901292179417154974849571793069911517354720397125027633242680470075859", "description": "hash of order to fetch, decimal string"}, "market": {"type": "string", "example": "LRC-ETH", "description": "The market identifier which is case insensitive and should be formatted as ABC-XYZ where ABC is the base token symbol and XYZ is the quote token symbol."}, "fromId": {"type": "integer", "format": "int32", "example": 0, "description": "specify later than which, ID of user trades will returns. Defaults to 0"}, "limit": {"type": "integer", "format": "int32", "example": 20, "description": "obtain count of user trades, used for paging. Defaults to 20"}, "offset": {"type": "integer", "format": "int64", "example": 0, "description": "offset of user fills, used for paging. Defaults to 0"}}}, "GetUserFeeRatesResponse": {"type": "object", "required": ["feeRates", "resultInfo"], "properties": {"resultInfo": {"$ref": "#/definitions/ResultInfo"}, "feeRates": {"type": "array", "items": {"$ref": "#/definitions/FeeRate"}}}}, "GetUserFeeRatesRequest": {"type": "object", "required": ["accountId", "markets"], "properties": {"accountId": {"type": "integer", "format": "int32", "example": 1, "description": "request.getUserFeeRates.accountId"}, "markets": {"type": "array", "example": "LRC-BTC,LRC-ETH,LRC-USDT", "description": "request.getUserFeeRates.markets", "items": {"type": "string"}}}}}}