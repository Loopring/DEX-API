{
  "swagger" : "2.0",
  "info" : {
    "description" : "LightCone DEX function interpretation",
    "version" : "1.0",
    "title" : "LightCone 2.0 API Documentation",
    "termsOfService" : "http://Loopring.com",
    "contact" : {
      "name" : "Loopring@Loopring.com"
    },
    "license" : {
      "name" : "license Loopring",
      "url" : "https://loopring.org"
    }
  },
  "host" : "a2737293aee054039833e5e3c0f4f6d7-2078503103.us-east-2.elb.amazonaws.com",
  "basePath" : "/",
  "tags" : [ {
    "name" : "Loopring DEX Restful API"
  }, {
    "name" : "LightCone WebSocket API"
  } ],
  "paths" : {
    "/api/v3/timestamp" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get relayer's current time",
        "description" : "Returns the relayer's current time in millisecond",
        "operationId" : "getTimestamp",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TimestampV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          }
        }
      }
    },
    "/api/v3/exchange/tokens" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get token configurations",
        "description" : "Returns the configurations of all supported tokens, including Ether.",
        "operationId" : "getTokens",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TokenInfoV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          }
        }
      }
    },
    "/api/v3/exchange/markets" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get market configurations",
        "description" : "Returns the configurations of all supported markets (trading pairs)",
        "operationId" : "getMarkets",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MarketInfo"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          }
        }
      }
    },
    "/api/v3/amm/pools" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "api.getAmmPools.value",
        "description" : "api.getAmmPools.notes",
        "operationId" : "getAmmPools",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAmmMarketInfoResponse"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          }
        }
      }
    },
    "/api/v3/depth" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get market orderbook",
        "description" : "Returns the order book of a given trading pair.",
        "operationId" : "getDepth",
        "parameters" : [ {
          "name" : "market",
          "in" : "query",
          "description" : "The ID of a trading pair.",
          "required" : true,
          "type" : "string",
          "x-example" : "LRC-ETH"
        }, {
          "name" : "level",
          "in" : "query",
          "description" : "Order book aggregation level, larger value means further price aggregation.",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 2
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum numbers of bids/asks.",
          "required" : false,
          "type" : "integer",
          "default" : 50,
          "format" : "int32",
          "x-example" : 50
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DepthV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "108000" : {
            "description" : "Unsupported market"
          },
          "108001" : {
            "description" : "Unsupported depth level"
          }
        }
      }
    },
    "/api/v3/ticker" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get market ticker",
        "description" : "Gets a markets ticker. Generally speaking, a ticker in Loopring consists in data from the market taken last 24Hours.",
        "operationId" : "getTicker",
        "parameters" : [ {
          "name" : "market",
          "in" : "query",
          "description" : "Market pair, support multiple markets",
          "required" : true,
          "type" : "string",
          "x-example" : "LRC-ETH,LRC-USDT"
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetTickerResponseV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "100001" : {
            "description" : "Invalid argument"
          }
        }
      }
    },
    "/api/v3/price" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get token fiat prices",
        "description" : "Fetches, for all the tokens supported by Loopring, their fiat price.",
        "operationId" : "getPrice",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "legal",
          "in" : "query",
          "description" : "The fiat currency to uses. Currently the following values are supported: USD,CNY,JPY,EUR,GBP,HKD",
          "required" : true,
          "type" : "string",
          "x-example" : "USD"
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPriceResponseV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          }
        }
      }
    },
    "/api/v3/trade" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get market recent trades",
        "description" : "Query trades with specified market",
        "operationId" : "getMarketTrade",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "market",
          "in" : "query",
          "description" : "Single market to query",
          "required" : true,
          "type" : "string",
          "x-example" : "LRC-USDT"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of queries",
          "required" : false,
          "type" : "integer",
          "default" : "None",
          "format" : "int32",
          "x-example" : 20
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetMarketTradesResponseV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          }
        }
      }
    },
    "/api/v3/candlestick" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get market candlestick",
        "description" : "Return the candlestick data of a given trading pair.",
        "operationId" : "getCandlestick",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "market",
          "in" : "query",
          "description" : "Trading pair ID, multi-market is not supported",
          "required" : true,
          "type" : "string",
          "x-example" : "LRC-ETH"
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "Candlestick interval, Supported values are: 1min, 5min, 15min, 30min, 1hr, 2hr, 4hr, 12hr, 1d, 1w",
          "required" : true,
          "type" : "string",
          "x-example" : "5min"
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time",
          "required" : false,
          "type" : "integer",
          "default" : "None",
          "format" : "int64",
          "x-example" : 1584479105000
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time",
          "required" : false,
          "type" : "integer",
          "default" : "None",
          "format" : "int64",
          "x-example" : 1584565505000
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of data points. If more data points are available, the API will only return the first 'limit' data points.",
          "required" : false,
          "type" : "integer",
          "default" : "None",
          "format" : "int32",
          "x-example" : 120
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetCandlestickResponseV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "100001" : {
            "description" : "Invalid argument"
          }
        }
      }
    },
    "/api/v3/account" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Query user information",
        "description" : "Returns data associated with the user's exchange account.",
        "operationId" : "getAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "owner",
          "in" : "query",
          "description" : "Ethereum address",
          "required" : true,
          "type" : "string",
          "x-example" : "0x123456"
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DexAccountV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "101001" : {
            "description" : "The address was not found"
          },
          "101002" : {
            "description" : "User not found"
          }
        }
      },
      "post" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Update account EDDSA key",
        "description" : "",
        "operationId" : "submitUpdateAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "api.submitUpdateAccount.implicit.value",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateAccountRequestV3"
          }
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SubmitOffChainRequestResponse"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "102001" : {
            "description" : "Exchange ID is incorrect"
          },
          "102021" : {
            "description" : "Nonce is invalid"
          },
          "102022" : {
            "description" : "Transfer sender is invalid"
          },
          "102023" : {
            "description" : "Transfer receiver is invalid"
          },
          "102024" : {
            "description" : "Fee token is unsupported"
          },
          "102025" : {
            "description" : "Transfer token isnt consistent with fee token"
          }
        }
      }
    },
    "/api/v3/apiKey" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get user ApiKey",
        "description" : "Get the ApiKey associated with the user's account.",
        "operationId" : "getApiKey",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "AccountID",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 10
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetApiKeyResponseV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "101002" : {
            "description" : "User not found"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          },
          "104004" : {
            "description" : "No signature information provided"
          },
          "104005" : {
            "description" : "Wrong signature information"
          }
        }
      },
      "post" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Update user's ApiKey",
        "description" : "Change the ApiKey associated with the user's account. The current ApiKey must be provided as the value of the X-API-KEY HTTP header.",
        "operationId" : "applyApiKey",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "api.applyApiKey.implicit.value",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GetApiKeyRequest"
          }
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetApiKeyResponseV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "101002" : {
            "description" : "User not found"
          },
          "100001" : {
            "description" : "Invalid argument"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          },
          "104004" : {
            "description" : "No signature information provided"
          },
          "104005" : {
            "description" : "Wrong signature information"
          }
        }
      }
    },
    "/api/v3/storageId" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "api.getNextStorageId.value",
        "description" : "api.getNextStorageId.notes",
        "operationId" : "getNextStorageId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "request.getNextStorageId.accountId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 1
        }, {
          "name" : "sellTokenId",
          "in" : "query",
          "description" : "request.getNextStorageId.sellTokenId",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 0
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/NextStorageIdResponse"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          }
        }
      }
    },
    "/api/v3/order" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get order details",
        "description" : "Get the details of an order based on order hash.",
        "operationId" : "getOrderDetail",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "Account ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 1
        }, {
          "name" : "orderHash",
          "in" : "query",
          "description" : "Order hash",
          "required" : true,
          "type" : "string",
          "x-example" : "13375450901292179417154974849571793069911517354720397125027633242680470075859"
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OrderDetailV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "107001" : {
            "description" : "User ID cannot be empty"
          },
          "107002" : {
            "description" : "Order Hash cannot be empty"
          },
          "107003" : {
            "description" : "Order does not exist"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          }
        }
      },
      "post" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Submit an order",
        "description" : "Submit an order",
        "operationId" : "submitOrderV3",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Submit order message body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SubmitOrderRequestV3"
          }
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SubmitOrderResponseItemV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "102001" : {
            "description" : "Exchange ID is incorrect"
          },
          "102002" : {
            "description" : "Unsupported TokenId in the order"
          },
          "102003" : {
            "description" : "Invalid account ID"
          },
          "102004" : {
            "description" : "Invalid order ID"
          },
          "102005" : {
            "description" : "Market does not support"
          },
          "102006" : {
            "description" : "Illegal rate field"
          },
          "102007" : {
            "description" : "Order already exists"
          },
          "102008" : {
            "description" : "Order has expired"
          },
          "102010" : {
            "description" : "Order is missing signature information"
          },
          "102011" : {
            "description" : "Insufficient user balance"
          },
          "102012" : {
            "description" : "The order amount is too small"
          },
          "102014" : {
            "description" : "Failed to freeze the amount, please try again later"
          },
          "102020" : {
            "description" : "Exceeded the maximum order amount"
          },
          "102027" : {
            "description" : "Submit order failed"
          },
          "102120" : {
            "description" : "Order is not valid"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          },
          "104004" : {
            "description" : "No signature information provided"
          },
          "104005" : {
            "description" : "Wrong signature information"
          }
        }
      },
      "delete" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Cancel order",
        "description" : "Cancel order using order hash or client-side ID.",
        "operationId" : "cancelOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "request.cancelOrder.accountId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 1
        }, {
          "name" : "orderHash",
          "in" : "query",
          "description" : "request.cancelOrder.orderHash",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "13375450901292179417154974849571793069911517354720397125027633242680470075859"
        }, {
          "name" : "clientOrderId",
          "in" : "query",
          "description" : "request.cancelOrder.clientOrderId",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "20200318000000001010"
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SubmitOrderResponseItemV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "102117" : {
            "description" : "No orders to cancel"
          },
          "102118" : {
            "description" : "Failed to cancel orders, please try again later"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          }
        }
      }
    },
    "/api/v3/orders" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get multiple orders",
        "description" : "Get a list of orders satisfying certain criteria.",
        "operationId" : "getOrders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "Account ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 1
        }, {
          "name" : "market",
          "in" : "query",
          "description" : "Trading pair",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "LRC-ETH"
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Lower bound of order's creation timestamp in millisecond",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1567053142000
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "Upper bound of order's creation timestamp in millisecond",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1567053242000
        }, {
          "name" : "side",
          "in" : "query",
          "description" : "\"BUY\" or \"SELL\"",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "BUY",
          "enum" : [ "BUY", "SELL" ]
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Order status. You can specify one of the following values:",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "processing,processed",
          "enum" : [ "processing", "processed", "failed", "cancelled", "cancelling", "expired" ]
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit of orders (default 50)",
          "required" : false,
          "type" : "integer",
          "default" : "None ",
          "format" : "int32",
          "x-example" : 50
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset of orders (default 0)",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 0
        }, {
          "name" : "orderTypes",
          "in" : "query",
          "description" : "request.getOrders.orderTypes",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "LIMIT_ORDER",
          "enum" : [ "LIMIT_ORDER", "MAKER_ONLY", "TAKER_ONLY", "AMM" ]
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OrdersDetailV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "107001" : {
            "description" : "User ID cannot be empty"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          }
        }
      }
    },
    "/api/v3/transfer" : {
      "post" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Submit internal transfer",
        "description" : "Submit internal transfer",
        "operationId" : "submitTransfer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Submit internal transfer post message body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OriginTransferRequestV3"
          }
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SubmitOffChainRequestResponse"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "102001" : {
            "description" : "Exchange ID is incorrect"
          },
          "102021" : {
            "description" : "Nonce is invalid"
          },
          "102022" : {
            "description" : "Transfer sender is invalid"
          },
          "102023" : {
            "description" : "Transfer receiver is invalid"
          },
          "102024" : {
            "description" : "Fee token is unsupported"
          },
          "102025" : {
            "description" : "Transfer token isnt consistent with fee token"
          }
        }
      }
    },
    "/api/v3/user/balances" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get user exchange balances",
        "description" : "Returns user's Ether and token balances on exchange.",
        "operationId" : "getUserBalances",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "AccountID",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 1
        }, {
          "name" : "tokens",
          "in" : "query",
          "description" : "Query tokens",
          "required" : false,
          "type" : "string",
          "x-example" : "0,1"
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BalanceV3"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          }
        }
      }
    },
    "/api/v3/user/deposits" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get user deposit history",
        "description" : "Returns a list of deposit records for the given user.",
        "operationId" : "getUserDeposits",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "Account ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 1
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time in milliseconds",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1578558098000
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time in milliseconds",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1578558098000
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Comma separated status values",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "processing,processed",
          "enum" : [ "processing", "processed", "received", "failed" ]
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of records to return",
          "required" : false,
          "type" : "integer",
          "default" : "None",
          "format" : "int32",
          "x-example" : 50
        }, {
          "name" : "tokenSymbol",
          "in" : "query",
          "description" : "Token to filter. If you want to return deposit records for all tokens, omit this parameter",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "ETH"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Number of records to skip",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DepositDataList"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "107001" : {
            "description" : "User ID cannot be empty"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          }
        }
      }
    },
    "/api/v3/user/withdrawals" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get user onchain withdrawal history",
        "description" : "Get user onchain withdrawal history.",
        "operationId" : "getUserWithdrawals",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "Account ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 1
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time in milliseconds",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1578558098000
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time in milliseconds",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1578558098000
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Comma separated status values",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "processing,processed",
          "enum" : [ "processing", "processed", "received", "failed" ]
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of records to return",
          "required" : false,
          "type" : "integer",
          "default" : "None",
          "format" : "int32",
          "x-example" : 50
        }, {
          "name" : "tokenSymbol",
          "in" : "query",
          "description" : "Token to filter. If you want to return deposit records for all tokens, omit this parameter",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "LRC"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Number of records to skip",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1
        }, {
          "name" : "withdrawalTypes",
          "in" : "query",
          "description" : "request.getUserTxs.withdrawalTypes",
          "required" : false,
          "type" : "string",
          "x-example" : "force_withdrawal",
          "enum" : [ "force_withdrawal", "offchain_withdrawal" ]
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OnchainWithdrawalDataList"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "107001" : {
            "description" : "User ID cannot be empty"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          }
        }
      },
      "post" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Submit offchain withdraw request",
        "description" : "Submit offchain withdraw request",
        "operationId" : "submitOffChainWithdrawal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Submit offchain withdraw request post message body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OffChainWithdrawalRequestV3"
          }
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SubmitOffChainRequestResponse"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "102001" : {
            "description" : "Exchange ID is incorrect"
          },
          "102021" : {
            "description" : "Nonce is invalid"
          },
          "102022" : {
            "description" : "Transfer sender is invalid"
          },
          "102023" : {
            "description" : "Transfer receiver is invalid"
          },
          "102024" : {
            "description" : "Fee token is unsupported"
          },
          "102025" : {
            "description" : "Transfer token isnt consistent with fee token"
          }
        }
      }
    },
    "/api/v3/user/transfers" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get user transfer list",
        "description" : "Get user transfer list.",
        "operationId" : "getUserTransfers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "Account ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 1
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time in milliseconds",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1578558098000
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time in milliseconds",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1578558098000
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Comma separated status values",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "processing,processed",
          "enum" : [ "processing", "processed", "received", "failed" ]
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of records to return",
          "required" : false,
          "type" : "integer",
          "default" : "None",
          "format" : "int32",
          "x-example" : 50
        }, {
          "name" : "tokenSymbol",
          "in" : "query",
          "description" : "Token to filter. If you want to return deposit records for all tokens, omit this parameter",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "LRC"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Number of records to skip",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1
        }, {
          "name" : "transferTypes",
          "in" : "query",
          "description" : "request.getUserTxs.transferTypes",
          "required" : false,
          "type" : "string",
          "x-example" : "transfer, transfer_red"
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferDataList"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "107001" : {
            "description" : "User ID cannot be empty"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          }
        }
      }
    },
    "/api/v3/user/createInfo" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get user registration transactions",
        "description" : "Returns a list Ethereum transactions from users for exchange account registration.",
        "operationId" : "getUserCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "Account ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 1
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time in milliseconds",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1578558098000
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time in milliseconds",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1578558098000
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Comma separated status values",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "processing,processed",
          "enum" : [ "processing", "processed", "received", "failed" ]
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of records to return",
          "required" : false,
          "type" : "integer",
          "default" : "None",
          "format" : "int32",
          "x-example" : 50
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Number of records to skip",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserCreateDataList"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "107001" : {
            "description" : "User ID cannot be empty"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          }
        }
      }
    },
    "/api/v3/user/updateInfo" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get password reset transactions",
        "description" : "Returns a list Ethereum transactions from users for resetting exchange passwords.",
        "operationId" : "getUserUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "Account ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 1
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start time in milliseconds",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1578558098000
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End time in milliseconds",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1578558098000
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Comma separated status values",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "processing,processed",
          "enum" : [ "processing", "processed", "received", "failed" ]
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of records to return",
          "required" : false,
          "type" : "integer",
          "default" : "None",
          "format" : "int32",
          "x-example" : 50
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Number of records to skip",
          "required" : false,
          "type" : "integer",
          "default" : "0L",
          "format" : "int64",
          "x-example" : 1
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserAccountUpdateDataList"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "107001" : {
            "description" : "User ID cannot be empty"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          }
        }
      }
    },
    "/api/v3/user/trades" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get user trade history",
        "description" : "Get user trade history.",
        "operationId" : "getUserTrades",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "Account ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 1
        }, {
          "name" : "market",
          "in" : "query",
          "description" : "request.getUserTxs.market",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "LRC-ETH"
        }, {
          "name" : "orderHash",
          "in" : "query",
          "description" : "request.getUserTxs.orderHash",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "0x9d114267e8b261457d567093c13cf3deea5f14c9235be26c6fa833dba12a9632"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Number of records to skip",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32",
          "x-example" : 1
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of records to return",
          "required" : false,
          "type" : "integer",
          "default" : "None",
          "format" : "int32",
          "x-example" : 50
        }, {
          "name" : "fromId",
          "in" : "query",
          "description" : "request.getUserTxs.fromId",
          "required" : false,
          "type" : "integer",
          "default" : "None",
          "format" : "int64",
          "x-example" : 1
        }, {
          "name" : "fillTypes",
          "in" : "query",
          "description" : "request.getUserTxs.fillTypes",
          "required" : false,
          "type" : "string",
          "default" : "None",
          "x-example" : "dex",
          "enum" : [ "dex", "amm" ]
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TradeList"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          },
          "104001" : {
            "description" : "Empty ApiKey"
          },
          "104002" : {
            "description" : "Invalid ApiKey"
          },
          "104003" : {
            "description" : "Invalid Account ID"
          }
        }
      }
    },
    "/api/v3/user/feeRates" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Query user place order fee rate",
        "description" : "Returns the fee rate of users placing orders in specific markets",
        "operationId" : "getUserFeeRates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "Account ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 1
        }, {
          "name" : "markets",
          "in" : "query",
          "description" : "List of markets to be queried separated by \",\"",
          "required" : true,
          "type" : "string",
          "x-example" : "LRC-USDT,LRC-ETH"
        } ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FeeRate"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          }
        }
      }
    },
    "/api/v3/exchange/info" : {
      "get" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Get exchange configurations",
        "description" : "Return various configurations of Loopring.io",
        "operationId" : "getExchangeInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "0" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ExchangeInfo"
            }
          },
          "100000" : {
            "description" : "Unknown error"
          }
        }
      }
    },
    "/api/v3/amm/join" : {
      "post" : {
        "tags" : [ "Loopring DEX Restful API" ],
        "summary" : "Join token into AMM market",
        "description" : "Return the join request processing status",
        "operationId" : "submitAmmPoolJoin",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "api.AmmPoolJoinRequest.implicit.value",
   